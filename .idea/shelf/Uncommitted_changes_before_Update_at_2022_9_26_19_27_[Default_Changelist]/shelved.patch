Index: app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pr.perfectrecovery.activity\r\n\r\nimport android.Manifest\r\nimport android.app.AlertDialog\r\nimport android.app.PendingIntent\r\nimport android.bluetooth.BluetoothAdapter\r\nimport android.bluetooth.BluetoothGatt\r\nimport android.content.BroadcastReceiver\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.IntentFilter\r\nimport android.content.pm.PackageManager\r\nimport android.hardware.usb.UsbDevice\r\nimport android.hardware.usb.UsbDeviceConnection\r\nimport android.hardware.usb.UsbManager\r\nimport android.location.LocationManager\r\nimport android.os.*\r\nimport android.provider.Settings\r\nimport android.text.TextUtils\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.blankj.utilcode.util.GsonUtils\r\nimport com.blankj.utilcode.util.LogUtils\r\nimport com.blankj.utilcode.util.ToastUtils\r\nimport com.chad.library.adapter.base.BaseQuickAdapter\r\nimport com.chad.library.adapter.base.listener.OnItemClickListener\r\nimport com.chad.library.adapter.base.viewholder.BaseViewHolder\r\nimport com.clj.fastble.BleManager\r\nimport com.clj.fastble.callback.*\r\nimport com.clj.fastble.data.BleDevice\r\nimport com.clj.fastble.exception.BleException\r\nimport com.clj.fastble.scan.BleScanRuleConfig\r\nimport com.clj.fastble.utils.HexUtil\r\nimport com.hoho.android.usbserial.driver.*\r\nimport com.hoho.android.usbserial.util.SerialInputOutputManager\r\nimport com.pr.perfectrecovery.BaseApplication\r\nimport com.pr.perfectrecovery.R\r\nimport com.pr.perfectrecovery.adapter.DeviceBluetoothAdapter\r\nimport com.pr.perfectrecovery.base.BaseActivity\r\nimport com.pr.perfectrecovery.base.BaseConstant\r\nimport com.pr.perfectrecovery.bean.BaseDataDTO\r\nimport com.pr.perfectrecovery.bean.ConfigBean\r\nimport com.pr.perfectrecovery.bean.MessageEventData\r\nimport com.pr.perfectrecovery.comm.ObserverManager\r\nimport com.pr.perfectrecovery.databinding.ActivityCpractivityBinding\r\nimport com.pr.perfectrecovery.databinding.ItemBluetoothBinding\r\nimport com.pr.perfectrecovery.livedata.StatusLiveData\r\nimport com.pr.perfectrecovery.utils.ConvertUtil\r\nimport com.pr.perfectrecovery.utils.DataVolatile01\r\nimport com.pr.perfectrecovery.utils.FileUtils\r\nimport com.tencent.mmkv.MMKV\r\nimport org.greenrobot.eventbus.EventBus\r\nimport org.greenrobot.eventbus.Subscribe\r\nimport org.greenrobot.eventbus.ThreadMode\r\nimport java.io.IOException\r\nimport java.util.*\r\n\r\n\r\n/**\r\n * CPR页面  蓝夜列表扫描链接\r\n */\r\nclass CPRActivity : BaseActivity(), SerialInputOutputManager.Listener {\r\n    private lateinit var viewBinding: ActivityCpractivityBinding\r\n    private var isRefresh = false\r\n    private val mDeviceAdapter = DeviceBluetoothAdapter()\r\n    private var bleList = mutableListOf<BleDevice>()\r\n    private var connectList = arrayListOf<BleDevice>()\r\n    private var isInitValueMap = mutableMapOf<String, Boolean>()\r\n\r\n    companion object {\r\n        fun getCustomProber(): UsbSerialProber {\r\n            val customTable = ProbeTable()\r\n            customTable.addProduct(\r\n                0x16d0,\r\n                0x087e,\r\n                CdcAcmSerialDriver::class.java\r\n            ) // e.g. Digispark CDC\r\n            return UsbSerialProber(customTable)\r\n        }\r\n    }\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        viewBinding = ActivityCpractivityBinding.inflate(layoutInflater)\r\n        setContentView(viewBinding.root)\r\n        EventBus.getDefault().register(this)\r\n        initView()\r\n        //初始化蓝牙管理器\r\n        initBluetooth()\r\n        initBle()\r\n        mainLooper = Handler(Looper.getMainLooper())\r\n        viewBinding.cbBle.isChecked = true\r\n        registerReceiver(\r\n            broadcastReceiver,\r\n            IntentFilter(INTENT_ACTION_GRANT_USB)\r\n        )\r\n    }\r\n\r\n\r\n    private fun initView() {\r\n        val jsonString = MMKV.defaultMMKV().decodeString(BaseConstant.MMKV_WM_CONFIGURATION)\r\n        val configBean = GsonUtils.fromJson(jsonString, ConfigBean::class.java)\r\n        DataVolatile01.PR_HIGH_VALUE = configBean.prHigh()\r\n        DataVolatile01.PR_LOW_VALUE = configBean.prLow()\r\n        DataVolatile01.QY_HIGH_VALUE = configBean.tidalVolumeEnd\r\n        DataVolatile01.QY_LOW_VALUE = configBean.tidalVolume\r\n        DataVolatile01.PR_DEFAULT_TIMES = configBean.prCount\r\n        DataVolatile01.QY_DEFAULT_TIMES = configBean.qyCount\r\n        //searchBle()\r\n        //查看是否有蓝牙权限\r\n        checkPermissions()\r\n        viewBinding.bottom.ivBack.setOnClickListener { finish() }\r\n        viewBinding.bottom.tvContinue.setOnClickListener {\r\n            startActivity(Intent(this, ConfigActivity::class.java))\r\n        }\r\n\r\n        viewBinding.recyclerview.layoutManager = LinearLayoutManager(this)\r\n        // 是否抵用滚动事件监听\r\n        //layoutManager.setChangeSelectInScrolling(false)\r\n        viewBinding.recyclerview.adapter = bluetoothAdapter\r\n\r\n        viewBinding.bottom.ivStart.setOnClickListener {\r\n            val intent = Intent(this, TrainingSingleActivity::class.java)\r\n            connectList.clear()\r\n            connectList.addAll(bleList)\r\n            connectList.distinctBy { listOf(it.mac, it.mac) }\r\n            intent.putParcelableArrayListExtra(BaseConstant.CONNECT_BLE_DEVICES, connectList)\r\n            startActivity(intent)\r\n        }\r\n\r\n        viewBinding.progressCircular.setOnClickListener {\r\n//            BaseApplication.driver?.ResumeUsbList()\r\n            searchBle()\r\n        }\r\n        viewBinding.recyclerview.adapter = mDeviceAdapter\r\n        mDeviceAdapter.setOnItemClickListener(itemClick)\r\n\r\n        viewBinding.cbUsb.setOnCheckedChangeListener { buttonView, isChecked ->\r\n            if (isChecked) {\r\n                openUsbDevice()\r\n                mDeviceAdapter.setList(null)\r\n                unBindBluetooth()\r\n                viewBinding.cbBle.isChecked = !isChecked\r\n                viewBinding.cbUsb.isChecked = isChecked\r\n                disconnectUsb()\r\n                refresh()\r\n            }\r\n        }\r\n\r\n        viewBinding.cbBle.setOnCheckedChangeListener { buttonView, isChecked ->\r\n            if (isChecked) {\r\n                disconnectUsb()\r\n                mDeviceAdapter.setList(null)\r\n                BaseApplication.driver?.CloseDevice()\r\n                searchBle()\r\n                viewBinding.cbUsb.isChecked = !isChecked\r\n                viewBinding.cbBle.isChecked = isChecked\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 读取蓝牙写入\r\n     */\r\n    private fun bleRead(bleDevice: BleDevice) {\r\n        val gatt = BleManager.getInstance().getBluetoothGatt(mBleDevice)\r\n        val services = gatt.services\r\n        val bluetoothGattService = services[0]\r\n        val characteristic = bluetoothGattService.characteristics[0]\r\n        BleManager.getInstance().read(\r\n            bleDevice,\r\n            characteristic?.service?.uuid.toString(),\r\n            characteristic?.uuid.toString(),\r\n            object : BleReadCallback() {\r\n                override fun onReadSuccess(data: ByteArray) {\r\n                    val formatHexString = HexUtil.formatHexString(data)\r\n                    Log.e(\"bleConnect\", \"onReadSuccess: $formatHexString\")\r\n                    if (!TextUtils.isEmpty(formatHexString)\r\n                        && formatHexString.substring(formatHexString.length - 2) == \"01\"\r\n                    ) {\r\n                        //连接成功\r\n                        Log.e(\"bleConnect\", \"onReadSuccess: 成功\")\r\n                    } else {\r\n                        //连接失败\r\n                        Log.e(\"bleConnect\", \"onReadSuccess: 失败\")\r\n                    }\r\n                    //runOnUiThread { addText(txt, HexUtil.formatHexString(data, true)) }\r\n                }\r\n\r\n                override fun onReadFailure(exception: BleException) {\r\n                    //runOnUiThread { addText(txt, exception.toString()) }\r\n                    //连接异常 == 失败\r\n                    Log.e(\"bleConnect\", \"onReadFailure: ${exception.description}\")\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * 写入蓝牙\r\n     * code 03 开始 04 结束\r\n     */\r\n    private val OPEN = \"03\"\r\n    private val END = \"04\"\r\n    private val CONNECT_SUCCESS = \"01\"\r\n    private val CONNECT_FAIL = \"02\"\r\n    private fun bleWrite(bleDevice: BleDevice, code: String?) {\r\n        if (mBleDevice == null) {\r\n            ToastUtils.showShort(\"未连接蓝牙，请重新连接。\")\r\n        }\r\n        if (TextUtils.isEmpty(bleDevice.mac)) {\r\n            return\r\n        }\r\n        var mac = bleDevice.mac.replace(\":\", \"\").lowercase(Locale.getDefault())\r\n        mac = \"fefa\" + mac.substring(mac.length - 8, mac.length)\r\n        //拼接发送\r\n        if (!TextUtils.isEmpty(code)) {\r\n            mac += code\r\n        }\r\n        Log.e(\"bleConnect\", \"bleWrite: $mac\")\r\n        Log.e(\"bleConnect\", \"hexStringToBytes: ${HexUtil.hexStringToBytes(mac).toString()}\")\r\n        //监听当前蓝牙是否写入\r\n        val gatt = BleManager.getInstance().getBluetoothGatt(mBleDevice)\r\n        val services = gatt.services\r\n        val bluetoothGattService = services[2]\r\n        val characteristic = bluetoothGattService.characteristics[0]\r\n        BleManager.getInstance().write(\r\n            mBleDevice,\r\n            characteristic?.service?.uuid.toString(),\r\n            characteristic?.uuid.toString(),\r\n            HexUtil.hexStringToBytes(mac),\r\n            object : BleWriteCallback() {\r\n                override fun onWriteSuccess(current: Int, total: Int, justWrite: ByteArray) {\r\n                    Log.e(\"bleConnect\", \"onWriteSuccess: current${current}-  total $total\")\r\n                    setBleDevice(bleDevice)\r\n                    //Handler().postDelayed({ searchBle() }, 3000)\r\n                    bleRead(mBleDevice!!)\r\n                }\r\n\r\n                override fun onWriteFailure(exception: BleException) {\r\n                    Log.e(\"bleConnect\", \"onWriteFailure: \" + exception.description)\r\n                }\r\n            })\r\n    }\r\n\r\n    private fun setBleDevice(bleDevice: BleDevice) {\r\n        count++\r\n        //处理已连接的设备靠前\r\n        mDeviceAdapter.remove(bleDevice)\r\n        bleDevice.isConnected = true\r\n        bleDevice.isLoading = false\r\n        bleDevice.count = count\r\n        //添加已连接蓝牙\r\n        if (mDeviceAdapter.data.size == 0) {\r\n            mDeviceAdapter.addData(bleDevice)\r\n        } else {\r\n            if (count - 1 <= mDeviceAdapter.data.size) {\r\n                mDeviceAdapter.addData(count - 1, bleDevice)\r\n            } else {\r\n                mDeviceAdapter.addData(bleDevice)\r\n            }\r\n        }\r\n        //                viewBinding.textView.text = \"$count\"\r\n        bleList.add(bleDevice)\r\n        bleList = removeDuplicate()\r\n        viewBinding.tvConnections.text = \"设备连接数：${bleList.size}\"\r\n    }\r\n\r\n    private fun removeDuplicate(): MutableList<BleDevice> {\r\n        val set: MutableSet<BleDevice> = LinkedHashSet<BleDevice>()\r\n        set.addAll(bleList)\r\n        bleList.clear()\r\n        bleList.addAll(set)\r\n        return bleList\r\n    }\r\n\r\n    private fun searchBle() {\r\n        val bluetoothAdapter = BluetoothAdapter.getDefaultAdapter()\r\n        if (!bluetoothAdapter.isEnabled) {\r\n            Toast.makeText(this, getString(R.string.please_open_blue), Toast.LENGTH_LONG)\r\n                .show()\r\n        } else {\r\n            mDeviceAdapter.setList(null)\r\n            if (!isRefresh) {\r\n                viewBinding.tvMsg.visibility = View.INVISIBLE\r\n                startRefresh()\r\n                checkPermissions()\r\n                isRefresh = true\r\n            } else {\r\n                isRefresh = false\r\n                stopRefresh()\r\n                //取消扫描蓝牙设备\r\n                BleManager.getInstance().cancelScan()\r\n            }\r\n        }\r\n    }\r\n\r\n    @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\r\n    public fun onEvent(event: MessageEventData) {\r\n        when (event.code) {\r\n            BaseConstant.EVENT_CPR_START -> {\r\n                clearMap()\r\n                isInitValueMap.clear()\r\n//                bindBluetooth()\r\n                isStart = true\r\n                if (mBleDevice != null) {\r\n                    bleWrite(mBleDevice!!, OPEN)\r\n                }\r\n//                if (usbPermission == UsbPermission.Unknown || usbPermission == UsbPermission.Granted){\r\n                mainLooper!!.post { connectUsb() }\r\n//                }\r\n            }\r\n            BaseConstant.EVENT_CPR_BLE_CLOSE -> {\r\n                if (mBleDevice != null) {\r\n                    bleWrite(mBleDevice!!, END)\r\n                }\r\n                clearMap()\r\n                FileUtils.saveThrowableMessage(sb.toString())\r\n            }\r\n            BaseConstant.EVENT_CPR_STOP -> {\r\n                isStart = false\r\n                //unBindBluetooth()\r\n                disconnectUsb()\r\n                if (mBleDevice != null) {\r\n                    bleWrite(mBleDevice!!, END)\r\n                }\r\n                //清空当前map数据\r\n                clearMap()\r\n            }\r\n            BaseConstant.EVENT_CPR_CLEAR -> {\r\n                //清空当前map数据\r\n                clearMap()\r\n            }\r\n            BaseConstant.CLEAR_DEVICE_HISTORY_DATA -> {\r\n                deviceCount = 0\r\n                unBindBluetooth()\r\n                Log.e(\"hunger_test_clear\", \" recieve message\")\r\n                //清空当前map数据\r\n                clearMap()\r\n                dataMap.clear()\r\n                isInitValueMap.clear()\r\n                Log.e(\"hunger_test_clear\", \" clear done\")\r\n            }\r\n            BaseConstant.EVENT_DO_BIND -> {\r\n                isInitValueMap.clear()\r\n                bindBluetooth()\r\n            }\r\n            BaseConstant.EVENT_DO_MULTI_START -> {\r\n                clearMap()\r\n                isMulti = true\r\n                isStart = true\r\n                if (mBleDevice != null) {\r\n                    bleWrite(mBleDevice!!, OPEN)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun clearMap() {\r\n        dataDTO = BaseDataDTO()\r\n        dataMap.values.forEach { item ->\r\n            item.dataClear()\r\n            dataMap.remove(item.deviceMAC)\r\n        }\r\n        dataMap.clear()\r\n    }\r\n\r\n    private fun bindBluetooth() {\r\n        unBindBluetooth()\r\n        bleList.forEach {\r\n            bind(it)\r\n        }\r\n    }\r\n\r\n    private fun unBindBluetooth() {\r\n        bleList.forEach {\r\n            unBind(it)\r\n        }\r\n    }\r\n\r\n    private val itemClick =\r\n        OnItemClickListener { adapter, view, position ->\r\n            if (isItemClickable) {\r\n                viewBinding.tvMsg.visibility = View.INVISIBLE\r\n                val bleDevice = mDeviceAdapter.getItem(position)\r\n                if (bleDevice.getmUsbSerialDriver() != null) {\r\n                    connectUsb()\r\n                } else {\r\n                    if (!BleManager.getInstance().isConnected(bleDevice)) {\r\n                        if (count >= 6) {//处理提示语设备连接过多提示\r\n                            viewBinding.tvMsg.text = \"当前版本最多同时支持6台模型\"\r\n                            hintHandler.postDelayed(this::setTextNull, 2000)\r\n                        }\r\n                        BleManager.getInstance().cancelScan()\r\n                        val bleBluetooth = BleManager.getInstance().getBleBluetooth(bleDevice)\r\n                        if (mBleDevice != null) {\r\n                            bleWrite(bleDevice, \"\")\r\n                        } else {\r\n                            connectUsb(bleDevice, position)\r\n                        }\r\n                    } else {\r\n                        BleManager.getInstance().disconnect(bleDevice)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    private val hintHandler = object : Handler(Looper.getMainLooper()) {\r\n        override fun handleMessage(msg: Message) {\r\n            super.handleMessage(msg)\r\n        }\r\n    }\r\n\r\n    private fun setTextNull() {\r\n        viewBinding.tvMsg.text = \"\"\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        refresh()\r\n        if (usbPermission == UsbPermission.Unknown || usbPermission == UsbPermission.Granted) {\r\n//            mainLooper!!.post { connectUsb() }\r\n        }\r\n    }\r\n\r\n    override fun onPause() {\r\n//        if (connected) {\r\n//            LogUtils.e(\"disconnected\")\r\n//            disconnectUsb()\r\n//        }\r\n//        unregisterReceiver(broadcastReceiver)\r\n        super.onPause()\r\n        sb = StringBuffer()\r\n    }\r\n\r\n    private fun initBluetooth() {\r\n        BleManager.getInstance().init(application)\r\n        BleManager.getInstance()\r\n            .enableLog(true)\r\n            .setReConnectCount(1, 5000)\r\n            .setConnectOverTime(5000)\r\n            .operateTimeout = 5000\r\n    }\r\n\r\n    private val REQUEST_CODE_OPEN_GPS = 1\r\n    private val REQUEST_CODE_PERMISSION_LOCATION = 2\r\n    private fun checkPermissions() {\r\n        val bluetoothAdapter = BluetoothAdapter.getDefaultAdapter()\r\n        if (bluetoothAdapter != null && !bluetoothAdapter.isEnabled) {\r\n            Toast.makeText(this, getString(R.string.please_open_blue), Toast.LENGTH_LONG).show()\r\n            return\r\n        }\r\n        val permissions = arrayOf(Manifest.permission.ACCESS_FINE_LOCATION)\r\n        val permissionDeniedList: MutableList<String> = ArrayList()\r\n        for (permission in permissions) {\r\n            val permissionCheck = ContextCompat.checkSelfPermission(this, permission)\r\n            if (permissionCheck == PackageManager.PERMISSION_GRANTED) {\r\n                onPermissionGranted(permission)\r\n            } else {\r\n                permissionDeniedList.add(permission)\r\n            }\r\n        }\r\n        if (permissionDeniedList.isNotEmpty()) {\r\n            val deniedPermissions = permissionDeniedList.toTypedArray()\r\n            ActivityCompat.requestPermissions(\r\n                this,\r\n                deniedPermissions,\r\n                REQUEST_CODE_PERMISSION_LOCATION\r\n            )\r\n        }\r\n    }\r\n\r\n    private val bluetoothAdapter = object :\r\n        BaseQuickAdapter<BleDevice, BaseViewHolder>(R.layout.item_bluetooth) {\r\n        override fun convert(holder: BaseViewHolder, item: BleDevice) {\r\n            val bind = ItemBluetoothBinding.bind(holder.itemView)\r\n            bind.tvBluetoothName.text = item.name\r\n            bind.tvBluetoothStatus.text = \"未连接\"\r\n        }\r\n    }\r\n\r\n    private fun onPermissionGranted(permission: String) {\r\n        when (permission) {\r\n            Manifest.permission.ACCESS_FINE_LOCATION -> if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && !checkGPSIsOpen()) {\r\n                AlertDialog.Builder(this)\r\n                    .setTitle(R.string.notifyTitle)\r\n                    .setMessage(R.string.gpsNotifyMsg)\r\n                    .setNegativeButton(\r\n                        R.string.cancel\r\n                    ) { dialog, which -> finish() }\r\n                    .setPositiveButton(\r\n                        R.string.setting\r\n                    ) { dialog, which ->\r\n                        val intent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)\r\n                        startActivityForResult(intent, REQUEST_CODE_OPEN_GPS)\r\n                    }\r\n                    .setCancelable(false)\r\n                    .show()\r\n            } else {\r\n                initBle()\r\n                startScan()\r\n            }\r\n        }\r\n    }\r\n\r\n    private var isItemClickable = true\r\n    private var count = 0\r\n    private fun connectUsb(bleDevice: BleDevice, position: Int) {\r\n        BleManager.getInstance()\r\n            .setConnectOverTime(5000)\r\n            .setOperateTimeout(5000)\r\n            .connect(bleDevice, object : BleGattCallback() {\r\n                override fun onStartConnect() {\r\n                    isItemClickable = false\r\n                    bleDevice.isLoading = true\r\n                    mDeviceAdapter.remove(bleDevice)\r\n                    mDeviceAdapter.addData(position, bleDevice)\r\n                }\r\n\r\n                override fun onConnectFail(bleDevice: BleDevice, exception: BleException) {\r\n                    bleDevice.isLoading = false\r\n                    bleDevice.isConnected = false\r\n                    mDeviceAdapter.remove(bleDevice)\r\n                    mDeviceAdapter.addData(position, bleDevice)\r\n                    isItemClickable = true\r\n                    mBleDevice = null\r\n                    if (exception.code == BleException.ERROR_CODE_TIMEOUT) {\r\n                        viewBinding.tvMsg.text = \"连接超时，请重新连接\"\r\n                    } else {\r\n                        viewBinding.tvMsg.text = \"连接失败，请重新连接\"\r\n                    }\r\n                }\r\n\r\n                override fun onConnectSuccess(\r\n                    bleDevice: BleDevice,\r\n                    gatt: BluetoothGatt,\r\n                    status: Int\r\n                ) {\r\n                    count++\r\n                    //处理已连接的设备靠前\r\n                    mDeviceAdapter.remove(bleDevice)\r\n                    bleDevice.isConnected = true\r\n                    bleDevice.isLoading = false\r\n                    bleDevice.count = count\r\n                    //添加已连接蓝牙\r\n                    if (mDeviceAdapter.data.size == 0) {\r\n                        mDeviceAdapter.addData(bleDevice)\r\n                    } else {\r\n                        if (count - 1 <= mDeviceAdapter.data.size) {\r\n                            mDeviceAdapter.addData(count - 1, bleDevice)\r\n                        } else {\r\n                            mDeviceAdapter.addData(bleDevice)\r\n                        }\r\n                    }\r\n//                viewBinding.textView.text = \"$count\"\r\n                    bleList.add(bleDevice)\r\n                    viewBinding.tvConnections.text = \"设备连接数：${count}\"\r\n                    bind(bleDevice)\r\n                    mBleDevice = bleDevice\r\n                    isItemClickable = true\r\n                    isRefreshPower = true\r\n                }\r\n\r\n                override fun onDisConnected(\r\n                    isActiveDisConnected: Boolean,\r\n                    bleDevice: BleDevice,\r\n                    gatt: BluetoothGatt,\r\n                    status: Int\r\n                ) {\r\n                    count--\r\n                    mBleDevice = null\r\n                    bleList.remove(bleDevice)\r\n                    if (isActiveDisConnected) {\r\n                        ToastUtils.showLong(bleDevice.name + getString(R.string.active_disconnected))\r\n                    } else {\r\n                        ToastUtils.showLong(bleDevice.name + getString(R.string.disconnected))\r\n                        ObserverManager.getInstance().notifyObserver(bleDevice)\r\n                    }\r\n                    EventBus.getDefault()\r\n                        .post(\r\n                            MessageEventData(\r\n                                BaseConstant.DEVICE_DISCONNECTED,\r\n                                bleDevice.mac,\r\n                                null\r\n                            )\r\n                        )\r\n                    viewBinding.tvConnections.text = \"设备连接数：${count}\"\r\n\r\n                    //断开蓝牙连接\r\n                    if (BleManager.getInstance().isConnected(bleDevice)) {\r\n                        BleManager.getInstance().disconnect(bleDevice)\r\n                    }\r\n                    if (count == 0) {\r\n                        EventBus.getDefault()\r\n                            .post(\r\n                                MessageEventData(\r\n                                    BaseConstant.EVENT_CPR_DISCONNENT,\r\n                                    \"\",\r\n                                    null\r\n                                )\r\n                            )\r\n                    }\r\n                    val newList = mutableListOf<BleDevice>()\r\n                    for (item in mDeviceAdapter.data) {\r\n                        if (item.count > bleDevice.count) {\r\n                            item.count--\r\n                        }\r\n                        newList.add(item)\r\n                    }\r\n                    unBind(bleDevice)\r\n                    mDeviceAdapter.remove(bleDevice)\r\n                    newList.remove(bleDevice)\r\n                    bleDevice.isConnected = false\r\n                    bleDevice.isLoading = false\r\n                    bleDevice.count = 0\r\n                    newList.add(bleDevice)\r\n                    mDeviceAdapter.setList(dedupList(newList))\r\n//                    refresh()\r\n                    isItemClickable = true\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * 去重\r\n     */\r\n    private fun dedupList(list: MutableList<BleDevice>?): MutableList<BleDevice>? {\r\n        list?.distinctBy { listOf(it.mac, it.mac) }\r\n        return list\r\n    }\r\n\r\n    private fun initBle() {\r\n        val uuids: Array<String>?\r\n//        val str_uuid: String = et_uuid.getText().toString()\r\n        val str_uuid: String = \"\"\r\n        uuids = if (TextUtils.isEmpty(str_uuid)) {\r\n            null\r\n        } else {\r\n            str_uuid.split(\",\").toTypedArray()\r\n        }\r\n        var serviceUuids: Array<UUID?>? = null\r\n        if (uuids != null && uuids.isNotEmpty()) {\r\n            serviceUuids = arrayOfNulls(uuids.size)\r\n            for (i in uuids.indices) {\r\n                val name = uuids[i]\r\n                val components = name.split(\"-\").toTypedArray()\r\n                if (components.size != 5) {\r\n                    serviceUuids[i] = null\r\n                } else {\r\n                    serviceUuids[i] = UUID.fromString(uuids[i])\r\n                }\r\n            }\r\n        }\r\n\r\n        val names = arrayOf(\"WMFS\", \"D87A\")\r\n        val mac: String = \"\"\r\n        val isAutoConnect: Boolean = false\r\n        val scanRuleConfig = BleScanRuleConfig.Builder()\r\n            .setServiceUuids(serviceUuids) // 只扫描指定的服务的设备，可选\r\n            .setDeviceName(true, *names) // 只扫描指定广播名的设备，可选\r\n            .setDeviceMac(mac) // 只扫描指定mac的设备，可选\r\n            .setAutoConnect(isAutoConnect) // 连接时的autoConnect参数，可选，默认false\r\n            .setScanTimeOut(5000) // 扫描超时时间，可选，默认10秒\r\n            .build()\r\n        BleManager.getInstance().initScanRule(scanRuleConfig)\r\n    }\r\n\r\n    private fun startScan() {\r\n//        viewBinding.tvModelNum.visibility = View.INVISIBLE\r\n        BleManager.getInstance().scan(object : BleScanCallback() {\r\n            override fun onScanStarted(success: Boolean) {\r\n                //已连接的蓝牙添加进来\r\n                val deviceList = BleManager.getInstance().allConnectedDevice\r\n                mDeviceAdapter.data.clear()\r\n                mDeviceAdapter.setList(dedupList(deviceList))\r\n            }\r\n\r\n            override fun onLeScan(bleDevice: BleDevice) {\r\n                super.onLeScan(bleDevice)\r\n            }\r\n\r\n            override fun onScanning(bleDevice: BleDevice) {\r\n                //处理重复蓝牙问题\r\n                if (mDeviceAdapter.data.isNotEmpty()) {\r\n                    mDeviceAdapter.data.forEach { item ->\r\n                        if (bleDevice.mac == item.mac) {\r\n                            mDeviceAdapter.remove(item)\r\n                        }\r\n                    }\r\n                }\r\n                mDeviceAdapter.addData(bleDevice)\r\n                mDeviceAdapter.notifyDataSetChanged()\r\n            }\r\n\r\n            override fun onScanFinished(scanResultList: List<BleDevice>) {\r\n                mDeviceAdapter.data.let {\r\n                    if (it.size == 0) {\r\n                        viewBinding.tvMsg.visibility = View.VISIBLE\r\n                    }\r\n                }\r\n                stopRefresh()\r\n                isRefresh = false\r\n            }\r\n        })\r\n    }\r\n\r\n    override fun onRequestPermissionsResult(\r\n        requestCode: Int,\r\n        permissions: Array<String?>,\r\n        grantResults: IntArray\r\n    ) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r\n        when (requestCode) {\r\n            REQUEST_CODE_PERMISSION_LOCATION -> if (grantResults.size > 0) {\r\n                var i = 0\r\n                while (i < grantResults.size) {\r\n                    if (grantResults[i] == PackageManager.PERMISSION_GRANTED) {\r\n                        permissions[i]?.let { onPermissionGranted(it) }\r\n                    }\r\n                    i++\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun checkGPSIsOpen(): Boolean {\r\n        val locationManager = this.getSystemService(LOCATION_SERVICE) as LocationManager\r\n            ?: return false\r\n        return locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n        if (requestCode == REQUEST_CODE_OPEN_GPS) {\r\n            if (checkGPSIsOpen()) {\r\n//                initBle()\r\n                startScan()\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始刷新动画\r\n     */\r\n    private fun startRefresh() {\r\n        viewBinding.tvDesc.setText(R.string.searching_for_available_models)\r\n        viewBinding.progressCircular.indeterminateDrawable =\r\n            resources.getDrawable(R.drawable.progressbar_circle)\r\n        viewBinding.progressCircular.progressDrawable =\r\n            resources.getDrawable(R.drawable.progressbar_circle)\r\n    }\r\n\r\n    /**\r\n     * 停止刷新动画\r\n     */\r\n    private fun stopRefresh() {\r\n        viewBinding.tvDesc.setText(R.string.available_models)\r\n        viewBinding.progressCircular.indeterminateDrawable =\r\n            resources.getDrawable(R.drawable.icon_wm_refresh)\r\n        viewBinding.progressCircular.progressDrawable =\r\n            resources.getDrawable(R.drawable.icon_wm_refresh)\r\n    }\r\n\r\n    private fun unBind(bleDevice: BleDevice) {\r\n        val gatt = BleManager.getInstance().getBluetoothGatt(bleDevice) ?: return\r\n        //蓝牙服务列表\r\n        val services = gatt.services\r\n        val bluetoothGattService = services[2]\r\n        val characteristic = bluetoothGattService.characteristics[1]\r\n        BleManager.getInstance().stopNotify(\r\n            bleDevice,\r\n            characteristic.service.uuid.toString(),\r\n            characteristic.uuid.toString()\r\n        )\r\n//        mBleDevice = null\r\n    }\r\n\r\n    private var mBleDevice: BleDevice? = null\r\n\r\n    //    var deviceCount = 0\r\n    private fun bind(bleDevice: BleDevice?) {\r\n        val gatt = BleManager.getInstance().getBluetoothGatt(bleDevice) ?: return\r\n        //蓝牙服务列表\r\n        val services = gatt.services\r\n        val bluetoothGattService = services[2]\r\n        val characteristic = bluetoothGattService.characteristics[1]\r\n        BleManager.getInstance().notify(\r\n            bleDevice,\r\n            characteristic?.service?.uuid.toString(),\r\n            characteristic?.uuid.toString(),\r\n            object : BleNotifyCallback() {\r\n                override fun onNotifySuccess() {\r\n                    mBleDevice = bleDevice\r\n//                    deviceCount++\r\n//                    if (deviceCount == bleList.size) {\r\n                    EventBus.getDefault()\r\n                        .post(MessageEventData(BaseConstant.EVENT_CANCEL_DIALOG, \"\", null))\r\n//                    }\r\n                    runOnUiThread(Runnable {\r\n                        Log.i(\"CPRActivity\", \"notify success\")\r\n                    })\r\n                }\r\n\r\n                override fun onNotifyFailure(exception: BleException) {\r\n                    runOnUiThread(Runnable {\r\n                        Log.i(\"CPRActivity\", exception.toString())\r\n                    })\r\n                }\r\n\r\n                override fun onCharacteristicChanged(data: ByteArray) {\r\n                    /*         val formatHexString = HexUtil.formatHexString(\r\n                                 characteristic.value,\r\n                                 false\r\n                             )*/\r\n                    val formatHexString = HexUtil.formatHexString(\r\n                        data,\r\n                        false\r\n                    )\r\n                    sb.append(formatHexString)\r\n                    sb.append(\"\\n\")\r\n                    if (!BaseApplication.driver?.isConnected!! && characteristic != null) {\r\n                        runOnUiThread { Log.e(\"CPRActivity\", formatHexString) }\r\n                        sendMessage(formatHexString)\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    private var isRefreshPower: Boolean = false\r\n    private var isStart = false\r\n    private var isMulti = false\r\n    private var deviceCount: Int = 0\r\n    private var sb = StringBuffer()\r\n    private var dataDTO = BaseDataDTO()\r\n    private val dataMap = mutableMapOf<String, DataVolatile01>()\r\n\r\n    private fun sendMessage(formatHexString: String) {\r\n        if (TextUtils.isEmpty(formatHexString) || formatHexString.length < 20) {\r\n            return\r\n        }\r\n        data.clear()\r\n        val num = formatHexString.length.div(20)\r\n        if (formatHexString.length > 20) {\r\n            for (index in 1..num) {\r\n                val oneData = formatHexString.substring(20 * (index - 1), 20 * index)\r\n                setData(oneData)\r\n            }\r\n        } else if (formatHexString.length == 20) {\r\n            setData(formatHexString)\r\n        }\r\n\r\n        //处理连接后电量显示\r\n//        if (isRefreshPower) {\r\n//            powerHandler.removeCallbacks(powerRunning)\r\n//            powerHandler.postDelayed(powerRunning, 10000)\r\n//            Handler().postDelayed(this::setPower, 500)\r\n//        }\r\n    }\r\n\r\n    private fun setData(data: String) {\r\n        val deviceMAC =\r\n            \"001b${data.substring(12)}\"\r\n        val dataVolatile = dataMap[deviceMAC]\r\n        if (dataVolatile != null) {\r\n            dataDTO = dataVolatile.baseDataDecode(data)\r\n        } else {\r\n            val newDataVolatile = DataVolatile01()\r\n            newDataVolatile.initPreDistance(data, deviceMAC)\r\n            dataMap[deviceMAC] = newDataVolatile\r\n        }\r\n        Log.e(\"setData\", GsonUtils.toJson(dataDTO))\r\n        if (isStart) {\r\n            StatusLiveData.dataSingle.value = dataDTO\r\n            Log.e(\"setDatacf\", \"${dataDTO.cf}\")\r\n            //曲线模型数据\r\n            StatusLiveData.dataSingleChart.value = dataDTO\r\n        }\r\n    }\r\n\r\n    val data = ArrayList<BaseDataDTO>()\r\n\r\n    private val powerHandler = Handler(Looper.getMainLooper())\r\n    private val powerRunning = Runnable {\r\n        setPower()\r\n        powerHandler.postDelayed({\r\n            setPower()\r\n        }, 10000)\r\n    }\r\n\r\n    /**\r\n     * 设置列表电量\r\n     */\r\n    private fun setPower() {\r\n        val dataList = mutableListOf<BleDevice>()\r\n        mDeviceAdapter.data.forEachIndexed { index, item ->\r\n            if (item.isConnected) {\r\n                //将mac字符串转换一下去掉 冒号 ：\r\n                val replaceMac = item.mac.replace(\":\", \"\").toLowerCase()\r\n                Log.e(\"sendMessage\", \"ble MAC：${replaceMac}\")\r\n                dataMap.keys.forEach {\r\n                    val dataItme = dataMap[it]\r\n                    if (dataItme != null && replaceMac == dataItme.deviceMAC) {\r\n                        Log.e(\"sendMessage\", \"MAC：${dataItme.deviceMAC}  电量值：${dataItme.VI_Value}\")\r\n                        item.power = dataItme.VI_Value\r\n//                        return@forEach\r\n                    }\r\n                }\r\n                mDeviceAdapter.notifyItemChanged(index, item)\r\n            }\r\n            dataList.add(item)\r\n        }\r\n        isRefreshPower = false\r\n        mDeviceAdapter.setList(dataList)\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        EventBus.getDefault().unregister(this)\r\n        unBindBluetooth()\r\n        disconnectUsb()\r\n        unregisterReceiver(broadcastReceiver)\r\n        BleManager.getInstance().disconnectAllDevice()\r\n        BleManager.getInstance().destroy()\r\n    }\r\n\r\n    private val deviceId = 0\r\n    private var portNum: Int = 0\r\n    private var baudRate: Int = 115200\r\n    private val withIoManager = true\r\n    private val INTENT_ACTION_GRANT_USB: String = \"android.hardware.usb.action.USB_STATE\"\r\n\r\n    private enum class UsbPermission {\r\n        Unknown, Requested, Granted, Denied\r\n    }\r\n\r\n    private var mainLooper: Handler? = null\r\n//    private val controlLines: ControlLines? = null\r\n\r\n    private var usbIoManager: SerialInputOutputManager? = null\r\n    private var usbSerialPort: UsbSerialPort? = null\r\n    private var usbPermission: UsbPermission = UsbPermission.Unknown\r\n    private var connected = false\r\n\r\n    //usb权限\r\n    private var manager: UsbManager? = null\r\n    private val ACTION_USB_PERMISSION = \"com.android.example.USB_PERMISSION\"\r\n    private var availableDrivers: List<UsbSerialDriver>? = null\r\n    private var driver: UsbSerialDriver? = null\r\n    private var connection: UsbDeviceConnection? = null\r\n\r\n    /**\r\n     * 获得 usb 权限\r\n     */\r\n    private fun openUsbDevice() {\r\n        //before open usb device\r\n        //should try to get usb permission\r\n        tryGetUsbPermission()\r\n    }\r\n\r\n    private fun tryGetUsbPermission() {\r\n        manager = getSystemService(USB_SERVICE) as UsbManager\r\n        val filter: IntentFilter = IntentFilter(ACTION_USB_PERMISSION)\r\n        registerReceiver(mUsbPermissionActionReceiver, filter)\r\n        val mPermissionIntent =\r\n            PendingIntent.getBroadcast(this, 0, Intent(ACTION_USB_PERMISSION), 0)\r\n        //here do emulation to ask all connected usb device for permission\r\n        if (manager == null) {\r\n            return\r\n        }\r\n        for (usbDevice in manager!!.deviceList.values) {\r\n            //add some conditional check if necessary\r\n            //if(isWeCaredUsbDevice(usbDevice)){\r\n            if (manager!!.hasPermission(usbDevice)) {\r\n                //if has already got permission, just goto connect it\r\n                //that means: user has choose yes for your previously popup window asking for grant perssion for this usb device\r\n                //and also choose option: not ask again\r\n                afterGetUsbPermission(usbDevice)\r\n            } else {\r\n                //this line will let android popup window, ask user whether to allow this app to have permission to operate this usb device\r\n                manager!!.requestPermission(usbDevice, mPermissionIntent)\r\n            }\r\n            //}\r\n        }\r\n    }\r\n\r\n    private fun afterGetUsbPermission(usbDevice: UsbDevice) {\r\n        //call method to set up device communication\r\n        //Toast.makeText(this, String.valueOf(\"Got permission for usb device: \" + usbDevice), Toast.LENGTH_LONG).show();\r\n        //Toast.makeText(this, String.valueOf(\"Found USB device: VID=\" + usbDevice.getVendorId() + \" PID=\" + usbDevice.getProductId()), Toast.LENGTH_LONG).show();\r\n        doYourOpenUsbDevice(usbDevice);\r\n    }\r\n\r\n    private fun doYourOpenUsbDevice(usbDevice: UsbDevice) {\r\n        //now follow line will NOT show: User has not given permission to device UsbDevice\r\n        availableDrivers = UsbSerialProber.getDefaultProber().findAllDrivers(manager)\r\n        if (availableDrivers == null || driver == null) {\r\n            return\r\n        }\r\n        driver = availableDrivers!![0]\r\n        connection = manager!!.openDevice(driver!!.device)\r\n    }\r\n\r\n\r\n    private val mUsbPermissionActionReceiver: BroadcastReceiver = object : BroadcastReceiver() {\r\n        override fun onReceive(context: Context, intent: Intent) {\r\n            val action = intent.action\r\n            if (ACTION_USB_PERMISSION == action) {\r\n                synchronized(this) {\r\n                    val usbDevice =\r\n                        intent.getParcelableExtra<Parcelable>(UsbManager.EXTRA_DEVICE) as UsbDevice?\r\n                    if (intent.getBooleanExtra(\r\n                            UsbManager.EXTRA_PERMISSION_GRANTED,\r\n                            false\r\n                        )\r\n                    ) {\r\n                        //user choose YES for your previously popup window asking for grant perssion for this usb device\r\n                        usbDevice?.let { afterGetUsbPermission(it) }\r\n                    } else {\r\n                        //user choose NO for your previously popup window asking for grant perssion for this usb device\r\n                        Toast.makeText(\r\n                            context,\r\n                            \"Permission denied for device$usbDevice\",\r\n                            Toast.LENGTH_LONG\r\n                        ).show()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private val broadcastReceiver = object : BroadcastReceiver() {\r\n        override fun onReceive(context: Context, intent: Intent) {\r\n            if (INTENT_ACTION_GRANT_USB == intent.action) {\r\n                usbPermission = if (intent.getBooleanExtra(\r\n                        UsbManager.EXTRA_PERMISSION_GRANTED,\r\n                        false\r\n                    )\r\n                ) UsbPermission.Granted else UsbPermission.Denied\r\n                //connectUsb()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun refresh() {\r\n        if (viewBinding.cbUsb.isChecked) {\r\n            val usbManager = getSystemService(USB_SERVICE) as UsbManager\r\n            val usbDefaultProber: UsbSerialProber = UsbSerialProber.getDefaultProber()\r\n            val usbCustomProber: UsbSerialProber = getCustomProber()\r\n            //        if (usbManager.deviceList.values == null || usbManager.deviceList.values.isEmpty()) {\r\n            //            viewBinding.ctUsb.isChecked = false\r\n            //        }\r\n            var bleDevice: BleDevice? = null\r\n            for (device in usbManager.deviceList.values) {\r\n                val driver: UsbSerialDriver = usbDefaultProber.probeDevice(device)\r\n                //ToastUtils.showShort(driver::class.java.simpleName.replace(\"SerialDriver\", \"\"))\r\n                mDeviceAdapter.setList(null)\r\n                for (port in driver.ports.indices) {\r\n                    bleDevice = BleDevice(driver)\r\n                    mDeviceAdapter.remove(bleDevice)\r\n                    mDeviceAdapter.addData(bleDevice)\r\n                }\r\n            }\r\n            if (bleDevice != null) {\r\n                //connectUsb()\r\n            }\r\n            stopRefresh()\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Serial + UI\r\n     */\r\n    private fun connectUsb() {\r\n        var device: UsbDevice? = null\r\n        val usbManager = getSystemService(USB_SERVICE) as UsbManager\r\n        for (v in usbManager.deviceList.values) if (v.deviceId > deviceId) device = v\r\n        if (device == null) {\r\n            LogUtils.e(\"connection failed: device not found\")\r\n            return\r\n        }\r\n        var driver = UsbSerialProber.getDefaultProber().probeDevice(device)\r\n        if (driver == null) {\r\n            driver = getCustomProber().probeDevice(device)\r\n        }\r\n        if (driver == null) {\r\n            LogUtils.e(\"connection failed: no driver for device\")\r\n            return\r\n        }\r\n        if (driver.ports.size < portNum) {\r\n            LogUtils.e(\"connection failed: not enough ports at device\")\r\n            return\r\n        }\r\n        usbSerialPort = driver.ports[portNum]\r\n        val usbConnection = usbManager.openDevice(driver.device)\r\n        if (usbConnection == null && usbPermission == UsbPermission.Unknown && !usbManager.hasPermission(\r\n                driver.device\r\n            )\r\n        ) {\r\n            usbPermission = UsbPermission.Requested\r\n            val flags =\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) PendingIntent.FLAG_IMMUTABLE else 0\r\n            val usbPermissionIntent = PendingIntent.getBroadcast(\r\n                this,\r\n                0,\r\n                Intent(INTENT_ACTION_GRANT_USB),\r\n                flags\r\n            )\r\n            usbManager.requestPermission(driver.device, usbPermissionIntent)\r\n            return\r\n        }\r\n        if (usbConnection == null) {\r\n            if (!usbManager.hasPermission(driver.device))\r\n                LogUtils.e(\"connection failed: permission denied\")\r\n            else\r\n                LogUtils.e(\r\n                    \"connection failed: open failed\"\r\n                )\r\n            return\r\n        }\r\n        try {\r\n            usbSerialPort!!.open(usbConnection)\r\n            usbSerialPort!!.setParameters(baudRate, 8, 1, UsbSerialPort.PARITY_NONE)\r\n            usbSerialPort!!.readEndpoint\r\n            if (withIoManager) {\r\n                usbIoManager = SerialInputOutputManager(usbSerialPort, this)\r\n                usbIoManager!!.start()\r\n            }\r\n            LogUtils.e(\"connected\")\r\n            connected = true\r\n            //controlLines.start()\r\n        } catch (e: java.lang.Exception) {\r\n            LogUtils.e(\"connection failed: \" + e.message)\r\n            disconnectUsb()\r\n        }\r\n    }\r\n\r\n    private fun disconnectUsb() {\r\n        connected = false\r\n        //controlLines.stop()\r\n        if (usbIoManager != null) {\r\n            usbIoManager!!.listener = null\r\n            usbIoManager!!.stop()\r\n        }\r\n        usbIoManager = null\r\n        try {\r\n            if (usbSerialPort != null)\r\n                usbSerialPort!!.close()\r\n        } catch (ignored: IOException) {\r\n            ignored.printStackTrace()\r\n        }\r\n        usbSerialPort = null\r\n    }\r\n\r\n    /*\r\n     * Serial\r\n     */\r\n    override fun onNewData(data: ByteArray?) {\r\n        mainLooper!!.post {\r\n            if (data != null && data.isNotEmpty()) {\r\n                val formatHexString = ConvertUtil.toHexString(data, data.size)\r\n                Log.i(\"CPRActivity\", \"data -- ${formatHexString.trim()}\")\r\n                sendMessage(formatHexString.trim())\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onRunError(e: Exception) {\r\n        mainLooper!!.post {\r\n            LogUtils.e(\"connection lost: \" + e.message)\r\n            disconnectUsb()\r\n        }\r\n    }\r\n\r\n\r\n    override fun finish() {\r\n        super.finish()\r\n        BleManager.getInstance().disconnectAllDevice()\r\n        BleManager.getInstance().destroy()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt b/app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt
--- a/app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt	(date 1664120895066)
@@ -180,13 +180,14 @@
                     val formatHexString = HexUtil.formatHexString(data)
                     Log.e("bleConnect", "onReadSuccess: $formatHexString")
                     if (!TextUtils.isEmpty(formatHexString)
-                        && formatHexString.substring(formatHexString.length - 2) == "01"
+                        && formatHexString.substring(formatHexString.length - 2) == "32"
                     ) {
                         //连接成功
                         Log.e("bleConnect", "onReadSuccess: 成功")
                     } else {
                         //连接失败
                         Log.e("bleConnect", "onReadSuccess: 失败")
+                        delBle(bleDevice)
                     }
                     //runOnUiThread { addText(txt, HexUtil.formatHexString(data, true)) }
                 }
@@ -235,8 +236,8 @@
             object : BleWriteCallback() {
                 override fun onWriteSuccess(current: Int, total: Int, justWrite: ByteArray) {
                     Log.e("bleConnect", "onWriteSuccess: current${current}-  total $total")
-                    setBleDevice(bleDevice)
                     //Handler().postDelayed({ searchBle() }, 3000)
+                    setBleDevice(bleDevice)
                     bleRead(mBleDevice!!)
                 }
 
@@ -247,28 +248,53 @@
     }
 
     private fun setBleDevice(bleDevice: BleDevice) {
-        count++
+        mDeviceAdapter.remove(bleDevice)
         //处理已连接的设备靠前
-        mDeviceAdapter.remove(bleDevice)
-        bleDevice.isConnected = true
-        bleDevice.isLoading = false
-        bleDevice.count = count
-        //添加已连接蓝牙
-        if (mDeviceAdapter.data.size == 0) {
-            mDeviceAdapter.addData(bleDevice)
-        } else {
-            if (count - 1 <= mDeviceAdapter.data.size) {
-                mDeviceAdapter.addData(count - 1, bleDevice)
-            } else {
-                mDeviceAdapter.addData(bleDevice)
-            }
-        }
-        //                viewBinding.textView.text = "$count"
-        bleList.add(bleDevice)
-        bleList = removeDuplicate()
+        if (!bleDevice.isConnected) {
+            count++
+            bleDevice.isConnected = true
+            bleDevice.isLoading = false
+            bleDevice.count = count
+            //添加已连接蓝牙
+            if (mDeviceAdapter.data.size == 0) {
+                mDeviceAdapter.addData(bleDevice)
+            } else {
+                if (count - 1 <= mDeviceAdapter.data.size) {
+                    mDeviceAdapter.addData(count - 1, bleDevice)
+                } else {
+                    mDeviceAdapter.addData(bleDevice)
+                }
+            }
+            //                viewBinding.textView.text = "$count"
+            bleList.add(bleDevice)
+            bleList = removeDuplicate()
+        } else {
+            delBle(bleDevice)
+        }
         viewBinding.tvConnections.text = "设备连接数：${bleList.size}"
     }
 
+    private fun delBle(bleDevice: BleDevice) {
+        if (count > 1) {
+            count--
+        }
+        bleList.remove(bleDevice)
+        val newList = mutableListOf<BleDevice>()
+        for (item in mDeviceAdapter.data) {
+            if (item.count > bleDevice.count) {
+                item.count--
+            }
+            newList.add(item)
+        }
+        mDeviceAdapter.remove(bleDevice)
+        newList.remove(bleDevice)
+        bleDevice.isConnected = false
+        bleDevice.isLoading = false
+        bleDevice.count = 0
+        newList.add(bleDevice)
+        mDeviceAdapter.setList(dedupList(newList))
+    }
+
     private fun removeDuplicate(): MutableList<BleDevice> {
         val set: MutableSet<BleDevice> = LinkedHashSet<BleDevice>()
         set.addAll(bleList)
@@ -571,6 +597,7 @@
                     status: Int
                 ) {
                     count--
+                    mDeviceAdapter.remove(bleDevice)
                     mBleDevice = null
                     bleList.remove(bleDevice)
                     if (isActiveDisConnected) {
Index: FastBleLib/build/intermediates/incremental/packageDebugResources/compile-file-map.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Sun Sep 25 20:39:39 CST 2022\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FastBleLib/build/intermediates/incremental/packageDebugResources/compile-file-map.properties b/FastBleLib/build/intermediates/incremental/packageDebugResources/compile-file-map.properties
--- a/FastBleLib/build/intermediates/incremental/packageDebugResources/compile-file-map.properties	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/FastBleLib/build/intermediates/incremental/packageDebugResources/compile-file-map.properties	(date 1664116543765)
@@ -1,1 +1,1 @@
-#Sun Sep 25 20:39:39 CST 2022
+#Sun Sep 25 22:35:43 CST 2022
Index: app/src/main/java/com/pr/perfectrecovery/BaseApplication.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pr.perfectrecovery\r\n\r\nimport android.app.Application\r\nimport com.tencent.bugly.crashreport.CrashReport\r\nimport com.tencent.mmkv.MMKV\r\nimport org.litepal.LitePal\r\n\r\nclass BaseApplication : Application() {\r\n\r\n    // 需要将CH34x的驱动类写在APP类下面，使得帮助类的生命周期与整个应用程序的生命周期是相同的\r\n    companion object {\r\n        var mInstance: BaseApplication? = null\r\n        fun instance(): BaseApplication? {\r\n            return mInstance\r\n        }\r\n    }\r\n\r\n    override fun onCreate() {\r\n        super.onCreate()\r\n        mInstance = this\r\n        MMKV.initialize(this)\r\n        LitePal.initialize(this)\r\n        //Multidex.install(this);\r\n        CrashReport.initCrashReport(applicationContext, \"0bd5e51ccc\", false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pr/perfectrecovery/BaseApplication.kt b/app/src/main/java/com/pr/perfectrecovery/BaseApplication.kt
--- a/app/src/main/java/com/pr/perfectrecovery/BaseApplication.kt	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/app/src/main/java/com/pr/perfectrecovery/BaseApplication.kt	(date 1664116044472)
@@ -1,6 +1,8 @@
 package com.pr.perfectrecovery
 
 import android.app.Application
+import android.hardware.usb.UsbManager
+import cn.wch.ch34xuartdriver.CH34xUARTDriver
 import com.tencent.bugly.crashreport.CrashReport
 import com.tencent.mmkv.MMKV
 import org.litepal.LitePal
@@ -10,11 +12,15 @@
     // 需要将CH34x的驱动类写在APP类下面，使得帮助类的生命周期与整个应用程序的生命周期是相同的
     companion object {
         var mInstance: BaseApplication? = null
+        var driver: CH34xUARTDriver? = null
         fun instance(): BaseApplication? {
             return mInstance
         }
     }
 
+
+    private val ACTION_USB_PERMISSION = "cn.wch.wchusbdriver.USB_PERMISSION"
+
     override fun onCreate() {
         super.onCreate()
         mInstance = this
@@ -22,5 +28,8 @@
         LitePal.initialize(this)
         //Multidex.install(this);
         CrashReport.initCrashReport(applicationContext, "0bd5e51ccc", false);
+        driver = CH34xUARTDriver(
+            getSystemService(USB_SERVICE) as UsbManager, this, ACTION_USB_PERMISSION
+        )
     }
 }
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'kotlin-android'\r\n}\r\n\r\nandroid {\r\n    signingConfigs {\r\n        debug {\r\n            storeFile file('/pr.jks')\r\n            storePassword 'pr123456'\r\n            keyAlias 'pr'\r\n            keyPassword 'pr123456'\r\n        }\r\n        release {\r\n            storeFile file('/pr.jks')\r\n            storePassword 'pr123456'\r\n            keyAlias 'pr'\r\n            keyPassword 'pr123456'\r\n        }\r\n    }\r\n    compileSdk 31\r\n    defaultConfig {\r\n        applicationId \"com.pr.perfectrecovery\"\r\n        minSdk 21\r\n        targetSdk 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    // 自定义打包名称\r\n    android.applicationVariants.all { variant ->\r\n        variant.outputs.all {\r\n            outputFileName = \"PR_APK_${buildType.name}_V${versionName}_${generateTime()}.apk\"\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n//构建时间\r\nstatic def generateTime() {\r\n    return new Date().format(\"yyyy_MM_dd_HH_mm\")\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.3.2'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.fragment:fragment-ktx:1.3.2'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    //图表库\r\n//    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\r\n//    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.1'\r\n//    implementation 'com.github.AAChartModel:AAChartCore-Kotlin:-SNAPSHOT'\r\n    implementation 'com.google.code.gson:gson:2.9.0'\r\n    // For Java\r\n    implementation 'androidx.work:work-runtime:2.7.1'\r\n    // For Kotlin\r\n    implementation 'androidx.work:work-runtime-ktx:2.7.1'\r\n    //autoSize 适配框架\r\n    implementation 'me.jessyan:autosize:1.2.1'\r\n\r\n    implementation 'org.xclcharts:lib:2.4'\r\n    //tabLayout\r\n    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'\r\n    //万能适配器\r\n//    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.7'\r\n    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'\r\n\r\n    // 腾讯bugly--sdk\r\n    implementation 'com.tencent.bugly:crashreport:4.0.0'\r\n    //Utils\r\n    implementation 'com.blankj:utilcode:1.30.7'\r\n    //MMKV\r\n    implementation 'com.tencent:mmkv-static:1.2.12'\r\n    //GSON\r\n    implementation 'com.google.code.gson:gson:2.8.9'\r\n    //蓝牙框架\r\n    implementation project(':FastBleLib')\r\n    //图表\r\n    implementation project(':MPChartLib')\r\n    //USB\r\n    implementation project(':usbSerialForAndroid')\r\n//    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\r\n    //串口JAR\r\n//    implementation files('libs/CH34xUARTDriver.jar')\r\n    //侧滑删除\r\n    implementation 'com.yanzhenjie.recyclerview:x:1.3.2'\r\n    //EventBus\r\n    implementation 'org.greenrobot:eventbus:3.3.1'\r\n    //郭霖-litepal本地数据库\r\n    implementation 'org.litepal.guolindev:core:3.2.3'\r\n\r\n    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.2.0\r\n    implementation 'com.tencent.bugly:crashreport:latest.release'\r\n\r\n    //usb 串口\r\n//    implementation 'com.github.mik3y:usb-serial-for-android:3.4.3'\r\n\r\n    // For developers using AndroidX in their applications\r\n    implementation 'pub.devrel:easypermissions:3.0.0'\r\n\r\n    // For developers using the Android Support Library\r\n    implementation 'pub.devrel:easypermissions:2.0.1'\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/app/build.gradle	(date 1664116044471)
@@ -108,7 +108,7 @@
     implementation project(':usbSerialForAndroid')
 //    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
     //串口JAR
-//    implementation files('libs/CH34xUARTDriver.jar')
+    implementation files('libs/CH34xUARTDriver.jar')
     //侧滑删除
     implementation 'com.yanzhenjie.recyclerview:x:1.3.2'
     //EventBus
Index: usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/compile-file-map.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Sun Sep 25 20:39:39 CST 2022\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/compile-file-map.properties b/usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/compile-file-map.properties
--- a/usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/compile-file-map.properties	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/compile-file-map.properties	(date 1664116543874)
@@ -1,1 +1,1 @@
-#Sun Sep 25 20:39:39 CST 2022
+#Sun Sep 25 22:35:43 CST 2022
Index: usbSerialForAndroid/build/outputs/logs/manifest-merger-debug-report.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-- Merging decision tree log ---\r\nmanifest\r\nADDED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml:2:1-4:12\r\nINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml:2:1-4:12\r\nINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml:2:1-4:12\r\n\tpackage\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml:3:7-43\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\n\txmlns:android\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml:2:11-69\r\nuses-sdk\r\nINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml reason: use-sdk injection requested\r\nINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\nINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\nINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\nINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\n\tandroid:targetSdkVersion\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\n\tandroid:minSdkVersion\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\AndroidManifest.xml\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/usbSerialForAndroid/build/outputs/logs/manifest-merger-debug-report.txt b/usbSerialForAndroid/build/outputs/logs/manifest-merger-debug-report.txt
--- a/usbSerialForAndroid/build/outputs/logs/manifest-merger-debug-report.txt	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/usbSerialForAndroid/build/outputs/logs/manifest-merger-debug-report.txt	(date 1664116547888)
@@ -1,25 +1,25 @@
 -- Merging decision tree log ---
 manifest
-ADDED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:2:1-4:12
-INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:2:1-4:12
-INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:2:1-4:12
+ADDED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:2:1-4:12
+INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:2:1-4:12
+INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:2:1-4:12
 	package
-		ADDED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:3:7-43
-		INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
-		INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+		ADDED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:3:7-43
+		INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
 	xmlns:android
-		ADDED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:2:11-69
+		ADDED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml:2:11-69
 uses-sdk
-INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml reason: use-sdk injection requested
-INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
-INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
-INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
-INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
 	android:targetSdkVersion
-		INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
-		ADDED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
-		INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+		ADDED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
 	android:minSdkVersion
-		INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
-		ADDED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
-		INJECTED from E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+		ADDED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\AndroidManifest.xml
Index: usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<merger version=\"3\"><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"main$Generated\" generated=\"true\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\res\"/><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\build\\generated\\res\\rs\\debug\"/><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\build\\generated\\res\\resValues\\debug\"/></dataSet><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"main\" generated-set=\"main$Generated\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\res\"/><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\build\\generated\\res\\rs\\debug\"/><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\build\\generated\\res\\resValues\\debug\"/></dataSet><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"debug$Generated\" generated=\"true\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\debug\\res\"/></dataSet><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"debug\" generated-set=\"debug$Generated\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\debug\\res\"/></dataSet><mergedItems/></merger>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/merger.xml b/usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/merger.xml
--- a/usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/merger.xml	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/usbSerialForAndroid/build/intermediates/incremental/packageDebugResources/merger.xml	(date 1664116543876)
@@ -1,2 +1,2 @@
 <?xml version="1.0" encoding="utf-8"?>
-<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\res"/><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\build\generated\res\rs\debug"/><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\res"/><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\build\generated\res\rs\debug"/><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\src\debug\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\src\debug\res"/></dataSet><mergedItems/></merger>
\ No newline at end of file
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\res"/><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\build\generated\res\rs\debug"/><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\res"/><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\build\generated\res\rs\debug"/><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\src\debug\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\src\debug\res"/></dataSet><mergedItems/></merger>
\ No newline at end of file
Index: usbSerialForAndroid/build/intermediates/incremental/packageDebugAssets/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<merger version=\"3\"><dataSet config=\"main\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\assets\"/><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\build\\intermediates\\shader_assets\\debug\\out\"/></dataSet><dataSet config=\"debug\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\debug\\assets\"/></dataSet></merger>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/usbSerialForAndroid/build/intermediates/incremental/packageDebugAssets/merger.xml b/usbSerialForAndroid/build/intermediates/incremental/packageDebugAssets/merger.xml
--- a/usbSerialForAndroid/build/intermediates/incremental/packageDebugAssets/merger.xml	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/usbSerialForAndroid/build/intermediates/incremental/packageDebugAssets/merger.xml	(date 1664116548810)
@@ -1,2 +1,2 @@
 <?xml version="1.0" encoding="utf-8"?>
-<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\assets"/><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\build\intermediates\shader_assets\debug\out"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\src\debug\assets"/></dataSet></merger>
\ No newline at end of file
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\assets"/><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\build\intermediates\shader_assets\debug\out"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\src\debug\assets"/></dataSet></merger>
\ No newline at end of file
Index: usbSerialForAndroid/build/intermediates/incremental/mergeDebugShaders/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<merger version=\"3\"><dataSet config=\"main\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\main\\shaders\"/></dataSet><dataSet config=\"debug\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\usbSerialForAndroid\\src\\debug\\shaders\"/></dataSet></merger>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/usbSerialForAndroid/build/intermediates/incremental/mergeDebugShaders/merger.xml b/usbSerialForAndroid/build/intermediates/incremental/mergeDebugShaders/merger.xml
--- a/usbSerialForAndroid/build/intermediates/incremental/mergeDebugShaders/merger.xml	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/usbSerialForAndroid/build/intermediates/incremental/mergeDebugShaders/merger.xml	(date 1664116548794)
@@ -1,2 +1,2 @@
 <?xml version="1.0" encoding="utf-8"?>
-<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\src\main\shaders"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\usbSerialForAndroid\src\debug\shaders"/></dataSet></merger>
\ No newline at end of file
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\src\main\shaders"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\usbSerialForAndroid\src\debug\shaders"/></dataSet></merger>
\ No newline at end of file
Index: FastBleLib/build/outputs/logs/manifest-merger-debug-report.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-- Merging decision tree log ---\r\nmanifest\r\nADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:1:1-9:12\r\nINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:1:1-9:12\r\nINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:1:1-9:12\r\n\tpackage\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:2:5-30\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n\txmlns:android\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:1:11-69\r\nuses-permission#android.permission.BLUETOOTH\r\nADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:4:5-68\r\n\tandroid:name\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:4:22-65\r\nuses-permission#android.permission.BLUETOOTH_ADMIN\r\nADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:5:5-74\r\n\tandroid:name\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:5:22-71\r\nuses-permission#android.permission.ACCESS_COARSE_LOCATION\r\nADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:6:5-81\r\n\tandroid:name\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:6:22-78\r\nuses-permission#android.permission.ACCESS_FINE_LOCATION\r\nADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:7:5-79\r\n\tandroid:name\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:7:22-76\r\nuses-sdk\r\nINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml reason: use-sdk injection requested\r\nINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\nINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\nINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\nINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n\tandroid:targetSdkVersion\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n\tandroid:minSdkVersion\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n\t\tADDED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n\t\tINJECTED from E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FastBleLib/build/outputs/logs/manifest-merger-debug-report.txt b/FastBleLib/build/outputs/logs/manifest-merger-debug-report.txt
--- a/FastBleLib/build/outputs/logs/manifest-merger-debug-report.txt	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/FastBleLib/build/outputs/logs/manifest-merger-debug-report.txt	(date 1664116547723)
@@ -1,41 +1,41 @@
 -- Merging decision tree log ---
 manifest
-ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:1:1-9:12
-INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:1:1-9:12
-INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:1:1-9:12
+ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:1:1-9:12
+INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:1:1-9:12
+INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:1:1-9:12
 	package
-		ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:2:5-30
-		INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
-		INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+		ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:2:5-30
+		INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
 	xmlns:android
-		ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:1:11-69
+		ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:1:11-69
 uses-permission#android.permission.BLUETOOTH
-ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:4:5-68
+ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:4:5-68
 	android:name
-		ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:4:22-65
+		ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:4:22-65
 uses-permission#android.permission.BLUETOOTH_ADMIN
-ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:5:5-74
+ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:5:5-74
 	android:name
-		ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:5:22-71
+		ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:5:22-71
 uses-permission#android.permission.ACCESS_COARSE_LOCATION
-ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:6:5-81
+ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:6:5-81
 	android:name
-		ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:6:22-78
+		ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:6:22-78
 uses-permission#android.permission.ACCESS_FINE_LOCATION
-ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:7:5-79
+ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:7:5-79
 	android:name
-		ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:7:22-76
+		ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:7:22-76
 uses-sdk
-INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml reason: use-sdk injection requested
-INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
-INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
-INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
-INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
 	android:targetSdkVersion
-		INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
-		ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
-		INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+		ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
 	android:minSdkVersion
-		INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
-		ADDED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
-		INJECTED from E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+		ADDED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+		INJECTED from E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
Index: FastBleLib/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n2<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n3    package=\"com.clj.fastble\" >\r\n4\r\n5    <uses-sdk\r\n6        android:minSdkVersion=\"21\"\r\n6-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n7        android:targetSdkVersion=\"30\" />\r\n7-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml\r\n8\r\n9    <uses-permission android:name=\"android.permission.BLUETOOTH\" />\r\n9-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:4:5-68\r\n9-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:4:22-65\r\n10    <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\r\n10-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:5:5-74\r\n10-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:5:22-71\r\n11    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n11-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:6:5-81\r\n11-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:6:22-78\r\n12    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n12-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:7:5-79\r\n12-->E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\AndroidManifest.xml:7:22-76\r\n13\r\n14</manifest>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FastBleLib/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt b/FastBleLib/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt
--- a/FastBleLib/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/FastBleLib/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt	(date 1664116547724)
@@ -4,21 +4,21 @@
 4
 5    <uses-sdk
 6        android:minSdkVersion="21"
-6-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+6-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
 7        android:targetSdkVersion="30" />
-7-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
+7-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml
 8
 9    <uses-permission android:name="android.permission.BLUETOOTH" />
-9-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:4:5-68
-9-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:4:22-65
+9-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:4:5-68
+9-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:4:22-65
 10    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
-10-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:5:5-74
-10-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:5:22-71
+10-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:5:5-74
+10-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:5:22-71
 11    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-11-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:6:5-81
-11-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:6:22-78
+11-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:6:5-81
+11-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:6:22-78
 12    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-12-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:7:5-79
-12-->E:\workspace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:7:22-76
+12-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:7:5-79
+12-->E:\workSpace\perfect-recovery\FastBleLib\src\main\AndroidManifest.xml:7:22-76
 13
 14</manifest>
Index: FastBleLib/build/intermediates/incremental/packageDebugResources/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<merger version=\"3\"><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"main$Generated\" generated=\"true\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\res\"/><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\build\\generated\\res\\rs\\debug\"/><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\build\\generated\\res\\resValues\\debug\"/></dataSet><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"main\" generated-set=\"main$Generated\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\res\"/><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\build\\generated\\res\\rs\\debug\"/><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\build\\generated\\res\\resValues\\debug\"/></dataSet><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"debug$Generated\" generated=\"true\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\src\\debug\\res\"/></dataSet><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"debug\" generated-set=\"debug$Generated\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\src\\debug\\res\"/></dataSet><mergedItems/></merger>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FastBleLib/build/intermediates/incremental/packageDebugResources/merger.xml b/FastBleLib/build/intermediates/incremental/packageDebugResources/merger.xml
--- a/FastBleLib/build/intermediates/incremental/packageDebugResources/merger.xml	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/FastBleLib/build/intermediates/incremental/packageDebugResources/merger.xml	(date 1664116543786)
@@ -1,2 +1,2 @@
 <?xml version="1.0" encoding="utf-8"?>
-<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\FastBleLib\src\main\res"/><source path="E:\workspace\perfect-recovery\FastBleLib\build\generated\res\rs\debug"/><source path="E:\workspace\perfect-recovery\FastBleLib\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\FastBleLib\src\main\res"/><source path="E:\workspace\perfect-recovery\FastBleLib\build\generated\res\rs\debug"/><source path="E:\workspace\perfect-recovery\FastBleLib\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\FastBleLib\src\debug\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\FastBleLib\src\debug\res"/></dataSet><mergedItems/></merger>
\ No newline at end of file
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\FastBleLib\src\main\res"/><source path="E:\workSpace\perfect-recovery\FastBleLib\build\generated\res\rs\debug"/><source path="E:\workSpace\perfect-recovery\FastBleLib\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\FastBleLib\src\main\res"/><source path="E:\workSpace\perfect-recovery\FastBleLib\build\generated\res\rs\debug"/><source path="E:\workSpace\perfect-recovery\FastBleLib\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\FastBleLib\src\debug\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\FastBleLib\src\debug\res"/></dataSet><mergedItems/></merger>
\ No newline at end of file
Index: FastBleLib/build/intermediates/incremental/packageDebugAssets/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<merger version=\"3\"><dataSet config=\"main\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\assets\"/><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\build\\intermediates\\shader_assets\\debug\\out\"/></dataSet><dataSet config=\"debug\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\src\\debug\\assets\"/></dataSet></merger>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FastBleLib/build/intermediates/incremental/packageDebugAssets/merger.xml b/FastBleLib/build/intermediates/incremental/packageDebugAssets/merger.xml
--- a/FastBleLib/build/intermediates/incremental/packageDebugAssets/merger.xml	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/FastBleLib/build/intermediates/incremental/packageDebugAssets/merger.xml	(date 1664116548739)
@@ -1,2 +1,2 @@
 <?xml version="1.0" encoding="utf-8"?>
-<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\FastBleLib\src\main\assets"/><source path="E:\workspace\perfect-recovery\FastBleLib\build\intermediates\shader_assets\debug\out"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\FastBleLib\src\debug\assets"/></dataSet></merger>
\ No newline at end of file
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\FastBleLib\src\main\assets"/><source path="E:\workSpace\perfect-recovery\FastBleLib\build\intermediates\shader_assets\debug\out"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\FastBleLib\src\debug\assets"/></dataSet></merger>
\ No newline at end of file
Index: FastBleLib/build/intermediates/incremental/mergeDebugShaders/merger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<merger version=\"3\"><dataSet config=\"main\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\src\\main\\shaders\"/></dataSet><dataSet config=\"debug\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"E:\\workspace\\perfect-recovery\\FastBleLib\\src\\debug\\shaders\"/></dataSet></merger>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FastBleLib/build/intermediates/incremental/mergeDebugShaders/merger.xml b/FastBleLib/build/intermediates/incremental/mergeDebugShaders/merger.xml
--- a/FastBleLib/build/intermediates/incremental/mergeDebugShaders/merger.xml	(revision c808bb9f4cc6c5705ced8e55368ae64675333569)
+++ b/FastBleLib/build/intermediates/incremental/mergeDebugShaders/merger.xml	(date 1664116548712)
@@ -1,2 +1,2 @@
 <?xml version="1.0" encoding="utf-8"?>
-<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\FastBleLib\src\main\shaders"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workspace\perfect-recovery\FastBleLib\src\debug\shaders"/></dataSet></merger>
\ No newline at end of file
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\FastBleLib\src\main\shaders"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="E:\workSpace\perfect-recovery\FastBleLib\src\debug\shaders"/></dataSet></merger>
\ No newline at end of file

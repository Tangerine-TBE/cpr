Index: app/src/main/java/com/pr/perfectrecovery/activity/ConfigActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pr.perfectrecovery.activity\r\n\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextUtils\r\nimport android.text.TextWatcher\r\nimport android.text.format.DateUtils\r\nimport android.view.View\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.viewpager2.adapter.FragmentStateAdapter\r\nimport androidx.viewpager2.widget.ViewPager2\r\nimport androidx.viewpager2.widget.ViewPager2.OnPageChangeCallback\r\nimport com.blankj.utilcode.util.GsonUtils\r\nimport com.pr.perfectrecovery.base.BaseActivity\r\nimport com.pr.perfectrecovery.base.BaseConstant\r\nimport com.pr.perfectrecovery.bean.ConfigBean\r\nimport com.pr.perfectrecovery.databinding.ActivityCprListBinding\r\nimport com.pr.perfectrecovery.fragment.CPRScoreFragment\r\nimport com.pr.perfectrecovery.fragment.CPRStandardFragment\r\nimport com.pr.perfectrecovery.utils.TimeUtils\r\nimport com.tencent.mmkv.MMKV\r\n\r\n/**\r\n * 基础参数配置界面\r\n */\r\nclass ConfigActivity : BaseActivity() {\r\n\r\n    private lateinit var viewBinding: ActivityCprListBinding\r\n    private var dataDTO: ConfigBean? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        viewBinding = ActivityCprListBinding.inflate(layoutInflater)\r\n        setContentView(viewBinding.root)\r\n        initView()\r\n    }\r\n\r\n    private fun initView() {\r\n        setData()\r\n        viewBinding.bottom.tvContinue.visibility = View.INVISIBLE\r\n        viewBinding.bottom.ivBack.setOnClickListener { finish() }\r\n        //按压深度\r\n        viewBinding.etDepth.addTextChangedListener(editTextDepth)\r\n        viewBinding.etDepthEnd.addTextChangedListener(editTextDepth)\r\n        //按压频率\r\n        viewBinding.etDepthFrequency.addTextChangedListener(editTextDepthFrequency)\r\n        viewBinding.etDepthFrequencyEnd.addTextChangedListener(editTextDepthFrequency)\r\n\r\n        //按压中断\r\n        viewBinding.etInterruptTime.addTextChangedListener(editTextInterrupt)\r\n\r\n        //潮气量\r\n        viewBinding.etTidalVolume.addTextChangedListener(editTextTidalVolume)\r\n        viewBinding.etTidalVolumeEnd.addTextChangedListener(editTextTidalVolume)\r\n\r\n        //潮气频率\r\n        viewBinding.etTidalFrequency.addTextChangedListener(editTextTidalFrequency)\r\n        viewBinding.etTidalFrequencyEnd.addTextChangedListener(editTextTidalFrequency)\r\n\r\n        //按压次数\r\n        viewBinding.etPr.addTextChangedListener(editTextPr)\r\n        //吹气次数\r\n        viewBinding.etQy.addTextChangedListener(editTextQy)\r\n        viewBinding.etDeduction.addTextChangedListener(editTextDeduction)\r\n        viewBinding.etProcess.addTextChangedListener(editTextProcess)\r\n        viewBinding.etCompressions.addTextChangedListener(editTextProcess)\r\n        viewBinding.etVentilation.addTextChangedListener(editTextProcess)\r\n    }\r\n\r\n    private fun setData() {\r\n        val decodeString = MMKV.defaultMMKV().decodeString(BaseConstant.MMKV_WM_CONFIGURATION)\r\n        dataDTO = GsonUtils.fromJson(decodeString, ConfigBean::class.java)\r\n        dataDTO.let {\r\n            if (it != null) {\r\n                viewBinding.etDepth.setText(\"${it.depth}\")\r\n                viewBinding.etDepthEnd.setText(\"${it.depthEnd}\")\r\n                viewBinding.etDepthFrequency.setText(\"${it.depthFrequency}\")\r\n                viewBinding.etDepthFrequencyEnd.setText(\"${it.depthFrequencyEnd}\")\r\n                viewBinding.etInterruptTime.setText(\"${it.interruptTime}\")\r\n                viewBinding.etTidalVolume.setText(\"${it.tidalVolume}\")\r\n                viewBinding.etTidalVolumeEnd.setText(\"${it.tidalVolumeEnd}\")\r\n                viewBinding.etTidalFrequency.setText(\"${it.tidalFrequency}\")\r\n                viewBinding.etTidalFrequencyEnd.setText(\"${it.tidalFrequencyEnd}\")\r\n                viewBinding.etTime.setText(\"${it.operationTime}\")\r\n                viewBinding.etCycles.setText(\"${it.cycles}\")\r\n                viewBinding.etPr.setText(\"${it.prCount}\")\r\n                viewBinding.etQy.setText(\"${it.qyCount}\")\r\n                viewBinding.etDeduction.setText(\"${it.deductionTime}\")\r\n                viewBinding.etProcess.setText(\"${it.process}\")\r\n                viewBinding.etCompressions.setText(\"${it.compressions}\")\r\n                viewBinding.etVentilation.setText(\"${it.ventilation}\")\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private val editTextDepth = object : TextWatcher {\r\n        override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun afterTextChanged(p0: Editable?) {\r\n            if (p0.toString().toInt() in 11 downTo 0) {\r\n                viewBinding.tvMsg.text = \"按压深度输入范围：整数1～10\"\r\n            } else {\r\n                if (!TextUtils.isEmpty(viewBinding.etDepth.text.toString().trim())) {\r\n                    dataDTO?.depth = viewBinding.etDepth.text.toString().trim().toInt()\r\n                }\r\n                if (!TextUtils.isEmpty(viewBinding.etDepthEnd.text.toString().trim())) {\r\n                    dataDTO?.depthEnd = viewBinding.etDepthEnd.text.toString().trim().toInt()\r\n                }\r\n                dataDTO.let {\r\n                    MMKV.defaultMMKV()\r\n                        .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private val editTextDepthFrequency = object : TextWatcher {\r\n        override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun afterTextChanged(p0: Editable?) {\r\n            if (!TextUtils.isEmpty(viewBinding.etDepthFrequency.text.toString().trim())) {\r\n                dataDTO?.depthFrequency =\r\n                    viewBinding.etDepthFrequency.text.toString().trim().toInt()\r\n            }\r\n            if (!TextUtils.isEmpty(viewBinding.etDepthFrequencyEnd.text.toString().trim())) {\r\n                dataDTO?.depthFrequencyEnd =\r\n                    viewBinding.etDepthFrequencyEnd.text.toString().trim().toInt()\r\n            }\r\n            dataDTO.let {\r\n                MMKV.defaultMMKV()\r\n                    .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private val editTextInterrupt = object : TextWatcher {\r\n        override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun afterTextChanged(p0: Editable?) {\r\n            val str = viewBinding.etInterruptTime.text.toString().trim().toInt()\r\n\r\n            if (str > 0) {\r\n                dataDTO?.interruptTime = viewBinding.etInterruptTime.text.toString().trim().toInt()\r\n                dataDTO.let {\r\n                    MMKV.defaultMMKV()\r\n                        .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private val editTextTidalFrequency = object : TextWatcher {\r\n        override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun afterTextChanged(p0: Editable?) {\r\n            if (!TextUtils.isEmpty(viewBinding.etTidalFrequency.text.toString().trim())) {\r\n                dataDTO?.tidalFrequency =\r\n                    viewBinding.etTidalFrequency.text.toString().trim().toInt()\r\n            }\r\n            if (!TextUtils.isEmpty(viewBinding.etTidalFrequencyEnd.text.toString().trim())) {\r\n                dataDTO?.tidalFrequencyEnd =\r\n                    viewBinding.etTidalFrequencyEnd.text.toString().trim().toInt()\r\n            }\r\n            dataDTO.let {\r\n                MMKV.defaultMMKV()\r\n                    .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private val editTextTidalVolume = object : TextWatcher {\r\n        override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun afterTextChanged(p0: Editable?) {\r\n            if (!TextUtils.isEmpty(viewBinding.etTidalVolume.text.toString().trim())) {\r\n                dataDTO?.tidalVolume = viewBinding.etTidalVolume.text.toString().trim().toInt()\r\n            }\r\n            if (!TextUtils.isEmpty(viewBinding.etTidalVolumeEnd.text.toString().trim())) {\r\n                dataDTO?.tidalVolumeEnd =\r\n                    viewBinding.etTidalVolumeEnd.text.toString().trim().toInt()\r\n            }\r\n            dataDTO.let {\r\n                MMKV.defaultMMKV()\r\n                    .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))\r\n            }\r\n        }\r\n    }\r\n\r\n    private val editTextPr = object : TextWatcher {\r\n        override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun afterTextChanged(p0: Editable?) {\r\n            val value = viewBinding.etPr.text.toString().trim()\r\n            if (TextUtils.isEmpty(value)) {\r\n                viewBinding.tvMsg.text = \"请填写按压次数\"\r\n            } else {\r\n                dataDTO?.prCount = value.toInt()\r\n                dataDTO.let {\r\n                    MMKV.defaultMMKV()\r\n                        .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private val editTextQy = object : TextWatcher {\r\n        override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun afterTextChanged(p0: Editable?) {\r\n            val value = viewBinding.etQy.text.toString().trim()\r\n            if (TextUtils.isEmpty(value)) {\r\n                viewBinding.tvMsg.text = \"请填写吹气次数\"\r\n            } else {\r\n                dataDTO?.qyCount = value.toInt()\r\n                dataDTO.let {\r\n                    MMKV.defaultMMKV()\r\n                        .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private val editTextDeduction = object : TextWatcher {\r\n        override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun afterTextChanged(p0: Editable?) {\r\n            //中断扣分\r\n            dataDTO?.deductionTime =\r\n                viewBinding.etDeduction.text.toString().trim().toFloat().toInt()\r\n            dataDTO.let {\r\n                MMKV.defaultMMKV()\r\n                    .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))\r\n            }\r\n        }\r\n    }\r\n\r\n    private val editTextProcess = object : TextWatcher {\r\n        override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\r\n\r\n        }\r\n\r\n        override fun afterTextChanged(p0: Editable?) {\r\n            process()\r\n        }\r\n    }\r\n\r\n    private fun process() {\r\n        //流程分数\r\n        val process =\r\n            if (!TextUtils.isEmpty(viewBinding.etProcess.text.toString().trim())) {\r\n                viewBinding.etProcess.text.toString().trim().toInt()\r\n            } else {\r\n                0\r\n            }\r\n        //胸外按压\r\n        val compressions =\r\n            if (!TextUtils.isEmpty(viewBinding.etCompressions.text.toString().trim())) {\r\n                viewBinding.etCompressions.text.toString().trim().toInt()\r\n            } else {\r\n                0\r\n            }\r\n        //人工通气\r\n        val ventilation =\r\n            if (!TextUtils.isEmpty(viewBinding.etVentilation.text.toString().trim())) {\r\n                viewBinding.etVentilation.text.toString().trim().toInt()\r\n            } else {\r\n                0\r\n            }\r\n        val number = process + compressions + ventilation\r\n        if (number > 100) {\r\n            viewBinding.tvDesc.text = \"三项加起来总分 ＜ 100分\"\r\n        } else {\r\n            dataDTO?.process = process\r\n            dataDTO?.compressions = compressions\r\n            dataDTO?.ventilation = ventilation\r\n            dataDTO.let {\r\n                MMKV.defaultMMKV()\r\n                    .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))\r\n            }\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pr/perfectrecovery/activity/ConfigActivity.kt b/app/src/main/java/com/pr/perfectrecovery/activity/ConfigActivity.kt
--- a/app/src/main/java/com/pr/perfectrecovery/activity/ConfigActivity.kt	(revision e98ddfca0c316c2a6b9dd4f7ddba67e4f08fbcae)
+++ b/app/src/main/java/com/pr/perfectrecovery/activity/ConfigActivity.kt	(date 1645759047810)
@@ -104,9 +104,11 @@
         }
 
         override fun afterTextChanged(p0: Editable?) {
-            if (p0.toString().toInt() in 11 downTo 0) {
+            val value = p0.toString().trim()
+            if (TextUtils.isEmpty(value) || value.toInt() > 11 || value.toInt() < 0) {
                 viewBinding.tvMsg.text = "按压深度输入范围：整数1～10"
             } else {
+                viewBinding.tvMsg.text = ""
                 if (!TextUtils.isEmpty(viewBinding.etDepth.text.toString().trim())) {
                     dataDTO?.depth = viewBinding.etDepth.text.toString().trim().toInt()
                 }
@@ -158,13 +160,19 @@
         }
 
         override fun afterTextChanged(p0: Editable?) {
-            val str = viewBinding.etInterruptTime.text.toString().trim().toInt()
-
-            if (str > 0) {
-                dataDTO?.interruptTime = viewBinding.etInterruptTime.text.toString().trim().toInt()
-                dataDTO.let {
-                    MMKV.defaultMMKV()
-                        .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))
+            val str = viewBinding.etInterruptTime.text.toString().trim()
+            if (TextUtils.isEmpty(str)) {
+                viewBinding.tvMsg.text = "按压超时时间设置"
+            } else {
+                if (str.toInt() > 0) {
+                    viewBinding.tvMsg.text = ""
+                    dataDTO?.interruptTime = str.toInt()
+                    dataDTO.let {
+                        MMKV.defaultMMKV()
+                            .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))
+                    }
+                } else {
+                    viewBinding.tvMsg.text = "按压超时时间设置"
                 }
             }
         }
@@ -281,11 +289,14 @@
 
         override fun afterTextChanged(p0: Editable?) {
             //中断扣分
-            dataDTO?.deductionTime =
-                viewBinding.etDeduction.text.toString().trim().toFloat().toInt()
-            dataDTO.let {
-                MMKV.defaultMMKV()
-                    .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))
+            val value = viewBinding.etDeduction.text.toString().trim()
+            if (!TextUtils.isEmpty(value)) {
+                dataDTO?.deductionTime =
+                    viewBinding.etDeduction.text.toString().trim().toInt()
+                dataDTO.let {
+                    MMKV.defaultMMKV()
+                        .encode(BaseConstant.MMKV_WM_CONFIGURATION, GsonUtils.toJson(dataDTO))
+                }
             }
         }
     }
@@ -330,6 +341,7 @@
         if (number > 100) {
             viewBinding.tvDesc.text = "三项加起来总分 ＜ 100分"
         } else {
+            viewBinding.tvDesc.text = ""
             dataDTO?.process = process
             dataDTO?.compressions = compressions
             dataDTO?.ventilation = ventilation
Index: app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pr.perfectrecovery.activity\r\n\r\nimport android.Manifest\r\nimport android.app.AlertDialog\r\nimport android.bluetooth.BluetoothAdapter\r\nimport android.bluetooth.BluetoothGatt\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.location.LocationManager\r\nimport android.os.*\r\nimport android.provider.Settings\r\nimport android.text.TextUtils\r\nimport android.text.method.ScrollingMovementMethod\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.lifecycle.Observer\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.blankj.utilcode.util.ToastUtils\r\nimport com.chad.library.adapter.base.BaseQuickAdapter\r\nimport com.chad.library.adapter.base.listener.OnItemClickListener\r\nimport com.chad.library.adapter.base.viewholder.BaseViewHolder\r\nimport com.clj.fastble.BleManager\r\nimport com.clj.fastble.callback.BleGattCallback\r\nimport com.clj.fastble.callback.BleNotifyCallback\r\nimport com.clj.fastble.callback.BleScanCallback\r\nimport com.clj.fastble.data.BleDevice\r\nimport com.clj.fastble.exception.BleException\r\nimport com.clj.fastble.scan.BleScanRuleConfig\r\nimport com.clj.fastble.utils.HexUtil\r\nimport com.pr.perfectrecovery.BaseApplication\r\nimport com.pr.perfectrecovery.R\r\nimport com.pr.perfectrecovery.adapter.DeviceBluetoothAdapter\r\nimport com.pr.perfectrecovery.base.BaseActivity\r\nimport com.pr.perfectrecovery.base.BaseConstant\r\nimport com.pr.perfectrecovery.bean.BaseDataDTO\r\nimport com.pr.perfectrecovery.bean.MessageEventData\r\nimport com.pr.perfectrecovery.comm.ObserverManager\r\nimport com.pr.perfectrecovery.databinding.ActivityCpractivityBinding\r\nimport com.pr.perfectrecovery.databinding.ItemBluetoothBinding\r\nimport com.pr.perfectrecovery.livedata.StatusLiveData\r\nimport com.pr.perfectrecovery.utils.ConvertUtil\r\nimport com.pr.perfectrecovery.utils.DataVolatile\r\nimport com.pr.perfectrecovery.view.itemlayout.PagerConfig\r\nimport com.pr.perfectrecovery.view.itemlayout.PagerGridLayoutManager\r\nimport com.pr.perfectrecovery.view.itemlayout.PagerGridSnapHelper\r\nimport org.greenrobot.eventbus.EventBus\r\nimport org.greenrobot.eventbus.Subscribe\r\nimport org.greenrobot.eventbus.ThreadMode\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\n/**\r\n * CPR页面  蓝夜列表扫描链接\r\n */\r\nclass CPRActivity : BaseActivity() {\r\n    private lateinit var viewBinding: ActivityCpractivityBinding\r\n    private var isRefresh = false\r\n    private val mDeviceAdapter = DeviceBluetoothAdapter()\r\n    private var bleList = mutableListOf<BleDevice>()\r\n    private var connectList = arrayListOf<BleDevice>()\r\n    private var isInitValue = false\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        viewBinding = ActivityCpractivityBinding.inflate(layoutInflater)\r\n        setContentView(viewBinding.root)\r\n        EventBus.getDefault().register(this)\r\n        initView()\r\n        //初始化蓝牙管理器\r\n        initBluetooth()\r\n//        ttl()\r\n    }\r\n\r\n    private fun initView() {\r\n        //查看是否有蓝牙权限\r\n        checkPermissions()\r\n        viewBinding.bottom.ivBack.setOnClickListener { finish() }\r\n        viewBinding.bottom.tvContinue.setOnClickListener {\r\n            startActivity(Intent(this, ConfigActivity::class.java))\r\n        }\r\n\r\n        viewBinding.btnOpen.setOnClickListener {\r\n            openTTL()\r\n        }\r\n\r\n        viewBinding.recyclerview.layoutManager = LinearLayoutManager(this)\r\n        // 是否抵用滚动事件监听\r\n        //layoutManager.setChangeSelectInScrolling(false)\r\n        viewBinding.recyclerview.adapter = bluetoothAdapter\r\n\r\n        viewBinding.bottom.ivStart.setOnClickListener {\r\n            val intent = Intent(this, TrainingSingleActivity::class.java)\r\n            intent.putParcelableArrayListExtra(\"blueTooth\", connectList)\r\n            startActivity(intent)\r\n        }\r\n\r\n        viewBinding.progressCircular.setOnClickListener {\r\n            if (!isRefresh) {\r\n                viewBinding.tvModelNum.visibility = View.INVISIBLE\r\n                startRefresh()\r\n                checkPermissions()\r\n                isRefresh = true\r\n            } else {\r\n                isRefresh = false\r\n                stopRefresh()\r\n                //取消扫描蓝牙设备\r\n                BleManager.getInstance().cancelScan()\r\n            }\r\n        }\r\n        viewBinding.recyclerview.adapter = mDeviceAdapter\r\n        mDeviceAdapter.setOnItemClickListener(itemClick)\r\n    }\r\n\r\n    @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\r\n    public fun onEvent(event: MessageEventData) {\r\n        if (event.code == BaseConstant.EVENT_CPR_START) {\r\n            isInitValue = false\r\n            bindBluetooth()\r\n        } else if (event.code == BaseConstant.EVENT_CPR_STOP) {\r\n            unBindBluetooth()\r\n        }\r\n    }\r\n\r\n    private fun bindBluetooth() {\r\n        bleList.forEach {\r\n            bind(it)\r\n        }\r\n    }\r\n\r\n    private fun unBindBluetooth() {\r\n        bleList.forEach {\r\n            unBind(it)\r\n        }\r\n    }\r\n\r\n    private val itemClick =\r\n        OnItemClickListener { adapter, view, position ->\r\n            if (isItemClick) {\r\n                val bleDevice = mDeviceAdapter.getItem(position)\r\n                if (!BleManager.getInstance().isConnected(bleDevice)) {\r\n                    if (count >= 6) {//处理提示语设备连接过多提示\r\n                        viewBinding.tvModelNum.text = \"当前版本最多同时支持6台模型\"\r\n                        hintHandler.postDelayed(this::setTextNull, 2000)\r\n                    }\r\n                    BleManager.getInstance().cancelScan()\r\n                    connect(bleDevice, position)\r\n                } else {\r\n                    BleManager.getInstance().disconnect(bleDevice)\r\n                }\r\n            }\r\n        }\r\n\r\n    private val hintHandler = object : Handler(Looper.getMainLooper()) {\r\n        override fun handleMessage(msg: Message) {\r\n            super.handleMessage(msg)\r\n        }\r\n    }\r\n\r\n    private fun setTextNull() {\r\n        viewBinding.tvModelNum.text = \"\"\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        showConnectedDevice()\r\n//        startRefresh()\r\n//        checkPermissions()\r\n    }\r\n\r\n    private fun initBluetooth() {\r\n        BleManager.getInstance().init(application)\r\n        BleManager.getInstance()\r\n            .enableLog(true)\r\n            .setReConnectCount(1, 5000)\r\n            .setConnectOverTime(10000).operateTimeout = 5000\r\n\r\n    }\r\n\r\n    private val REQUEST_CODE_OPEN_GPS = 1\r\n    private val REQUEST_CODE_PERMISSION_LOCATION = 2\r\n    private fun checkPermissions() {\r\n        val bluetoothAdapter = BluetoothAdapter.getDefaultAdapter()\r\n        if (!bluetoothAdapter.isEnabled) {\r\n            Toast.makeText(this, getString(R.string.please_open_blue), Toast.LENGTH_LONG).show()\r\n            return\r\n        }\r\n        val permissions = arrayOf(Manifest.permission.ACCESS_FINE_LOCATION)\r\n        val permissionDeniedList: MutableList<String> = ArrayList()\r\n        for (permission in permissions) {\r\n            val permissionCheck = ContextCompat.checkSelfPermission(this, permission)\r\n            if (permissionCheck == PackageManager.PERMISSION_GRANTED) {\r\n                onPermissionGranted(permission)\r\n            } else {\r\n                permissionDeniedList.add(permission)\r\n            }\r\n        }\r\n        if (permissionDeniedList.isNotEmpty()) {\r\n            val deniedPermissions = permissionDeniedList.toTypedArray()\r\n            ActivityCompat.requestPermissions(\r\n                this,\r\n                deniedPermissions,\r\n                REQUEST_CODE_PERMISSION_LOCATION\r\n            )\r\n        }\r\n    }\r\n\r\n    private val bluetoothAdapter = object :\r\n        BaseQuickAdapter<BleDevice, BaseViewHolder>(R.layout.item_bluetooth) {\r\n        override fun convert(holder: BaseViewHolder, item: BleDevice) {\r\n            val bind = ItemBluetoothBinding.bind(holder.itemView)\r\n            bind.tvBluetoothName.text = item.name\r\n            bind.tvBluetoothStatus.text = \"未连接\"\r\n        }\r\n    }\r\n\r\n    private fun onPermissionGranted(permission: String) {\r\n        when (permission) {\r\n            Manifest.permission.ACCESS_FINE_LOCATION -> if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && !checkGPSIsOpen()) {\r\n                AlertDialog.Builder(this)\r\n                    .setTitle(R.string.notifyTitle)\r\n                    .setMessage(R.string.gpsNotifyMsg)\r\n                    .setNegativeButton(\r\n                        R.string.cancel\r\n                    ) { dialog, which -> finish() }\r\n                    .setPositiveButton(\r\n                        R.string.setting\r\n                    ) { dialog, which ->\r\n                        val intent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)\r\n                        startActivityForResult(intent, REQUEST_CODE_OPEN_GPS)\r\n                    }\r\n                    .setCancelable(false)\r\n                    .show()\r\n            } else {\r\n                setScanRule()\r\n                startScan()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun showConnectedDevice() {\r\n        val deviceList = BleManager.getInstance().allConnectedDevice\r\n        bleList = deviceList\r\n        mDeviceAdapter.setList(deviceList)\r\n    }\r\n\r\n    private var isItemClick = true\r\n    private var count = 0\r\n    private var position = -1\r\n    private fun connect(bleDevice: BleDevice, position: Int) {\r\n        BleManager.getInstance()\r\n            .setConnectOverTime(5000)\r\n            .setOperateTimeout(5000)\r\n            .connect(bleDevice, object : BleGattCallback() {\r\n                override fun onStartConnect() {\r\n                    isItemClick = false\r\n                    bleDevice.isLoading = true\r\n                    mDeviceAdapter.remove(bleDevice)\r\n                    mDeviceAdapter.addData(position, bleDevice)\r\n                }\r\n\r\n                override fun onConnectFail(bleDevice: BleDevice, exception: BleException) {\r\n                    bleDevice.isLoading = false\r\n                    mDeviceAdapter.remove(bleDevice)\r\n                    mDeviceAdapter.addData(position, bleDevice)\r\n                    isItemClick = true\r\n                    if (exception.code == BleException.ERROR_CODE_TIMEOUT) {\r\n                        viewBinding.tvModelNum.text = \"连接超时，请重新连接\"\r\n                    } else {\r\n                        viewBinding.tvModelNum.text = \"连接失败，请重新连接\"\r\n                    }\r\n                }\r\n\r\n                override fun onConnectSuccess(\r\n                    bleDevice: BleDevice,\r\n                    gatt: BluetoothGatt,\r\n                    status: Int\r\n                ) {\r\n                    count++\r\n                    //处理已连接的设备靠前\r\n                    mDeviceAdapter.remove(bleDevice)\r\n                    bleDevice.isLoading = false\r\n                    bleDevice.count = count\r\n                    if (mDeviceAdapter.data.size == 0) {\r\n                        mDeviceAdapter.addData(bleDevice)\r\n                    } else {\r\n                        mDeviceAdapter.addData(count - 1, bleDevice)\r\n                    }\r\n//                viewBinding.textView.text = \"$count\"\r\n                    bleList.add(bleDevice)\r\n                    viewBinding.tvConnections.text = \"设备连接数：${count}\"\r\n                    //bind(bleDevice)\r\n                    isItemClick = true\r\n                }\r\n\r\n                override fun onDisConnected(\r\n                    isActiveDisConnected: Boolean,\r\n                    bleDevice: BleDevice,\r\n                    gatt: BluetoothGatt,\r\n                    status: Int\r\n                ) {\r\n                    count--\r\n                    bleList.remove(bleDevice)\r\n                    if (isActiveDisConnected) {\r\n                        ToastUtils.showLong(bleDevice.name + getString(R.string.active_disconnected))\r\n                    } else {\r\n                        ToastUtils.showLong(bleDevice.name + getString(R.string.disconnected))\r\n                        ObserverManager.getInstance().notifyObserver(bleDevice)\r\n                    }\r\n                    viewBinding.tvConnections.text = \"设备连接数：${count}\"\r\n\r\n                    //断开蓝牙连接\r\n                    if (BleManager.getInstance().isConnected(bleDevice)) {\r\n                        BleManager.getInstance().disconnect(bleDevice)\r\n                    }\r\n\r\n                    if (count == 0) {\r\n                        EventBus.getDefault()\r\n                            .post(\r\n                                MessageEventData(\r\n                                    BaseConstant.EVENT_CPR_DISCONNENT,\r\n                                    \"\",\r\n                                    null\r\n                                )\r\n                            )\r\n                    }\r\n\r\n//                unBind(bleDevice)\r\n                    mDeviceAdapter.remove(bleDevice)\r\n                    bleDevice.isLoading = false\r\n                    bleDevice.count = 0\r\n                    mDeviceAdapter.addData(bleDevice)\r\n                    isItemClick = true\r\n                }\r\n            })\r\n    }\r\n\r\n    private fun setScanRule() {\r\n        val uuids: Array<String>?\r\n//        val str_uuid: String = et_uuid.getText().toString()\r\n        val str_uuid: String = \"\"\r\n        uuids = if (TextUtils.isEmpty(str_uuid)) {\r\n            null\r\n        } else {\r\n            str_uuid.split(\",\").toTypedArray()\r\n        }\r\n        var serviceUuids: Array<UUID?>? = null\r\n        if (uuids != null && uuids.isNotEmpty()) {\r\n            serviceUuids = arrayOfNulls(uuids.size)\r\n            for (i in uuids.indices) {\r\n                val name = uuids[i]\r\n                val components = name.split(\"-\").toTypedArray()\r\n                if (components.size != 5) {\r\n                    serviceUuids[i] = null\r\n                } else {\r\n                    serviceUuids[i] = UUID.fromString(uuids[i])\r\n                }\r\n            }\r\n        }\r\n\r\n        val names = arrayOf(\"WMFS\", \"D87A\")\r\n        val mac: String = \"\"\r\n        val isAutoConnect: Boolean = false\r\n        val scanRuleConfig = BleScanRuleConfig.Builder()\r\n            .setServiceUuids(serviceUuids) // 只扫描指定的服务的设备，可选\r\n            .setDeviceName(true, *names) // 只扫描指定广播名的设备，可选\r\n            .setDeviceMac(mac) // 只扫描指定mac的设备，可选\r\n            .setAutoConnect(isAutoConnect) // 连接时的autoConnect参数，可选，默认false\r\n            .setScanTimeOut(5000) // 扫描超时时间，可选，默认10秒\r\n            .build()\r\n        BleManager.getInstance().initScanRule(scanRuleConfig)\r\n    }\r\n\r\n    private fun startScan() {\r\n//        viewBinding.tvModelNum.visibility = View.INVISIBLE\r\n        BleManager.getInstance().scan(object : BleScanCallback() {\r\n            override fun onScanStarted(success: Boolean) {\r\n                //已连接的蓝牙添加进来\r\n                val deviceList = BleManager.getInstance().allConnectedDevice\r\n                mDeviceAdapter.setList(deviceList)\r\n            }\r\n\r\n            override fun onLeScan(bleDevice: BleDevice) {\r\n                super.onLeScan(bleDevice)\r\n            }\r\n\r\n            override fun onScanning(bleDevice: BleDevice) {\r\n                mDeviceAdapter.addData(bleDevice)\r\n                mDeviceAdapter.notifyDataSetChanged()\r\n            }\r\n\r\n            override fun onScanFinished(scanResultList: List<BleDevice>) {\r\n                mDeviceAdapter.data.let {\r\n                    if (it.size == 0) {\r\n                        viewBinding.tvModelNum.visibility = View.VISIBLE\r\n                    }\r\n                }\r\n                stopRefresh()\r\n                isRefresh = false\r\n            }\r\n        })\r\n    }\r\n\r\n    override fun onRequestPermissionsResult(\r\n        requestCode: Int,\r\n        permissions: Array<String?>,\r\n        grantResults: IntArray\r\n    ) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r\n        when (requestCode) {\r\n            REQUEST_CODE_PERMISSION_LOCATION -> if (grantResults.size > 0) {\r\n                var i = 0\r\n                while (i < grantResults.size) {\r\n                    if (grantResults[i] == PackageManager.PERMISSION_GRANTED) {\r\n                        permissions[i]?.let { onPermissionGranted(it) }\r\n                    }\r\n                    i++\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun checkGPSIsOpen(): Boolean {\r\n        val locationManager = this.getSystemService(LOCATION_SERVICE) as LocationManager\r\n            ?: return false\r\n        return locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n        if (requestCode == REQUEST_CODE_OPEN_GPS) {\r\n            if (checkGPSIsOpen()) {\r\n                setScanRule()\r\n                startScan()\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始刷新动画\r\n     */\r\n    private fun startRefresh() {\r\n        viewBinding.tvDesc.setText(R.string.searching_for_available_models)\r\n        viewBinding.progressCircular.indeterminateDrawable =\r\n            resources.getDrawable(R.drawable.progressbar_circle)\r\n        viewBinding.progressCircular.progressDrawable =\r\n            resources.getDrawable(R.drawable.progressbar_circle)\r\n    }\r\n\r\n    /**\r\n     * 停止刷新动画\r\n     */\r\n    private fun stopRefresh() {\r\n        viewBinding.tvDesc.setText(R.string.available_models)\r\n        viewBinding.progressCircular.indeterminateDrawable =\r\n            resources.getDrawable(R.drawable.icon_wm_refresh)\r\n        viewBinding.progressCircular.progressDrawable =\r\n            resources.getDrawable(R.drawable.icon_wm_refresh)\r\n    }\r\n\r\n    private fun unBind(bleDevice: BleDevice) {\r\n        val gatt = BleManager.getInstance().getBluetoothGatt(bleDevice)\r\n        //蓝牙服务列表\r\n        val services = gatt.services\r\n        val bluetoothGattService = services[2]\r\n        val characteristic = bluetoothGattService.characteristics[1]\r\n        BleManager.getInstance().stopNotify(\r\n            bleDevice,\r\n            characteristic.service.uuid.toString(),\r\n            characteristic.uuid.toString()\r\n        )\r\n    }\r\n\r\n    private fun bind(bleDevice: BleDevice?) {\r\n        val gatt = BleManager.getInstance().getBluetoothGatt(bleDevice)\r\n        //蓝牙服务列表\r\n        val services = gatt.services\r\n        val bluetoothGattService = services[2]\r\n        val characteristic = bluetoothGattService.characteristics[1]\r\n        BleManager.getInstance().notify(\r\n            bleDevice,\r\n            characteristic.service.uuid.toString(),\r\n            characteristic.uuid.toString(),\r\n            object : BleNotifyCallback() {\r\n                override fun onNotifySuccess() {\r\n                    runOnUiThread(Runnable {\r\n                        Log.i(\"CPRActivity\", \"notify success\")\r\n                    })\r\n                }\r\n\r\n                override fun onNotifyFailure(exception: BleException) {\r\n                    runOnUiThread(Runnable {\r\n                        Log.i(\"CPRActivity\", exception.toString())\r\n                    })\r\n                }\r\n\r\n                override fun onCharacteristicChanged(data: ByteArray) {\r\n                    val formatHexString = HexUtil.formatHexString(\r\n                        characteristic.value,\r\n                        false\r\n                    )\r\n                    runOnUiThread { Log.e(\"CPRActivity\", formatHexString) }\r\n                    val dataDTO = DataVolatile.parseString(formatHexString)\r\n                    if (!isInitValue) {\r\n                        isInitValue = true\r\n                        DataVolatile.initPreDistance(formatHexString)\r\n                    }\r\n                    //发送数据\r\n                    StatusLiveData.data.postValue(dataDTO)\r\n                }\r\n            })\r\n    }\r\n\r\n    private fun addText(textView: TextView, content: String) {\r\n        textView.append(content)\r\n        textView.append(\"\\n\")\r\n        val offset = textView.lineCount * textView.lineHeight\r\n        if (offset > textView.height) {\r\n            textView.scrollTo(0, offset - textView.height)\r\n        }\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        EventBus.getDefault().unregister(this)\r\n    }\r\n\r\n    private fun initTTL() {\r\n        if (BaseApplication.driver!!.isConnected) {\r\n            val retval: Int? = BaseApplication.driver?.ResumeUsbPermission()\r\n            if (retval == 0) {\r\n                if (BaseApplication.driver!!.SetConfig(\r\n                        115200, 8, 1, 0, 0\r\n                    )//配置串口波特率，函数说明可参照编程手册\r\n                ) {\r\n                    Toast.makeText(\r\n                        this, \"串口设置成功!\",\r\n                        Toast.LENGTH_SHORT\r\n                    ).show()\r\n                } else {\r\n                    Toast.makeText(\r\n                        this, \"串口设置失败!\",\r\n                        Toast.LENGTH_SHORT\r\n                    ).show()\r\n                }\r\n            } else if (retval == -2) {\r\n                Toast.makeText(\r\n                    this, \"获取权限失败!\",\r\n                    Toast.LENGTH_SHORT\r\n                ).show()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun ttl() {\r\n        if (!BaseApplication.driver?.UsbFeatureSupported()!!) // 判断系统是否支持USB HOST\r\n        {\r\n            val dialog: androidx.appcompat.app.AlertDialog =\r\n                androidx.appcompat.app.AlertDialog.Builder(this)\r\n                    .setTitle(\"提示\")\r\n                    .setMessage(\"您的手机不支持USB HOST，请更换其他手机再试！\")\r\n                    .setPositiveButton(\r\n                        \"确认\"\r\n                    ) { arg0, arg1 -> System.exit(0) }.create()\r\n            dialog.setCanceledOnTouchOutside(false)\r\n            dialog.show()\r\n        }\r\n    }\r\n\r\n    private fun openTTL() {\r\n        if (!isOpen) {\r\n            when (BaseApplication.driver?.ResumeUsbList()) {\r\n                -1 -> { // ResumeUsbList方法用于枚举CH34X设备以及打开相关设备\r\n                    Toast.makeText(\r\n                        this, \"打开设备失败!\",\r\n                        Toast.LENGTH_SHORT\r\n                    ).show()\r\n                    BaseApplication.driver?.CloseDevice()\r\n                }\r\n                0 -> {\r\n                    if (!BaseApplication.driver?.UartInit()!!) { //对串口设备进行初始化操作\r\n                        Toast.makeText(\r\n                            this, \"设备初始化失败!\",\r\n                            Toast.LENGTH_SHORT\r\n                        ).show()\r\n                        Toast.makeText(\r\n                            this, \"打开\" +\r\n                                    \"设备失败!\",\r\n                            Toast.LENGTH_SHORT\r\n                        ).show()\r\n                        return\r\n                    }\r\n                    Toast.makeText(\r\n                        this, \"打开设备成功!\",\r\n                        Toast.LENGTH_SHORT\r\n                    ).show()\r\n                    initTTL()\r\n                    isOpen = true\r\n                    ReadThread().start() //开启读线程读取串口接收的数据\r\n                }\r\n                else -> {\r\n                    val builder = androidx.appcompat.app.AlertDialog.Builder(this)\r\n                    builder.setIcon(R.mipmap.icon_wm_logo)\r\n                    builder.setTitle(\"未授权限\")\r\n                    builder.setMessage(\"确认退出吗？\")\r\n                    builder.setPositiveButton(\r\n                        \"确定\"\r\n                    ) { dialog, which ->\r\n                        //System.exit(0)\r\n                        dialog.dismiss()\r\n                    }\r\n                    builder.setNegativeButton(\r\n                        \"返回\"\r\n                    ) { dialog, which ->\r\n                        dialog.dismiss()\r\n                    }\r\n                    builder.show()\r\n                }\r\n            }\r\n        } else {\r\n            //关闭USB TTL\r\n            isOpen = false\r\n            try {\r\n                Thread.sleep(200)\r\n            } catch (e: InterruptedException) {\r\n                e.printStackTrace()\r\n            }\r\n            BaseApplication.driver?.CloseDevice()\r\n//            totalrecv = 0\r\n        }\r\n    }\r\n\r\n    private var isOpen = false\r\n\r\n    inner class ReadThread : Thread() {\r\n        override fun run() {\r\n            val buffer = ByteArray(64)\r\n            while (true) {\r\n                val msg = Message.obtain()\r\n                if (!isOpen) {\r\n                    break\r\n                }\r\n                val length: Int = BaseApplication.driver!!.ReadData(buffer, 64)\r\n                if (length > 0) {\r\n                    runOnUiThread {\r\n                        Log.i(\"CPRActivity\", ConvertUtil.toHexString(buffer, length))\r\n                        val dataDTO =\r\n                            DataVolatile.parseString(ConvertUtil.toHexString(buffer, length))\r\n                        //发布数据\r\n                        StatusLiveData.data.postValue(dataDTO)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt b/app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt
--- a/app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt	(revision e98ddfca0c316c2a6b9dd4f7ddba67e4f08fbcae)
+++ b/app/src/main/java/com/pr/perfectrecovery/activity/CPRActivity.kt	(date 1645767000240)
@@ -52,6 +52,7 @@
 import org.greenrobot.eventbus.ThreadMode
 import java.util.*
 import kotlin.collections.ArrayList
+import kotlin.system.exitProcess
 
 /**
  * CPR页面  蓝夜列表扫描链接
@@ -100,7 +101,7 @@
 
         viewBinding.progressCircular.setOnClickListener {
             if (!isRefresh) {
-                viewBinding.tvModelNum.visibility = View.INVISIBLE
+                viewBinding.tvMsg.visibility = View.INVISIBLE
                 startRefresh()
                 checkPermissions()
                 isRefresh = true
@@ -143,7 +144,7 @@
                 val bleDevice = mDeviceAdapter.getItem(position)
                 if (!BleManager.getInstance().isConnected(bleDevice)) {
                     if (count >= 6) {//处理提示语设备连接过多提示
-                        viewBinding.tvModelNum.text = "当前版本最多同时支持6台模型"
+                        viewBinding.tvMsg.text = "当前版本最多同时支持6台模型"
                         hintHandler.postDelayed(this::setTextNull, 2000)
                     }
                     BleManager.getInstance().cancelScan()
@@ -161,7 +162,7 @@
     }
 
     private fun setTextNull() {
-        viewBinding.tvModelNum.text = ""
+        viewBinding.tvMsg.text = ""
     }
 
     override fun onResume() {
@@ -185,6 +186,7 @@
     private fun checkPermissions() {
         val bluetoothAdapter = BluetoothAdapter.getDefaultAdapter()
         if (!bluetoothAdapter.isEnabled) {
+
             Toast.makeText(this, getString(R.string.please_open_blue), Toast.LENGTH_LONG).show()
             return
         }
@@ -268,9 +270,9 @@
                     mDeviceAdapter.addData(position, bleDevice)
                     isItemClick = true
                     if (exception.code == BleException.ERROR_CODE_TIMEOUT) {
-                        viewBinding.tvModelNum.text = "连接超时，请重新连接"
+                        viewBinding.tvMsg.text = "连接超时，请重新连接"
                     } else {
-                        viewBinding.tvModelNum.text = "连接失败，请重新连接"
+                        viewBinding.tvMsg.text = "连接失败，请重新连接"
                     }
                 }
 
@@ -395,7 +397,7 @@
             override fun onScanFinished(scanResultList: List<BleDevice>) {
                 mDeviceAdapter.data.let {
                     if (it.size == 0) {
-                        viewBinding.tvModelNum.visibility = View.VISIBLE
+                        viewBinding.tvMsg.visibility = View.VISIBLE
                     }
                 }
                 stopRefresh()
@@ -564,7 +566,11 @@
                     .setMessage("您的手机不支持USB HOST，请更换其他手机再试！")
                     .setPositiveButton(
                         "确认"
-                    ) { arg0, arg1 -> System.exit(0) }.create()
+                    ) { arg0, arg1 ->
+                        {
+                            //exitProcess(0)
+                        }
+                    }.create()
             dialog.setCanceledOnTouchOutside(false)
             dialog.show()
         }
Index: app/src/main/res/layout/activity_cpractivity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/theme_color\"\r\n    tools:context=\".activity.CPRActivity\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"@dimen/dp_15\"\r\n        android:layout_marginTop=\"27dp\"\r\n        android:src=\"@mipmap/icon_wm_top_logo\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/iv2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"@dimen/dp_10\"\r\n        android:src=\"@mipmap/icon_wm_cpr_bt\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/imageView\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvModelNum\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"@dimen/dp_10\"\r\n        android:text=\"请检查设备和蓝牙模型，然后点击刷新键\"\r\n        android:textColor=\"#FC7574\"\r\n        android:textSize=\"@dimen/text_14\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/iv2\" />\r\n\r\n    <View\r\n        android:id=\"@+id/view\"\r\n        android:layout_width=\"5dp\"\r\n        android:layout_height=\"16dp\"\r\n        android:layout_marginStart=\"31dp\"\r\n        android:layout_marginTop=\"@dimen/dp_10\"\r\n        android:background=\"@drawable/border_dp\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/tvModelNum\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvDesc\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"@dimen/dp_6\"\r\n        android:text=\"@string/available_models\"\r\n        android:textColor=\"#3DB38E\"\r\n        android:textSize=\"16sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/view\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/view\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/view\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvHint\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"此版本最多支持6个模型\"\r\n        android:textColor=\"#3DB38E\"\r\n        android:textSize=\"16sp\"\r\n        android:visibility=\"gone\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/view\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/view\" />\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progress_circular\"\r\n        android:layout_width=\"24dp\"\r\n        android:layout_height=\"24dp\"\r\n        android:layout_marginEnd=\"@dimen/dp_30\"\r\n        android:indeterminate=\"false\"\r\n        android:indeterminateDrawable=\"@mipmap/icon_wm_refresh\"\r\n        android:indeterminateDuration=\"900\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/tvDesc\" />\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerview\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginStart=\"31dp\"\r\n        android:layout_marginTop=\"@dimen/dp_10\"\r\n        android:layout_marginEnd=\"28dp\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/bottom\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/tvDesc\"\r\n        tools:listitem=\"@layout/item_bluetooth\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvConnections\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"设备连接数：\"\r\n        android:textColor=\"#3DB38E\"\r\n        android:textSize=\"16sp\"\r\n        android:visibility=\"visible\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/bottom\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/bottom\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnOpen\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TTL串口调试\"\r\n        android:textColor=\"#3DB38E\"\r\n        android:textSize=\"16sp\"\r\n        android:visibility=\"visible\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/bottom\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/tvConnections\" />\r\n\r\n    <include\r\n            android:id=\"@+id/bottom\"\r\n            layout=\"@layout/layout_bottom_right\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            tools:layout_editor_absoluteX=\"0dp\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_cpractivity.xml b/app/src/main/res/layout/activity_cpractivity.xml
--- a/app/src/main/res/layout/activity_cpractivity.xml	(revision e98ddfca0c316c2a6b9dd4f7ddba67e4f08fbcae)
+++ b/app/src/main/res/layout/activity_cpractivity.xml	(date 1645760573516)
@@ -28,7 +28,7 @@
         app:layout_constraintTop_toBottomOf="@+id/imageView" />
 
     <TextView
-        android:id="@+id/tvModelNum"
+        android:id="@+id/tvMsg"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginTop="@dimen/dp_10"
@@ -48,7 +48,7 @@
         android:layout_marginTop="@dimen/dp_10"
         android:background="@drawable/border_dp"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/tvModelNum" />
+        app:layout_constraintTop_toBottomOf="@+id/tvMsg" />
 
     <TextView
         android:id="@+id/tvDesc"
Index: app/src/main/res/layout/activity_cpr_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        xmlns:tools=\"http://schemas.android.com/tools\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/theme_color\"\r\n        tools:context=\".activity.ConfigActivity\">\r\n\r\n    <include\r\n            android:id=\"@+id/top\"\r\n            layout=\"@layout/layout_top\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <androidx.core.widget.NestedScrollView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/bottom\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/top\">\r\n\r\n        <androidx.appcompat.widget.LinearLayoutCompat\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:paddingBottom=\"@dimen/dp_12\">\r\n\r\n                <View\r\n                        android:id=\"@+id/view\"\r\n                        android:layout_width=\"5dp\"\r\n                        android:layout_height=\"16dp\"\r\n                        android:layout_marginStart=\"@dimen/dp_20\"\r\n                        android:layout_marginTop=\"@dimen/dp_10\"\r\n                        android:background=\"@drawable/border_dp\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                <TextView\r\n                        android:id=\"@+id/textView2\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"@dimen/dp_6\"\r\n                        android:text=\"CPR评分配置\"\r\n                        android:textColor=\"@color/white\"\r\n                        android:textSize=\"@dimen/text_16\"\r\n                        android:textStyle=\"bold\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/view\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/view\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/view\" />\r\n\r\n                <TextView\r\n                        android:id=\"@+id/tvMsg\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginEnd=\"@dimen/dp_20\"\r\n                        android:textColor=\"@color/color_text_selected\"\r\n                        android:textSize=\"14sp\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/textView2\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/textView2\" />\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                        android:id=\"@+id/constraintlayout5\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"@dimen/dp_10\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/textView2\">\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv1\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"28dp\"\r\n                            android:layout_marginTop=\"8dp\"\r\n                            android:ems=\"7\"\r\n                            android:text=\"按压深度（cm）\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/textview1\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\" ：\"\r\n                            android:textColor=\"#ffffffff\"\r\n                            android:textSize=\"16sp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tv1\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tv1\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tv1\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv2\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_30\"\r\n                            android:layout_marginTop=\"@dimen/dp_30\"\r\n                            android:ems=\"7\"\r\n                            android:text=\"按压频率（cpm）\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/tv1\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/textview2\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\" ：\"\r\n                            android:textColor=\"#ffffffff\"\r\n                            android:textSize=\"16sp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tv2\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tv2\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tv2\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv3\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"28dp\"\r\n                            android:layout_marginTop=\"28dp\"\r\n                            android:ems=\"7\"\r\n                            android:text=\"按压中断（s）\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/tv2\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/textview3\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\" ：\"\r\n                            android:textColor=\"#ffffffff\"\r\n                            android:textSize=\"16sp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tv3\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tv3\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tv3\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv4\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_30\"\r\n                            android:layout_marginTop=\"@dimen/dp_30\"\r\n                            android:ems=\"7\"\r\n                            android:text=\"潮气量（ml）\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/tv3\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/textview4\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\" ：\"\r\n                            android:textColor=\"#ffffffff\"\r\n                            android:textSize=\"16sp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tv4\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tv4\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tv4\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv5\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_30\"\r\n                            android:layout_marginTop=\"@dimen/dp_30\"\r\n                            android:ems=\"7\"\r\n                            android:text=\"潮气频率（vpm）\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/tv4\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/textview5\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\" ：\"\r\n                            android:textColor=\"#ffffffff\"\r\n                            android:textSize=\"16sp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tv5\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tv5\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tv5\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etDepth\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/textview1\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/textview1\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/textview1\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etDepthFrequency\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/textview2\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/textview2\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/textview2\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etTidalVolume\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/textview4\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/textview4\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/textview4\"\r\n                            app:layout_constraintVertical_bias=\"1.0\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etTidalFrequency\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/textview5\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/textview5\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/textview5\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tvd1\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_10\"\r\n                            android:text=\"到\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_14\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/etDepth\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/etDepth\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/etDepth\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tvd2\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_10\"\r\n                            android:text=\"到\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_14\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/etDepthFrequency\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/etDepthFrequency\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/etDepthFrequency\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tvd3\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_10\"\r\n                            android:text=\"    允许中断\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_14\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/textview3\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/textview3\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/textview3\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tvd4\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_10\"\r\n                            android:text=\"到\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_14\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/etTidalVolume\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/etTidalVolume\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/etTidalVolume\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tvd5\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_10\"\r\n                            android:text=\"到\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_14\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/etTidalFrequency\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/etTidalFrequency\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/etTidalFrequency\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etDepthEnd\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            android:layout_width=\"58dp\"\r\n                            android:layout_height=\"25dp\"\r\n                            android:layout_marginStart=\"8dp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tvd1\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tvd1\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tvd1\"\r\n                            app:layout_constraintVertical_bias=\"0.444\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etDepthFrequencyEnd\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            android:layout_marginStart=\"@dimen/dp_10\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tvd2\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tvd2\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tvd2\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etInterruptTime\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tvd3\"\r\n                            app:layout_constraintStart_toStartOf=\"@+id/etDepthFrequencyEnd\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tvd3\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etTidalVolumeEnd\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tvd4\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tvd4\"\r\n                            app:layout_constraintEnd_toEndOf=\"@+id/etInterruptTime\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etTidalFrequencyEnd\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            android:layout_marginStart=\"@dimen/dp_10\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tvd5\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tvd5\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tvd5\" />\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                        android:id=\"@+id/constraintLayout6\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"@dimen/dp_40\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/constraintlayout5\">\r\n\r\n                    <View\r\n                            android:id=\"@+id/view1\"\r\n                            android:layout_width=\"5dp\"\r\n                            android:layout_height=\"16dp\"\r\n                            android:layout_marginStart=\"@dimen/dp_20\"\r\n                            android:background=\"@drawable/border_dp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_10\"\r\n                            android:text=\"考核设置\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            android:textStyle=\"bold\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/view1\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/view1\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/view1\" />\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                        android:id=\"@+id/constraintlayout\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"@dimen/dp_30\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/constraintLayout6\">\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tvProcess1\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_30\"\r\n                            android:ems=\"7\"\r\n                            android:text=\"操作时长（s）\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/textview6\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\" ：\"\r\n                            android:textColor=\"#ffffffff\"\r\n                            android:textSize=\"16sp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tvProcess1\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tvProcess1\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tvProcess1\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etTime\"\r\n                            style=\"@style/EditTextStyle2\"\r\n                            android:layout_marginEnd=\"@dimen/dp_30\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                        android:id=\"@+id/constraintlayout2\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"@dimen/dp_30\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/constraintlayout\">\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tvProcess2\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_30\"\r\n                            android:ems=\"7\"\r\n                            android:text=\"循环次数（次）\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/etCycles\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/textview7\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\" ：\"\r\n                            android:textColor=\"#ffffffff\"\r\n                            android:textSize=\"16sp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tvProcess2\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tvProcess2\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tvProcess2\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etCycles\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            android:layout_marginEnd=\"@dimen/dp_30\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                        android:id=\"@+id/constraintlayout3\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"@dimen/dp_30\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/constraintlayout2\">\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tvProcess3\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/dp_30\"\r\n                            android:ems=\"7\"\r\n                            android:text=\"按压通气比列\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/textview8\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\" ：\"\r\n                            android:textColor=\"#ffffffff\"\r\n                            android:textSize=\"16sp\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/tvProcess3\"\r\n                            app:layout_constraintStart_toEndOf=\"@+id/tvProcess3\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tvProcess3\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etPr\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            android:layout_marginEnd=\"@dimen/dp_10\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/etQy\"\r\n                            app:layout_constraintEnd_toStartOf=\"@+id/textView3\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/etQy\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/textView3\"\r\n                            android:layout_width=\"10dp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginEnd=\"@dimen/dp_10\"\r\n                            android:gravity=\"center\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:text=\":\"\r\n                            android:textSize=\"@dimen/text_18\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/etQy\"\r\n                            app:layout_constraintEnd_toStartOf=\"@+id/etQy\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/etQy\" />\r\n\r\n                    <EditText\r\n                            android:id=\"@+id/etQy\"\r\n                            style=\"@style/EditTextStyle\"\r\n                            android:layout_marginEnd=\"28dp\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"0dp\"\r\n                        android:layout_marginTop=\"@dimen/dp_10\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/constraintlayout3\">\r\n\r\n                    <androidx.constraintlayout.widget.Guideline\r\n                            android:id=\"@+id/guideline\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"vertical\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintGuide_percent=\"0.5\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_kay\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"36dp\"\r\n                            android:layout_marginTop=\"@dimen/dp_15\"\r\n                            android:text=\"检查环境\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_value\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"@dimen/dp_15\"\r\n                            android:text=\"检查意识\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"@+id/guideline\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_kay2\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"36dp\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            android:text=\"检查呼吸\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/tv_kay\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_value2\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"检查脉搏\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintHorizontal_bias=\"0.503\"\r\n                            app:layout_constraintStart_toStartOf=\"@+id/guideline\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tv_kay2\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_kay3\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"36dp\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            android:text=\"检查体位\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/tv_kay2\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_value3\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"清理口腔\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"@+id/guideline\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tv_kay3\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_kay4\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"36dp\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            android:text=\"拨打120\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/tv_kay3\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_value4\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"寻求帮助\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"@+id/guideline\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tv_kay4\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_kay5\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"36dp\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            android:text=\"体外除颤\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/tv_kay4\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tv_value5\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"完成评估\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_15\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"@+id/guideline\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/tv_kay5\" />\r\n\r\n                    <View\r\n                            android:id=\"@+id/viewline\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"0.5dp\"\r\n                            android:layout_marginStart=\"@dimen/dp_16\"\r\n                            android:layout_marginTop=\"@dimen/dp_24\"\r\n                            android:layout_marginEnd=\"@dimen/dp_16\"\r\n                            android:background=\"#1eFFFFFF\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/tv_kay5\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/text\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"15dp\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            android:drawablePadding=\"@dimen/dp_8\"\r\n                            android:text=\"总分100分\"\r\n                            android:textColor=\"@color/white\"\r\n                            android:textSize=\"@dimen/text_16\"\r\n                            android:textStyle=\"bold\"\r\n                            app:drawableStartCompat=\"@mipmap/icon_wm_red_arrow\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/viewline\" />\r\n\r\n                    <TextView\r\n                            android:id=\"@+id/tvDesc\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginEnd=\"@dimen/dp_40\"\r\n                            android:text=\"三项加起来总分 ＜ 100分\"\r\n                            android:textColor=\"@color/color_text_selected\"\r\n                            android:textSize=\"14sp\"\r\n                            android:visibility=\"invisible\"\r\n                            app:layout_constraintBottom_toBottomOf=\"@+id/text\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"@+id/text\" />\r\n\r\n                    <androidx.constraintlayout.widget.ConstraintLayout\r\n                            android:id=\"@+id/constraintlayout7\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/text\">\r\n\r\n                        <TextView\r\n                                android:id=\"@+id/tvProcess4\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginStart=\"36dp\"\r\n                                android:text=\"流程如上：\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"@dimen/text_16\"\r\n                                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                                app:layout_constraintStart_toStartOf=\"parent\"\r\n                                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                        <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginEnd=\"@dimen/dp_4\"\r\n                                android:text=\"占\"\r\n                                android:textColor=\"#ffffffff\"\r\n                                android:textSize=\"14sp\"\r\n                                app:layout_constraintBottom_toBottomOf=\"@+id/etProcess\"\r\n                                app:layout_constraintEnd_toStartOf=\"@+id/etProcess\"\r\n                                app:layout_constraintTop_toTopOf=\"@+id/etProcess\" />\r\n\r\n                        <EditText\r\n                                android:id=\"@+id/etProcess\"\r\n                                style=\"@style/EditTextStyle\"\r\n                                android:layout_marginEnd=\"@dimen/dp_4\"\r\n                                app:layout_constraintBottom_toBottomOf=\"@+id/textView\"\r\n                                app:layout_constraintEnd_toStartOf=\"@+id/textView\"\r\n                                app:layout_constraintTop_toTopOf=\"@+id/textView\"\r\n                                app:layout_constraintVertical_bias=\"0.428\" />\r\n\r\n                        <TextView\r\n                                android:id=\"@+id/textView\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginEnd=\"@dimen/dp_30\"\r\n                                android:text=\"分\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"@dimen/text_16\"\r\n                                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                    <View\r\n                            android:id=\"@+id/viewline3\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"0.5dp\"\r\n                            android:layout_marginStart=\"@dimen/dp_16\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            android:layout_marginEnd=\"@dimen/dp_16\"\r\n                            android:background=\"#1eFFFFFF\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/constraintlayout7\" />\r\n\r\n                    <androidx.constraintlayout.widget.ConstraintLayout\r\n                            android:id=\"@+id/constraintlayout1\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/viewline3\">\r\n\r\n                        <TextView\r\n                                android:id=\"@+id/tvProcess\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginStart=\"36dp\"\r\n                                android:text=\"胸外按压：\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"@dimen/text_16\"\r\n                                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                                app:layout_constraintStart_toStartOf=\"parent\"\r\n                                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                        <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginEnd=\"@dimen/dp_4\"\r\n                                android:text=\"占\"\r\n                                android:textColor=\"#ffffffff\"\r\n                                android:textSize=\"14sp\"\r\n                                app:layout_constraintBottom_toBottomOf=\"@+id/etCompressions\"\r\n                                app:layout_constraintEnd_toStartOf=\"@+id/etCompressions\"\r\n                                app:layout_constraintTop_toTopOf=\"@+id/etCompressions\" />\r\n\r\n                        <EditText\r\n                                android:id=\"@+id/etCompressions\"\r\n                                style=\"@style/EditTextStyle\"\r\n                                android:layout_marginEnd=\"@dimen/dp_4\"\r\n                                app:layout_constraintBottom_toBottomOf=\"@+id/tvProcess\"\r\n                                app:layout_constraintEnd_toStartOf=\"@+id/textView4\"\r\n                                app:layout_constraintTop_toTopOf=\"@+id/tvProcess\" />\r\n\r\n                        <TextView\r\n                                android:id=\"@+id/textView4\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginEnd=\"@dimen/dp_30\"\r\n                                android:text=\"分\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"@dimen/text_16\"\r\n                                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                    <View\r\n                            android:id=\"@+id/viewline4\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"0.5dp\"\r\n                            android:layout_marginStart=\"@dimen/dp_16\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            android:layout_marginEnd=\"@dimen/dp_16\"\r\n                            android:background=\"#1eFFFFFF\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/constraintlayout1\" />\r\n\r\n                    <androidx.constraintlayout.widget.ConstraintLayout\r\n                            android:id=\"@+id/constraintlayout8\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/viewline4\">\r\n\r\n                        <TextView\r\n                                android:id=\"@+id/tvProcess5\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginStart=\"36dp\"\r\n                                android:text=\"人工通气：\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"@dimen/text_16\"\r\n                                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                                app:layout_constraintStart_toStartOf=\"parent\"\r\n                                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                        <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginEnd=\"@dimen/dp_4\"\r\n                                android:text=\"占\"\r\n                                android:textColor=\"#ffffffff\"\r\n                                android:textSize=\"14sp\"\r\n                                app:layout_constraintBottom_toBottomOf=\"@+id/etVentilation\"\r\n                                app:layout_constraintEnd_toStartOf=\"@+id/etVentilation\"\r\n                                app:layout_constraintTop_toTopOf=\"@+id/etVentilation\" />\r\n\r\n                        <EditText\r\n                                android:id=\"@+id/etVentilation\"\r\n                                style=\"@style/EditTextStyle\"\r\n                                android:layout_marginEnd=\"8dp\"\r\n                                app:layout_constraintBottom_toBottomOf=\"@+id/tvProcess5\"\r\n                                app:layout_constraintEnd_toStartOf=\"@+id/textView5\"\r\n                                app:layout_constraintTop_toTopOf=\"@+id/tvProcess5\" />\r\n\r\n                        <TextView\r\n                                android:id=\"@+id/textView5\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginEnd=\"@dimen/dp_30\"\r\n                                android:text=\"分\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"@dimen/text_16\"\r\n                                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                    <View\r\n                            android:id=\"@+id/viewline5\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"0.5dp\"\r\n                            android:layout_marginStart=\"@dimen/dp_20\"\r\n                            android:layout_marginTop=\"@dimen/dp_20\"\r\n                            android:layout_marginEnd=\"@dimen/dp_16\"\r\n                            android:background=\"#1eFFFFFF\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/constraintlayout8\" />\r\n\r\n                    <androidx.constraintlayout.widget.ConstraintLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"@dimen/dp_16\"\r\n                            app:layout_constraintTop_toBottomOf=\"@+id/viewline5\">\r\n\r\n                        <TextView\r\n                                android:id=\"@+id/textView6\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginStart=\"15dp\"\r\n                                android:drawablePadding=\"@dimen/dp_8\"\r\n                                android:text=\"中断扣分\"\r\n                                android:textColor=\"#ffffffff\"\r\n                                android:textSize=\"16sp\"\r\n                                android:textStyle=\"bold\"\r\n                                app:drawableStartCompat=\"@mipmap/icon_wm_green_arrow\"\r\n                                app:layout_constraintStart_toStartOf=\"parent\"\r\n                                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                        <TextView\r\n                                android:id=\"@+id/textView8\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginStart=\"15dp\"\r\n                                android:layout_marginTop=\"@dimen/dp_20\"\r\n                                android:text=\"（超过设定时）中断时间（s）\"\r\n                                android:textColor=\"#ffffffff\"\r\n                                android:textSize=\"16sp\"\r\n                                app:layout_constraintStart_toStartOf=\"@+id/textView6\"\r\n                                app:layout_constraintTop_toBottomOf=\"@+id/textView6\" />\r\n\r\n                        <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginEnd=\"@dimen/dp_4\"\r\n                                android:text=\"t*\"\r\n                                android:textColor=\"#ffffffff\"\r\n                                android:textSize=\"18sp\"\r\n                                app:layout_constraintBottom_toBottomOf=\"@+id/etDeduction\"\r\n                                app:layout_constraintEnd_toStartOf=\"@+id/etDeduction\"\r\n                                app:layout_constraintTop_toTopOf=\"@+id/etDeduction\" />\r\n\r\n                        <EditText\r\n                                android:id=\"@+id/etDeduction\"\r\n                                style=\"@style/EditTextStyle\"\r\n                                android:layout_marginEnd=\"@dimen/dp_4\"\r\n                                app:layout_constraintBottom_toBottomOf=\"@+id/textView8\"\r\n                                app:layout_constraintEnd_toStartOf=\"@+id/textView7\"\r\n                                app:layout_constraintTop_toTopOf=\"@+id/textView8\" />\r\n\r\n                        <TextView\r\n                                android:id=\"@+id/textView7\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginEnd=\"@dimen/dp_30\"\r\n                                android:text=\"分\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"@dimen/text_16\"\r\n                                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                                app:layout_constraintTop_toTopOf=\"@+id/etDeduction\" />\r\n                    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n        </androidx.appcompat.widget.LinearLayoutCompat>\r\n    </androidx.core.widget.NestedScrollView>\r\n\r\n    <include\r\n            android:id=\"@+id/bottom\"\r\n            layout=\"@layout/layout_bottom\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"60dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_cpr_list.xml b/app/src/main/res/layout/activity_cpr_list.xml
--- a/app/src/main/res/layout/activity_cpr_list.xml	(revision e98ddfca0c316c2a6b9dd4f7ddba67e4f08fbcae)
+++ b/app/src/main/res/layout/activity_cpr_list.xml	(date 1645759052680)
@@ -661,10 +661,9 @@
                             android:layout_width="wrap_content"
                             android:layout_height="wrap_content"
                             android:layout_marginEnd="@dimen/dp_40"
-                            android:text="三项加起来总分 ＜ 100分"
                             android:textColor="@color/color_text_selected"
                             android:textSize="14sp"
-                            android:visibility="invisible"
+                            android:visibility="visible"
                             app:layout_constraintBottom_toBottomOf="@+id/text"
                             app:layout_constraintEnd_toEndOf="parent"
                             app:layout_constraintTop_toTopOf="@+id/text" />
@@ -917,7 +916,8 @@
                                 android:layout_marginEnd="@dimen/dp_4"
                                 app:layout_constraintBottom_toBottomOf="@+id/textView8"
                                 app:layout_constraintEnd_toStartOf="@+id/textView7"
-                                app:layout_constraintTop_toTopOf="@+id/textView8" />
+                                app:layout_constraintTop_toTopOf="@+id/textView8"
+                                app:layout_constraintVertical_bias="0.0" />
 
                         <TextView
                                 android:id="@+id/textView7"
Index: app/src/main/java/com/pr/perfectrecovery/fragment/CycleFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pr.perfectrecovery.fragment\r\n\r\nimport android.media.MediaPlayer\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.os.Looper\r\nimport android.os.SystemClock\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.animation.AlphaAnimation\r\nimport android.widget.Chronometer\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.blankj.utilcode.util.GsonUtils\r\nimport com.pr.perfectrecovery.R\r\nimport com.pr.perfectrecovery.base.BaseConstant\r\nimport com.pr.perfectrecovery.bean.BaseDataDTO\r\nimport com.pr.perfectrecovery.bean.MessageEventData\r\nimport com.pr.perfectrecovery.bean.ConfigBean\r\nimport com.pr.perfectrecovery.bean.TrainingDTO\r\nimport com.pr.perfectrecovery.databinding.CycleFragmentBinding\r\nimport com.pr.perfectrecovery.fragment.viewmodel.CycleViewModel\r\nimport com.pr.perfectrecovery.livedata.StatusLiveData\r\nimport com.pr.perfectrecovery.utils.DataVolatile\r\nimport com.pr.perfectrecovery.utils.TimeUtils\r\nimport com.pr.perfectrecovery.view.DialChart07View\r\nimport com.pr.perfectrecovery.view.PressLayoutView\r\nimport com.tencent.mmkv.MMKV\r\nimport org.greenrobot.eventbus.EventBus\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.math.abs\r\n\r\nprivate const val ARG_PARAM1 = \"param1\"\r\nprivate const val ARG_PARAM2 = \"param2\"\r\n\r\n/**\r\n * CPR按压页\r\n */\r\nclass CycleFragment : Fragment() {\r\n    private lateinit var viewBinding: CycleFragmentBinding\r\n    private var counter = Counter()\r\n    private var mMediaPlayer: MediaPlayer? = null\r\n    private var isTS: Boolean = false\r\n    private var isYY: Boolean = false\r\n    private var cycleCount = 0\r\n    private var mBaseDataDTO: BaseDataDTO? = null\r\n    private var isStart = false\r\n    private var isTimeing = true\r\n    private var configBean = ConfigBean()\r\n\r\n    //中断计时累加\r\n    private var timeOut: Long = 0\r\n\r\n    //按压总数统计\r\n    private var pressCount: Int = 0\r\n\r\n    companion object {\r\n        fun newInstance(isTS: Boolean, isYY: Boolean) = CycleFragment().apply {\r\n            arguments = Bundle().apply {\r\n                putBoolean(ARG_PARAM1, isTS)\r\n                putBoolean(ARG_PARAM2, isYY)\r\n            }\r\n        }\r\n    }\r\n\r\n    private lateinit var viewModel: CycleViewModel\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        viewBinding = CycleFragmentBinding.inflate(layoutInflater)\r\n        return viewBinding.root\r\n    }\r\n\r\n    override fun onActivityCreated(savedInstanceState: Bundle?) {\r\n        super.onActivityCreated(savedInstanceState)\r\n        arguments?.let {\r\n            isTS = it.getBoolean(ARG_PARAM1)\r\n            isYY = it.getBoolean(ARG_PARAM2)\r\n        }\r\n        viewModel = ViewModelProvider(this).get(CycleViewModel::class.java)\r\n        initView()\r\n    }\r\n\r\n    private fun initView() {\r\n        alphaAnimation()\r\n        val jsonString = MMKV.defaultMMKV().decodeString(BaseConstant.MMKV_WM_CONFIGURATION)\r\n        configBean = GsonUtils.fromJson(jsonString, ConfigBean::class.java)\r\n        DataVolatile.PR_HIGH_VALUE = configBean.prHigh()\r\n        DataVolatile.PR_LOW_VALUE = configBean.prLow()\r\n        //按压通气比列\r\n        StatusLiveData.data.observe(requireActivity(), Observer {\r\n            if (it.isStart) {\r\n                setViewDate(it)\r\n                viewBinding.tvPress3.text = \"距离值：${it.distance}\"\r\n                viewBinding.tvPress4.text = \"气压值：${it.bpValue}\"\r\n                viewBinding.tvPress5.text = \"按压频率：${it.pf}\"\r\n                viewBinding.tvPress6.text = \"吹气频率：${it.cf}\"\r\n                viewBinding.tvPress7.text = \"气道状态：${it.aisleType}\"\r\n                viewBinding.tvPress8.text = \"按压位置：${it.psrType}\"\r\n                viewBinding.tvPress9.text = \"初始值：${DataVolatile.preDistance}\"\r\n                viewBinding.tvPress10.text = \"按压深度：${abs(DataVolatile.preDistance - it.distance)}\"\r\n            }\r\n        })\r\n    }\r\n\r\n    private val VOICE_MP3_BGM: Int = 1//节奏音乐\r\n    private val VOICE_MP3_AYBZ: Int = 2//按压不足\r\n    private val VOICE_MP3_AYGD: Int = 3//按压过大\r\n    private val VOICE_MP3_AYWZCW: Int = 4//按压位置错误\r\n    private val VOICE_MP3_CQBZ: Int = 5//吹气不足\r\n    private val VOICE_MP3_CQGD: Int = 6//吹气过大\r\n    private val VOICE_MP3_CQJW: Int = 7//吹气进胃\r\n    private val VOICE_MP3_WDKQD: Int = 8//未打开气道\r\n    private val VOICE_MP3_WHT: Int = 9//未回弹\r\n    private val VOICE_MP3_DIS: Int = 10//蓝牙断开连接\r\n\r\n    private var mpType = -1\r\n    private var isPlay = false\r\n\r\n    private fun setPlayVoice(type: Int) {\r\n        if (isTS && !isPlay) {\r\n            if (mMediaPlayer != null) {\r\n                mMediaPlayer?.reset()\r\n            }\r\n            isPlay = true\r\n            mpType = -1\r\n            when (type) {\r\n                VOICE_MP3_AYBZ -> {\r\n                    mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_aybz)\r\n                }\r\n                VOICE_MP3_AYGD -> {\r\n                    mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_aygd)\r\n                }\r\n                VOICE_MP3_AYWZCW -> {\r\n                    mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_aywzcw)\r\n                }\r\n                VOICE_MP3_CQBZ -> {\r\n                    mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_cqbz)\r\n                }\r\n                VOICE_MP3_CQGD -> {\r\n                    mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_cqgd)\r\n                }\r\n                VOICE_MP3_CQJW -> {\r\n                    mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_cqjw)\r\n                }\r\n                VOICE_MP3_WDKQD -> {\r\n                    mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_wdkqd)\r\n                }\r\n                VOICE_MP3_WHT -> {\r\n                    mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_wht)\r\n                }\r\n                VOICE_MP3_DIS -> {\r\n                    mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_blueooth)\r\n                }\r\n            }\r\n            //如果是其他MP3播完后播节奏\r\n            mMediaPlayer?.setOnCompletionListener {\r\n                isPlay = false\r\n                if (mpType > 0) {\r\n                    setPlayVoice(mpType)\r\n                } else {\r\n                    startMP3()\r\n                }\r\n                mpType = -1\r\n            }\r\n            mMediaPlayer?.start()\r\n        } else {\r\n            mpType = type\r\n        }\r\n    }\r\n\r\n    fun start() {\r\n        EventBus.getDefault().post(MessageEventData(BaseConstant.EVENT_CPR_START, \"\", null))\r\n        viewBinding.ivPress.setImageResource(R.mipmap.icon_wm_normal)\r\n        viewBinding.ivLung.setImageResource(R.mipmap.icon_lung_border)\r\n        viewBinding.dashBoard.setImageResource(R.mipmap.icon_wm_bp_2)\r\n        viewBinding.dashBoard2.setImageResource(R.mipmap.icon_wm_bp_2)\r\n        viewBinding.ivPress.visibility = View.INVISIBLE\r\n        viewBinding.pressLayoutView.visibility = View.VISIBLE\r\n        viewBinding.dashBoard.visibility = View.INVISIBLE\r\n        viewBinding.dashBoard2.visibility = View.INVISIBLE\r\n        viewBinding.chart.visibility = View.VISIBLE\r\n        viewBinding.chartQy.visibility = View.VISIBLE\r\n        isStart = true\r\n        startMP3()\r\n    }\r\n\r\n    fun stop(): TrainingDTO {\r\n        //返回成绩结果类\r\n        isStart = false\r\n        val trainingDTO = TrainingDTO()\r\n        mBaseDataDTO?.apply {\r\n            trainingDTO.pressOutTime = TimeUtils.timeParse(timeOut).toString()\r\n            trainingDTO.pressHigh = ERR_PR_HIGH\r\n            trainingDTO.pressLow = ERR_PR_LOW\r\n            trainingDTO.pressLocation = ERR_PR_POSI\r\n            trainingDTO.pressRebound = ERR_PR_UNBACK\r\n            //按压总错误数\r\n            trainingDTO.pressErrorCount = ERR_PR_HIGH + ERR_PR_LOW + ERR_PR_POSI + ERR_PR_UNBACK\r\n            trainingDTO.blowHigh = ERR_QY_HIGH\r\n            trainingDTO.blowLow = ERR_QY_LOW\r\n            trainingDTO.blowIntoStomach = ERR_QY_DEAD\r\n            trainingDTO.blowClose = ERR_QY_CLOSE\r\n            //吹气总错误数\r\n            trainingDTO.blowErrorCount = ERR_QY_HIGH + ERR_QY_LOW + ERR_QY_DEAD + ERR_QY_CLOSE\r\n            trainingDTO.pressTotal = prSum\r\n            trainingDTO.blowTotal = qySum\r\n        }\r\n        counter.let { mHandler.removeCallbacks(it) }\r\n        viewBinding.ctTime.stop()\r\n        if (mMediaPlayer != null) {\r\n            mMediaPlayer?.stop()\r\n            mMediaPlayer?.reset()\r\n            mMediaPlayer = null\r\n        }\r\n        return trainingDTO\r\n    }\r\n\r\n    fun bluetoothDisconnected() {\r\n        setPlayVoice(VOICE_MP3_DIS)\r\n    }\r\n\r\n    /**\r\n     * 播放节奏音乐\r\n     */\r\n    private fun startMP3() {\r\n        if (isYY && isStart) {//节奏音\r\n            mMediaPlayer = MediaPlayer.create(activity, R.raw.wm_bg)\r\n            mMediaPlayer?.isLooping = true\r\n            mMediaPlayer?.seekTo(0)\r\n//            mMediaPlayer?.prepareAsync()\r\n            mMediaPlayer?.setOnPreparedListener { // 装载完毕回调\r\n                mMediaPlayer?.start()\r\n            }\r\n        }\r\n    }\r\n\r\n    private val mHandler = object : Handler(Looper.getMainLooper()) {}\r\n    private val mHandler1 = object : Handler(Looper.getMainLooper()) {}\r\n    private val mHandler2 = object : Handler(Looper.getMainLooper()) {}\r\n    private val mHandler3 = object : Handler(Looper.getMainLooper()) {}\r\n    private val mHandler4 = object : Handler(Looper.getMainLooper()) {}\r\n\r\n    private inner class Counter : Runnable {\r\n        override fun run() {\r\n            viewBinding.ctTime.visibility = View.VISIBLE\r\n            //记录一次按压超时\r\n            viewBinding.ctTime.base = SystemClock.elapsedRealtime()\r\n            viewBinding.ctTime.start()\r\n        }\r\n    }\r\n\r\n    private var prValue = 0\r\n    private var qyValue = 0\r\n    private var err_pr_low = 0\r\n    private var err_pr_high = 0\r\n    private var err_pr_posi = 0\r\n    private var err_qr_unback = 0\r\n    private var isTimeOut = false\r\n\r\n    private fun setViewDate(dataDTO: BaseDataDTO?) {\r\n        if (dataDTO != null) {\r\n            mBaseDataDTO = dataDTO\r\n            if (configBean.prCount > 0 || configBean.qyCount > 0) {\r\n                //计算循环次数\r\n                if (dataDTO.prSum / configBean.prCount > cycleCount && dataDTO.qySum / configBean.qyCount > cycleCount) {\r\n                    cycleCount++\r\n                    //更新循环次数\r\n                    EventBus.getDefault()\r\n                        .post(\r\n                            MessageEventData(\r\n                                BaseConstant.EVENT_SINGLE_DATA_CYCLE,\r\n                                \"$cycleCount\",\r\n                                null\r\n                            )\r\n                        )\r\n                }\r\n            }\r\n\r\n            //吹气频率\r\n            setRate(viewBinding.chartQy, dataDTO.cf)\r\n            //按压\r\n            pr(dataDTO)\r\n            //吹气\r\n            qy(dataDTO)\r\n            if (!isTimeOut && dataDTO.distance == DataVolatile.preDistance.toInt() && dataDTO.bpValue <= 0 && dataDTO.prSum > 0) {\r\n                isTimeOut = true\r\n                mHandler.removeCallbacks(counter)\r\n                mHandler.postDelayed(counter, 5000)\r\n            }\r\n            //更新循环次数\r\n            if (pressCount != dataDTO.prSum && isTimeing) {\r\n                isTimeing = false\r\n                EventBus.getDefault()\r\n                    .post(\r\n                        MessageEventData(\r\n                            BaseConstant.EVENT_CPR_TIMEING,\r\n                            \"\",\r\n                            null\r\n                        )\r\n                    )\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 吹气状态\r\n     */\r\n    private fun qy(dataDTO: BaseDataDTO) {\r\n        //通气道是否打开 0-关闭 1-打开\r\n        if (dataDTO.aisleType == 1) {\r\n            viewBinding.ivAim.visibility = View.INVISIBLE\r\n            if (qyValue != dataDTO.qySum) {\r\n                val qyMax = DataVolatile.max(DataVolatile.QY_valueSet, false)\r\n                when {\r\n                    qyMax in configBean.qyLow()..configBean.qyHigh() -> {//通气正常\r\n                        viewBinding.ivLung.setImageResource(R.mipmap.icon_wm_lung_green)\r\n                    }\r\n                    qyMax in configBean.qyHigh()..100 -> {//通气过大\r\n                        viewBinding.ivLung.setImageResource(R.mipmap.icon_wm_lung_red)\r\n                        setPlayVoice(VOICE_MP3_CQGD)\r\n                    }\r\n                    qyMax < configBean.qyLow() -> {//通气不足\r\n                        viewBinding.ivLung.setImageResource(R.mipmap.icon_wm_lung_yello)\r\n                        setPlayVoice(VOICE_MP3_CQBZ)\r\n                    }\r\n                    qyMax > configBean.qy_max -> {//吹气进胃\r\n                        viewBinding.ivLung.setImageResource(R.mipmap.icon_wm_lung_heart)\r\n                        setPlayVoice(VOICE_MP3_CQJW)\r\n                    }\r\n                }\r\n                //吹气变灰\r\n                mHandler1.removeCallbacks(blowRunnable)\r\n                mHandler1.postDelayed(blowRunnable, 2000)\r\n                stopOutTime()\r\n            }\r\n        } else {\r\n            if (dataDTO.bpValue > 5) {\r\n                stopOutTime()\r\n                setPlayVoice(VOICE_MP3_WDKQD)\r\n            }\r\n            viewBinding.ivAim.visibility = View.VISIBLE\r\n            mHandler4.removeCallbacksAndMessages(null)\r\n            mHandler4.postAtTime(this::setQyAimVisibility, 2000)\r\n        }\r\n        if (dataDTO.bpValue <= 0) {\r\n            //吹气频率清零\r\n            mHandler2.removeCallbacks(runnableCF)\r\n            mHandler2.postDelayed(runnableCF, 10000)\r\n        }\r\n\r\n        qyValue = dataDTO.qySum\r\n        //吹气错误数统计\r\n        viewBinding.tvLungError.text =\r\n            \"${(dataDTO.ERR_QY_CLOSE + dataDTO.ERR_QY_HIGH + dataDTO.ERR_QY_LOW + dataDTO.ERR_QY_DEAD)}\"\r\n    }\r\n\r\n    private fun setQyAimVisibility() {\r\n        viewBinding.ivAim.visibility = View.INVISIBLE\r\n    }\r\n\r\n    /**\r\n     * 按压处理逻辑\r\n     */\r\n    private fun pr(dataDTO: BaseDataDTO) {\r\n        //按压位置 0-错误  1-正确\r\n//        if (dataDTO.psrType == 1) {\r\n        //按压频率\r\n        setRate(viewBinding.chart, dataDTO.pf)\r\n        viewBinding.pressLayoutView.smoothScrollTo(dataDTO.distance)\r\n        if (dataDTO.prSum != prValue) {\r\n\r\n            prValue = dataDTO.prSum\r\n            //暂停超时时间 - 判断是否小于初始值\r\n            stopOutTime()\r\n            //按压位置错误\r\n            if (err_pr_posi != dataDTO.ERR_PR_POSI && dataDTO.psrType == 0) {\r\n                err_pr_posi = dataDTO.ERR_PR_POSI\r\n                setPlayVoice(VOICE_MP3_AYWZCW)\r\n            } else if (err_qr_unback != dataDTO.ERR_PR_UNBACK) {\r\n                //按压未回弹\r\n                err_qr_unback = dataDTO.ERR_PR_UNBACK\r\n                viewBinding.pressLayoutView.setUnBack()\r\n                setPlayVoice(VOICE_MP3_WHT)\r\n            } else {\r\n                //按压不足\r\n                if (err_pr_low != dataDTO.ERR_PR_LOW) {\r\n                    Log.e(\"TAG123\", \"按压错误：${dataDTO.ERR_PR_LOW}\")\r\n                    err_pr_low = dataDTO.ERR_PR_LOW\r\n                    viewBinding.pressLayoutView.setDown()\r\n                    setPlayVoice(VOICE_MP3_AYBZ)\r\n                } else if (err_pr_high != dataDTO.ERR_PR_HIGH) {//按压过大\r\n                    err_pr_high = dataDTO.ERR_PR_HIGH\r\n                    setPlayVoice(VOICE_MP3_AYGD)\r\n                }\r\n            }\r\n            pressCount = dataDTO.prSum\r\n        }\r\n//        }\r\n        //按压位置错误显示错误图标\r\n        if (dataDTO.psrType == 0) {\r\n            viewBinding.ivPressAim.visibility = View.VISIBLE\r\n            mHandler3.removeCallbacksAndMessages(null)\r\n            mHandler3.postAtTime(Runnable {\r\n                viewBinding.ivPressAim.visibility = View.INVISIBLE\r\n            }, 2000)\r\n            stopOutTime()\r\n        } else {\r\n            viewBinding.ivPressAim.visibility = View.INVISIBLE\r\n        }\r\n\r\n        //按压错误数统计\r\n        viewBinding.tvPress.text =\r\n            \"${(dataDTO.ERR_PR_POSI + dataDTO.ERR_PR_LOW + dataDTO.ERR_PR_HIGH + dataDTO.ERR_PR_UNBACK)}\"\r\n        //按压总数\r\n        viewBinding.tvPressTotal.text = \"/${dataDTO.prSum}\"\r\n        viewBinding.tvLungTotal.text = \"/${dataDTO.qySum}\"\r\n    }\r\n\r\n    private fun stopOutTime() {\r\n        //暂停超时时间\r\n        isTimeOut = false\r\n        viewBinding.ctTime.visibility = View.INVISIBLE\r\n        mHandler.removeCallbacks(counter)\r\n        viewBinding.ctTime.stop()\r\n    }\r\n\r\n    //按压吹气频率\r\n    private fun setRate(view: DialChart07View, value: Int) {\r\n        val max = 200\r\n        val min = 0\r\n        val p = value % (max - min + 1) + min\r\n        val pf = p / 200f\r\n        view.setCurrentStatus(pf)\r\n        view.invalidate()\r\n    }\r\n\r\n    /**\r\n     * 吹气图恢复状态\r\n     */\r\n    private val blowRunnable = Runnable {\r\n        viewBinding.ivLung.setImageResource(R.mipmap.icon_lung_border)\r\n        setRate(viewBinding.chartQy, 0)\r\n    }\r\n\r\n    //按压中断 - 开启计时器 频率清零\r\n    private val runnableCF = Runnable {\r\n        DataVolatile.setCF_Value()\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        setRate(viewBinding.chart, 0)\r\n        setRate(viewBinding.chartQy, 0)\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        if (mMediaPlayer != null) {\r\n            mMediaPlayer!!.stop()\r\n            mMediaPlayer!!.release()\r\n            mMediaPlayer = null\r\n        }\r\n        //数据清零\r\n        DataVolatile.dataClear()\r\n    }\r\n\r\n    private var alphaAniShow: AlphaAnimation? = null\r\n    private var alphaAniHide: AlphaAnimation? = null\r\n\r\n    //透明度动画\r\n    private fun alphaAnimation() {\r\n        //显示\r\n        alphaAniShow = AlphaAnimation(0f, 1f) //百分比透明度，从0%到100%显示\r\n        alphaAniShow?.duration = 100 //一秒\r\n\r\n        //隐藏\r\n        alphaAniHide = AlphaAnimation(1f, 0f)\r\n        alphaAniHide?.duration = 100\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pr/perfectrecovery/fragment/CycleFragment.kt b/app/src/main/java/com/pr/perfectrecovery/fragment/CycleFragment.kt
--- a/app/src/main/java/com/pr/perfectrecovery/fragment/CycleFragment.kt	(revision e98ddfca0c316c2a6b9dd4f7ddba67e4f08fbcae)
+++ b/app/src/main/java/com/pr/perfectrecovery/fragment/CycleFragment.kt	(date 1645768271407)
@@ -246,6 +246,8 @@
     private val mHandler2 = object : Handler(Looper.getMainLooper()) {}
     private val mHandler3 = object : Handler(Looper.getMainLooper()) {}
     private val mHandler4 = object : Handler(Looper.getMainLooper()) {}
+    private val mHandler5 = object : Handler(Looper.getMainLooper()) {}
+    private val mHandler6 = object : Handler(Looper.getMainLooper()) {}
 
     private inner class Counter : Runnable {
         override fun run() {
@@ -373,7 +375,18 @@
 //        if (dataDTO.psrType == 1) {
         //按压频率
         setRate(viewBinding.chart, dataDTO.pf)
-        viewBinding.pressLayoutView.smoothScrollTo(dataDTO.distance)
+//        viewBinding.pressLayoutView.smoothScrollTo(dataDTO.distance)
+        //执行三次按压深度
+        viewBinding.pressLayoutView.smoothScrollTo(dataDTO.L_D1)
+        mHandler5.removeCallbacksAndMessages(null)
+        mHandler5.postAtTime(Runnable {
+            viewBinding.pressLayoutView.smoothScrollTo(dataDTO.L_D2)
+            mHandler6.removeCallbacksAndMessages(null)
+            mHandler6.postAtTime(Runnable {
+                viewBinding.pressLayoutView.smoothScrollTo(dataDTO.L_D3)
+            }, 33)
+        }, 33)
+
         if (dataDTO.prSum != prValue) {
 
             prValue = dataDTO.prSum
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/workSpace/perfect-recovery/app/src/main/res/layout/activity_single.xml\" value=\"0.37135416666666665\" />\r\n        <entry key=\"..\\:/workSpace/perfect-recovery/app/src/main/res/layout/activity_train_result.xml\" value=\"0.37135416666666665\" />\r\n        <entry key=\"..\\:/workSpace/perfect-recovery/app/src/main/res/layout/chart_fragment.xml\" value=\"0.37135416666666665\" />\r\n        <entry key=\"..\\:/workSpace/perfect-recovery/app/src/main/res/layout/cycle_fragment.xml\" value=\"0.37135416666666665\" />\r\n        <entry key=\"..\\:/workSpace/perfect-recovery/app/src/main/res/layout/event_fragment.xml\" value=\"0.36564102564102563\" />\r\n        <entry key=\"..\\:/workSpace/perfect-recovery/app/src/main/res/layout/item_bluetooth.xml\" value=\"0.37135416666666665\" />\r\n        <entry key=\"..\\:/workSpace/perfect-recovery/app/src/main/res/layout/layout_bottom_right_light.xml\" value=\"0.36564102564102563\" />\r\n        <entry key=\"..\\:/workspace/perfect-recovery/app/src/main/res/layout/activity_cpr_list.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/workspace/perfect-recovery/app/src/main/res/layout/activity_cpractivity.xml\" value=\"0.4088541666666667\" />\r\n        <entry key=\"..\\:/workspace/perfect-recovery/app/src/main/res/layout/activity_single.xml\" value=\"0.4088541666666667\" />\r\n        <entry key=\"..\\:/workspace/perfect-recovery/app/src/main/res/layout/chart_fragment.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/workspace/perfect-recovery/app/src/main/res/layout/cpr_score_fragment.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/workspace/perfect-recovery/app/src/main/res/layout/cpr_standard_fragment.xml\" value=\"0.264\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"JavaScriptSettings\">\r\n    <option name=\"languageLevel\" value=\"ES6\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision e98ddfca0c316c2a6b9dd4f7ddba67e4f08fbcae)
+++ b/.idea/misc.xml	(date 1645760573593)
@@ -9,9 +9,8 @@
         <entry key="..\:/workSpace/perfect-recovery/app/src/main/res/layout/cycle_fragment.xml" value="0.37135416666666665" />
         <entry key="..\:/workSpace/perfect-recovery/app/src/main/res/layout/event_fragment.xml" value="0.36564102564102563" />
         <entry key="..\:/workSpace/perfect-recovery/app/src/main/res/layout/item_bluetooth.xml" value="0.37135416666666665" />
-        <entry key="..\:/workSpace/perfect-recovery/app/src/main/res/layout/layout_bottom_right_light.xml" value="0.36564102564102563" />
         <entry key="..\:/workspace/perfect-recovery/app/src/main/res/layout/activity_cpr_list.xml" value="0.264" />
-        <entry key="..\:/workspace/perfect-recovery/app/src/main/res/layout/activity_cpractivity.xml" value="0.4088541666666667" />
+        <entry key="..\:/workspace/perfect-recovery/app/src/main/res/layout/activity_cpractivity.xml" value="0.1" />
         <entry key="..\:/workspace/perfect-recovery/app/src/main/res/layout/activity_single.xml" value="0.4088541666666667" />
         <entry key="..\:/workspace/perfect-recovery/app/src/main/res/layout/chart_fragment.xml" value="0.1" />
         <entry key="..\:/workspace/perfect-recovery/app/src/main/res/layout/cpr_score_fragment.xml" value="0.1" />
Index: app/src/main/java/com/pr/perfectrecovery/bean/BaseDataDTO.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pr.perfectrecovery.bean\r\n\r\ndata class BaseDataDTO(\r\n    //电量值：  0-100%\r\n    var electricity: Int = 0,\r\n    //距离值：  30-150\r\n    var distance: Int = 0,\r\n    //气压值：  0-2000ml\r\n    var bpValue: Int = 0,\r\n    //蓝牙连接状态：   0-断开 1-连接\r\n    var blsType: Int = 0,\r\n    //USB连接状态: 0-断开 1-连接\r\n    var usbConnectType: Int = 0,\r\n    //通道打开状态 0-关闭 1-打开\r\n    var aisleType: Int = 0,\r\n    //连接方式  0-蓝牙 1-连接USB\r\n    var connectType: Int = -1,\r\n    //按压位置正确  0-错误  1-正确\r\n    var psrType: Int = -1,\r\n    //工作方式：0——休眠   1——工作    2——待机\r\n    var workType: Int = -1,\r\n    //按压频率：0-200\r\n    var pf: Int = 0,\r\n    //吹气频率：0-200\r\n    var cf: Int = 0,\r\n    //按压次数\r\n    var prSum: Int = 0,\r\n    //吹起次数\r\n    var qySum: Int = 0,\r\n    //按压错误-未回弹\r\n    var ERR_PR_UNBACK: Int = 0,\r\n    //按压错误-按压不足\r\n    var ERR_PR_LOW: Int = 0,\r\n    //按压错误-按压过大\r\n    var ERR_PR_HIGH: Int = 0,\r\n    //按压错误-按压位置错误\r\n    var ERR_PR_POSI: Int = 0,\r\n    //吹气错误-气压不足\r\n    var ERR_QY_LOW: Int = 0,\r\n    //吹气错误-气压过大\r\n    var ERR_QY_HIGH: Int = 0,\r\n    //吹气错误-气压进胃\r\n    var ERR_QY_DEAD: Int = 0,\r\n    //吹气错误-气道未打开错误\r\n    var ERR_QY_CLOSE: Int = 0\r\n) {\r\n    //是否开始\r\n    var isStart = false\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pr/perfectrecovery/bean/BaseDataDTO.kt b/app/src/main/java/com/pr/perfectrecovery/bean/BaseDataDTO.kt
--- a/app/src/main/java/com/pr/perfectrecovery/bean/BaseDataDTO.kt	(revision e98ddfca0c316c2a6b9dd4f7ddba67e4f08fbcae)
+++ b/app/src/main/java/com/pr/perfectrecovery/bean/BaseDataDTO.kt	(date 1645767994738)
@@ -46,4 +46,8 @@
 ) {
     //是否开始
     var isStart = false
+    var L_D1 : Int = 0
+    var L_D2 : Int= 0
+    var L_D3 : Int= 0
+
 }
\ No newline at end of file
Index: app/src/main/java/com/pr/perfectrecovery/fragment/ChartFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pr.perfectrecovery.fragment\r\n\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.blankj.utilcode.util.GsonUtils\r\nimport com.github.mikephil.charting.charts.LineChart\r\nimport com.github.mikephil.charting.components.XAxis\r\nimport com.github.mikephil.charting.components.XAxis.XAxisPosition\r\nimport com.github.mikephil.charting.components.YAxis\r\nimport com.github.mikephil.charting.data.*\r\nimport com.github.mikephil.charting.interfaces.datasets.IBarDataSet\r\nimport com.github.mikephil.charting.interfaces.datasets.ILineDataSet\r\nimport com.pr.perfectrecovery.R\r\nimport com.pr.perfectrecovery.base.BaseConstant\r\nimport com.pr.perfectrecovery.bean.BaseDataDTO\r\nimport com.pr.perfectrecovery.bean.MessageEventData\r\nimport com.pr.perfectrecovery.bean.ConfigBean\r\nimport com.pr.perfectrecovery.databinding.ChartFragmentBinding\r\nimport com.pr.perfectrecovery.fragment.viewmodel.ChartViewModel\r\nimport com.pr.perfectrecovery.livedata.StatusLiveData\r\nimport com.pr.perfectrecovery.utils.DataVolatile\r\nimport com.tencent.mmkv.MMKV\r\nimport org.greenrobot.eventbus.EventBus\r\nimport org.greenrobot.eventbus.Subscribe\r\nimport org.greenrobot.eventbus.ThreadMode\r\nimport java.util.*\r\n\r\n/**\r\n * 曲线\r\n */\r\nclass ChartFragment : Fragment() {\r\n    private lateinit var viewBinding: ChartFragmentBinding\r\n    private lateinit var configBean: ConfigBean\r\n\r\n    companion object {\r\n        fun newInstance() = ChartFragment()\r\n    }\r\n\r\n    private lateinit var viewModel: ChartViewModel\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        viewBinding = ChartFragmentBinding.inflate(layoutInflater)\r\n        return viewBinding.root\r\n    }\r\n\r\n    override fun onActivityCreated(savedInstanceState: Bundle?) {\r\n        super.onActivityCreated(savedInstanceState)\r\n        EventBus.getDefault().register(this)\r\n        viewModel = ViewModelProvider(this).get(ChartViewModel::class.java)\r\n        val jsonString = MMKV.defaultMMKV().decodeString(BaseConstant.MMKV_WM_CONFIGURATION)\r\n        configBean = GsonUtils.fromJson(jsonString, ConfigBean::class.java)\r\n        initView()\r\n    }\r\n\r\n    //吹气量统计\r\n    private var qyValue = 0\r\n\r\n    private fun initView() {\r\n        //曲线图表\r\n        val data: LineData = getData(0f)\r\n        val data1: LineData = getData(DataVolatile.preDistance.toFloat())\r\n        val data2: LineData = getData(0f)\r\n        // add some transparency to the color with \"& 0x90FFFFFF\"\r\n        initLineChart(viewBinding.lineChart, data)\r\n        LineChartUtils.setLineChart(viewBinding.lineChart1, data1)\r\n        initLineChart(viewBinding.lineChart2, data2)\r\n        StatusLiveData.data.observe(requireActivity()) {\r\n            setData(it)\r\n            addEntry(data, viewBinding.lineChart, it.cf.toFloat())\r\n            addEntry(data1, viewBinding.lineChart1, it.distance.toFloat())\r\n            addEntry(data2, viewBinding.lineChart2, it.pf.toFloat())\r\n            if (qyValue != it.qySum) {\r\n                qyValue = it.qySum\r\n                val qyMax = DataVolatile.max(DataVolatile.QY_valueSet, true)\r\n                addBarEntry(DataVolatile.qyValue(DataVolatile.QY_valueSet2), qyMax)\r\n            } else {\r\n                addBarEntry(0, 0)\r\n            }\r\n            //吹气错误数统计\r\n            viewBinding.tvLungCount.text =\r\n                \"${(it.ERR_QY_CLOSE + it.ERR_QY_HIGH + it.ERR_QY_LOW + it.ERR_QY_DEAD)}\"\r\n            //按压错误数统计\r\n            viewBinding.tvHeartCount.text =\r\n                \"${(it.ERR_PR_POSI + it.ERR_PR_LOW + it.ERR_PR_HIGH)}\"\r\n            //按压总数\r\n            viewBinding.tvLungTotal.text = \"/${it.qySum}\"\r\n            viewBinding.tvHeartTotal.text = \"/${it.prSum}\"\r\n        }\r\n\r\n        initBarChart()\r\n        viewBinding.constraintlayout2.setOnClickListener {\r\n            //addBarEntry(Random().nextInt(800))\r\n        }\r\n\r\n        viewBinding.constraintlayout.setOnClickListener {\r\n            addEntry(data, viewBinding.lineChart, 0f)\r\n        }\r\n\r\n        viewBinding.constraintlayout3.setOnClickListener {\r\n            val random = (1..100).random()\r\n            addEntry(data, viewBinding.lineChart1, setValue(random).toFloat())\r\n        }\r\n        setViewData()\r\n    }\r\n\r\n    private fun setValue(value: Int): Int {\r\n        val depth = DataVolatile.preDistance - value\r\n        if (depth > 0 && depth > DataVolatile.preDistance - 5) {\r\n            return 0\r\n        } else if (depth > DataVolatile.PR_HIGH_VALUE) {\r\n            return 7\r\n        } else if (depth in DataVolatile.PR_LOW_VALUE..DataVolatile.PR_HIGH_VALUE) {\r\n            return 5\r\n        } else if (depth < DataVolatile.PR_LOW_VALUE - 5) {\r\n            return 4\r\n        } else if (depth < DataVolatile.PR_LOW_VALUE - 10) {\r\n            return 3\r\n        } else if (depth < DataVolatile.PR_LOW_VALUE - 15) {\r\n            return 2\r\n        } else if (depth < DataVolatile.PR_LOW_VALUE - 20) {\r\n            return 1\r\n        }\r\n        return 0\r\n    }\r\n\r\n    private fun setViewData() {\r\n        viewBinding.tvDepth.text = \"${configBean.depth}cm\"\r\n        viewBinding.tvDepthEnd.text = \"${configBean.depthEnd}cm\"\r\n        viewBinding.tvDepthFrequency.text = \"${configBean.depthFrequency}cpm\"\r\n        viewBinding.tvDepthFrequencyEnd.text = \"${configBean.depthFrequencyEnd}cpm\"\r\n        viewBinding.tvTidalFrequency.text = \"${configBean.tidalFrequency}vpm\"\r\n        viewBinding.tvTidalFrequencyEnd.text = \"${configBean.tidalFrequencyEnd}vpm\"\r\n        viewBinding.tvTidalVolume.text = \"${configBean.tidalVolume}ml\"\r\n        viewBinding.tvTidalVolumeEnd.text = \"${configBean.tidalVolumeEnd}ml\"\r\n    }\r\n\r\n    private fun initLineChart(lineChart: LineChart, lineData: LineData) {\r\n        // apply styling\r\n        // holder.chart.setValueTypeface(mTf);\r\n\r\n        // apply styling\r\n        // holder.chart.setValueTypeface(mTf);\r\n        lineChart.description.isEnabled = false\r\n        lineChart.setTouchEnabled(false)\r\n        lineChart.setPinchZoom(false)\r\n        lineChart.setDrawGridBackground(false)\r\n        lineChart.setNoDataText(\"\")\r\n        val xAxis: XAxis = lineChart.xAxis\r\n        xAxis.setDrawGridLines(false)\r\n        xAxis.setDrawAxisLine(false)\r\n        xAxis.granularity = 1f\r\n//        xAxis.setLabelCount(30, true)\r\n        xAxis.position = XAxisPosition.BOTTOM\r\n\r\n        val leftAxis: YAxis = lineChart.axisLeft\r\n        leftAxis.setLabelCount(5, false)\r\n        leftAxis.axisMinimum = 0f // this replaces setStartAtZero(true)\r\n\r\n        val rightAxis: YAxis = lineChart.axisRight\r\n        rightAxis.setLabelCount(5, false)\r\n        rightAxis.setDrawGridLines(false)\r\n        rightAxis.axisMinimum = 0f // this replaces setStartAtZero(true)\r\n        (lineData.getDataSetByIndex(0) as LineDataSet).setDrawCircles(false)\r\n\r\n        xAxis.isEnabled = false\r\n        leftAxis.isEnabled = false\r\n        rightAxis.isEnabled = false\r\n        xAxis.textColor = Color.WHITE\r\n\r\n        val l = lineChart.legend\r\n        l.isEnabled = false\r\n\r\n        // set data\r\n        lineChart.data = lineData\r\n        // do not forget to refresh the chart\r\n        // holder.chart.invalidate();\r\n\r\n        // do not forget to refresh the chart\r\n        // holder.chart.invalidate();\r\n        lineChart.animateX(750)\r\n    }\r\n\r\n    var mBarDataSet: BarDataSet? = null\r\n    private fun initBarChart() {\r\n        viewBinding.barChart.apply {\r\n            setDrawBorders(false) //显示边界\r\n            setDrawBarShadow(false) //设置每个直方图阴影为false\r\n            setDrawValueAboveBar(true) //这里设置为true每一个直方图的值就会显示在直方图的顶部\r\n            description.isEnabled = false //设置描述文字不显示，默认显示\r\n            setDrawGridBackground(false) //设置不显示网格\r\n            //setBackgroundColor(Color.parseColor(\"#F3F3F3\")) //设置图表的背景颜色\r\n            legend.isEnabled = false //设置不显示比例图\r\n            setScaleEnabled(true) //设置是否可以缩放\r\n            setTouchEnabled(false)\r\n            scaleX = 1.5f\r\n            //x轴设置\r\n            xAxis.apply {\r\n                position = XAxis.XAxisPosition.BOTTOM//X轴的位置 默认为上面\r\n                setDrawGridLines(false)  //是否绘制X轴上的网格线（背景里面的竖线）\r\n                //axisRight.isEnabled = false//隐藏右侧Y轴   默认是左右两侧都有Y轴\r\n                granularity = 1f // only intervals of 1 day\r\n                labelCount = 100\r\n                /*valueFormatter = object : ValueFormatter() {\r\n                    override fun getFormattedValue(value: Float): String {\r\n                      //TODO 自定义X轴label格式\r\n                    }\r\n                }*/\r\n            }\r\n            xAxis.isEnabled = false\r\n            axisLeft.isEnabled = false\r\n            axisRight.isEnabled = false\r\n\r\n            // if more than 60 entries are displayed in the chart, no values will be\r\n            // drawny\r\n//            setMaxVisibleValueCount(6)\r\n            //保证Y轴从0开始，不然会上移一点\r\n            axisLeft.axisMinimum = 0f\r\n            axisRight.axisMinimum = 0f\r\n            mBarDataSet = BarDataSet(values, \"Data Set\")\r\n            //set1.setColors(*ColorTemplate.VORDIPLOM_COLORS)\r\n            mBarDataSet!!.setDrawValues(false)\r\n            val dataSets = ArrayList<IBarDataSet>()\r\n            dataSets.add(mBarDataSet!!)\r\n            val barData = BarData(dataSets)\r\n            data = barData\r\n        }\r\n    }\r\n\r\n    private val values = ArrayList<BarEntry>()\r\n    private val colors = ArrayList<Int>()\r\n\r\n    //这里要进行图像绘制，所以要切回UI线程，否则会报错\r\n    private fun addBarEntry(value: Int, value2: Int) {\r\n        Log.e(\"addBarEntry\", \"$value\")\r\n        viewBinding.barChart.apply {\r\n            if (barData != null) {\r\n//                barData.addEntry(BarEntry(value.toFloat(), 0f), 0)\r\n                val entryCount = (data.getDataSetByIndex(0) as BarDataSet).entryCount\r\n                data.addEntry(BarEntry(entryCount.toFloat(), value.toFloat()), 0)\r\n                data.notifyDataChanged()\r\n                when {\r\n                    value2 in configBean.qyLow()..configBean.qyHigh() -> {\r\n                        colors.add(\r\n                            ContextCompat.getColor(requireContext(), R.color.color_37B48B)\r\n                        )\r\n                    }\r\n                    value2 < configBean.qyLow() -> {\r\n                        colors.add(\r\n                            ContextCompat.getColor(requireContext(), R.color.color_FDC457)\r\n                        )\r\n                    }\r\n                    value2 > configBean.qy_max -> {\r\n                        colors.add(\r\n                            ContextCompat.getColor(requireContext(), R.color.color_text_selected)\r\n                        )\r\n                    }\r\n                }\r\n                mBarDataSet!!.colors = colors\r\n                notifyDataSetChanged()\r\n                //设置在图表中显示的最大X轴数量\r\n                setVisibleXRangeMaximum(30f)\r\n                //这里用29是因为30的话，最后一条柱子只显示了一半\r\n                moveViewToX(barData.entryCount.toFloat() - 29)\r\n//                setBorderWidth(0.3f)\r\n                //            moveViewToAnimated(entryCount - 4f, value.toFloat(), YAxis.AxisDependency.RIGHT, 1000)\r\n//                val mMatrix = Matrix()\r\n//                mMatrix.postScale(1.5f, 1f)\r\n//                viewPortHandler.refresh(mMatrix, this, false)\r\n//                animateY(1000)\r\n            }\r\n        }\r\n        viewBinding.barChart.invalidate()\r\n    }\r\n\r\n    private fun setData(data: BaseDataDTO) {\r\n        viewBinding.tvLungTotal.text = \"/${configBean.prCount * configBean.cycles}\"\r\n        viewBinding.tvLungCount.text = \"${data.qySum}\"\r\n        viewBinding.tvHeartTotal.text = \"/${configBean.qyCount * configBean.cycles}\"\r\n        viewBinding.tvHeartCount.text = \"${data.prSum}\"\r\n    }\r\n\r\n    private fun getData(value: Float): LineData {\r\n        val values = ArrayList<Entry>()\r\n//        values.add(Entry(0f, value.toFloat()))\r\n        // create a dataset and give it a type\r\n        val lineDataSet = LineDataSet(values, \"DataSet 1\")\r\n        lineDataSet.lineWidth = 1.5f\r\n        lineDataSet.circleRadius = 5f\r\n        lineDataSet.circleHoleRadius = 0f\r\n        lineDataSet.valueTextColor = Color.WHITE\r\n        lineDataSet.color = Color.parseColor(\"#3DB38E\")\r\n        lineDataSet.setCircleColor(Color.parseColor(\"#3DB38E\"))\r\n        lineDataSet.highLightColor = Color.parseColor(\"#3DB38E\")\r\n        lineDataSet.setDrawValues(true)\r\n        lineDataSet.axisDependency = YAxis.AxisDependency.LEFT\r\n        lineDataSet.mode = LineDataSet.Mode.CUBIC_BEZIER\r\n\r\n        val sets = ArrayList<ILineDataSet>()\r\n        val d = LineDataSet(values, \"\")\r\n        d.lineWidth = 0f\r\n        d.circleRadius = 5f\r\n        d.circleHoleRadius = 0f\r\n        d.valueTextColor = Color.WHITE\r\n        d.color = Color.parseColor(\"#3DB38E\")\r\n        d.setCircleColor(Color.parseColor(\"#3DB38E\"))\r\n        d.highLightColor = Color.parseColor(\"#3DB38E\")\r\n        d.setDrawValues(false)\r\n        d.axisDependency = YAxis.AxisDependency.LEFT\r\n        d.mode = LineDataSet.Mode.CUBIC_BEZIER\r\n        d.highLightColor = Color.argb(0, 0, 0, 0)\r\n        d.setCircleColor(Color.argb(0, 0, 0, 0))\r\n        d.color = Color.argb(0, 0, 0, 0)\r\n        d.addEntry(Entry(0f, value))\r\n\r\n        sets.add(d)\r\n        sets.add(lineDataSet)\r\n        // create a data object with the data sets\r\n        return LineData(sets)\r\n    }\r\n\r\n    /**\r\n     * 动态添加数据\r\n     * 在一个LineChart中存放的折线，其实是以索引从0开始编号的\r\n     *\r\n     * @param yValues y值\r\n     */\r\n    private var x = 20\r\n    private fun addEntry(lineData: LineData, lineChart: LineChart, yValues: Float) {\r\n        val entryCount = (lineData.getDataSetByIndex(1) as LineDataSet).entryCount\r\n        val entry = Entry(\r\n            entryCount.toFloat(), yValues\r\n        )\r\n        // 创建一个点\r\n        lineData.addEntry(entry, 1) // 将entry添加到指定索引处的折线中\r\n        lineChart.data = lineData\r\n        //通知数据已经改变\r\n        lineData.notifyDataChanged()\r\n        lineChart.notifyDataSetChanged()\r\n        //通知数据已经改变\r\n        lineData.notifyDataChanged()\r\n        lineChart.notifyDataSetChanged()\r\n        //把yValues移到指定索引的位置\r\n        lineChart.moveViewToAnimated(entryCount - 4f, yValues, YAxis.AxisDependency.LEFT, 1000)\r\n        lineChart.setVisibleXRangeMaximum(30f)\r\n//        lineChart.moveViewToX((lineData.entryCount - 4).toFloat())/**/\r\n        lineChart.moveViewToX((lineData.entryCount - 29).toFloat())\r\n        lineChart.invalidate()\r\n    }\r\n\r\n    @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\r\n    public fun onEvent(event: MessageEventData) {\r\n        if (event.code == BaseConstant.EVENT_SINGLE_CHART_START) {\r\n            //启动刷新界面数据\r\n            viewBinding.ivLung.setImageDrawable(resources.getDrawable(R.mipmap.icon_wm_chart_lung_red))\r\n            viewBinding.ivHeart.setImageDrawable(resources.getDrawable(R.mipmap.icon_wm_chart_heart_red))\r\n        }\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        EventBus.getDefault().unregister(this)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pr/perfectrecovery/fragment/ChartFragment.kt b/app/src/main/java/com/pr/perfectrecovery/fragment/ChartFragment.kt
--- a/app/src/main/java/com/pr/perfectrecovery/fragment/ChartFragment.kt	(revision e98ddfca0c316c2a6b9dd4f7ddba67e4f08fbcae)
+++ b/app/src/main/java/com/pr/perfectrecovery/fragment/ChartFragment.kt	(date 1645760409649)
@@ -147,9 +147,6 @@
     private fun initLineChart(lineChart: LineChart, lineData: LineData) {
         // apply styling
         // holder.chart.setValueTypeface(mTf);
-
-        // apply styling
-        // holder.chart.setValueTypeface(mTf);
         lineChart.description.isEnabled = false
         lineChart.setTouchEnabled(false)
         lineChart.setPinchZoom(false)
@@ -170,7 +167,6 @@
         rightAxis.setLabelCount(5, false)
         rightAxis.setDrawGridLines(false)
         rightAxis.axisMinimum = 0f // this replaces setStartAtZero(true)
-        (lineData.getDataSetByIndex(0) as LineDataSet).setDrawCircles(false)
 
         xAxis.isEnabled = false
         leftAxis.isEnabled = false
@@ -182,8 +178,6 @@
 
         // set data
         lineChart.data = lineData
-        // do not forget to refresh the chart
-        // holder.chart.invalidate();
 
         // do not forget to refresh the chart
         // holder.chart.invalidate();
@@ -221,8 +215,6 @@
             axisRight.isEnabled = false
 
             // if more than 60 entries are displayed in the chart, no values will be
-            // drawny
-//            setMaxVisibleValueCount(6)
             //保证Y轴从0开始，不然会上移一点
             axisLeft.axisMinimum = 0f
             axisRight.axisMinimum = 0f
@@ -271,7 +263,6 @@
                 setVisibleXRangeMaximum(30f)
                 //这里用29是因为30的话，最后一条柱子只显示了一半
                 moveViewToX(barData.entryCount.toFloat() - 29)
-//                setBorderWidth(0.3f)
                 //            moveViewToAnimated(entryCount - 4f, value.toFloat(), YAxis.AxisDependency.RIGHT, 1000)
 //                val mMatrix = Matrix()
 //                mMatrix.postScale(1.5f, 1f)
@@ -294,27 +285,29 @@
 //        values.add(Entry(0f, value.toFloat()))
         // create a dataset and give it a type
         val lineDataSet = LineDataSet(values, "DataSet 1")
-        lineDataSet.lineWidth = 1.5f
-        lineDataSet.circleRadius = 5f
+        lineDataSet.lineWidth = 1.3f
+        lineDataSet.circleRadius = 0f
         lineDataSet.circleHoleRadius = 0f
         lineDataSet.valueTextColor = Color.WHITE
         lineDataSet.color = Color.parseColor("#3DB38E")
         lineDataSet.setCircleColor(Color.parseColor("#3DB38E"))
         lineDataSet.highLightColor = Color.parseColor("#3DB38E")
         lineDataSet.setDrawValues(true)
+        lineDataSet.setDrawCircles(false)
         lineDataSet.axisDependency = YAxis.AxisDependency.LEFT
         lineDataSet.mode = LineDataSet.Mode.CUBIC_BEZIER
 
         val sets = ArrayList<ILineDataSet>()
         val d = LineDataSet(values, "")
         d.lineWidth = 0f
-        d.circleRadius = 5f
+        d.circleRadius = 0f
         d.circleHoleRadius = 0f
-        d.valueTextColor = Color.WHITE
-        d.color = Color.parseColor("#3DB38E")
-        d.setCircleColor(Color.parseColor("#3DB38E"))
-        d.highLightColor = Color.parseColor("#3DB38E")
+        d.valueTextColor = Color.TRANSPARENT
+        d.color = Color.TRANSPARENT
+        d.setCircleColor(Color.TRANSPARENT)
+        d.highLightColor = Color.TRANSPARENT
         d.setDrawValues(false)
+        d.setDrawCircles(false)
         d.axisDependency = YAxis.AxisDependency.LEFT
         d.mode = LineDataSet.Mode.CUBIC_BEZIER
         d.highLightColor = Color.argb(0, 0, 0, 0)
Index: app/src/main/java/com/pr/perfectrecovery/utils/DataVolatile.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.pr.perfectrecovery.utils\r\n\r\nimport android.util.Log\r\nimport com.pr.perfectrecovery.bean.BaseDataDTO\r\nimport com.pr.perfectrecovery.utils.TestVolatile.Err_PrTotal\r\nimport com.pr.perfectrecovery.utils.TestVolatile.top_flag\r\nimport kotlin.math.abs\r\n\r\nobject DataVolatile {\r\n    //电量值：  0-100%\r\n    var VI_Value = 0\r\n\r\n    //距离值：  30-150\r\n    var L_Value = 0\r\n\r\n    //气压值：  0-2000ml\r\n    var QY_Value = 0\r\n\r\n    //蓝牙连接状态：   0-断开 1-连接\r\n    var BLS_Value = 0\r\n\r\n    //USB连接状态: 0-断开 1-连接\r\n    var ULS_Value = 0\r\n\r\n    //通道打开状态 0-关闭 1-打开\r\n    var TOS_Value = 0\r\n\r\n    //连接方式  0-蓝牙 1-连接USB\r\n    var LKS_Value = 0\r\n\r\n    //按压位置正确  0-错误  1-正确\r\n    var PSR_Value = 0\r\n\r\n    //工作方式：00——休眠   01——工作    02——待机\r\n    var WS_Value = 0\r\n\r\n    //按压频率：0-200\r\n    var PF_Value = 0\r\n\r\n    //吹气频率：0-200\r\n    var CF_Value = 0\r\n\r\n    //按压次数\r\n    var PR_SUM = 0\r\n\r\n    //吹气次数\r\n    var QY_SUM = 0\r\n\r\n    //按压上升或下降标志位\r\n    var low_flag = 0\r\n\r\n    val dataDTO = BaseDataDTO()\r\n\r\n    var Qliang = 0\r\n\r\n    var L_valueSet = intArrayOf(1)\r\n    var QY_valueSet = mutableListOf<Int>()\r\n    var QY_valueSet2 = mutableListOf<Int>()\r\n    var pt_valueSet = mutableListOf<Int>()\r\n\r\n    /**\r\n     * array 数据列表\r\n     * isClear 清除数据集合\r\n     */\r\n    fun max(array: List<Int>, isClear: Boolean): Int {\r\n        var maximum = 0\r\n        for (i in array.indices) {\r\n            if (maximum < array[i]) {\r\n                maximum = array[i]\r\n            }\r\n        }\r\n        if (isClear) {\r\n            QY_valueSet.clear()\r\n        }\r\n        return maximum\r\n    }\r\n\r\n    /**\r\n     * 获取吹气值和\r\n     */\r\n    fun qyValue(array: List<Int>): Int {\r\n        var sum = 0\r\n        for (i in array.indices) {\r\n            sum += i\r\n        }\r\n        QY_valueSet2.clear()\r\n        return sum\r\n    }\r\n\r\n    @JvmStatic\r\n    fun main(args: Array<String>) {\r\n        val data = \"fe06040a0b01052d5303030405010723090ab261\" //1、先将接收到的数据转调用工具类的方法换成字符串\r\n        //System.out.print(DataFormatUtils.getCrc16(DataFormatUtils.hexStr2Bytes(data)));\r\n        parseString(data)\r\n    }\r\n\r\n    /**\r\n     * 解析蓝发送的数据\r\n     *\r\n     * @param data\r\n     */\r\n    fun parseString(data: String?): BaseDataDTO {\r\n        //System.out.print(DataFormatUtils.getCrc16(DataFormatUtils.hexStr2Bytes(data)));\r\n        if (data != null && data.length == 40) {\r\n            //模型状态需先判断\r\n            val state = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        28,\r\n                        30\r\n                    )\r\n                )\r\n            )\r\n            if (state and 1 == 1) {\r\n                BLS_Value = 1\r\n            } else {\r\n                BLS_Value = 0\r\n            }\r\n            if (state and 2 == 2) {\r\n                ULS_Value = 1\r\n            } else {\r\n                ULS_Value = 0\r\n            }\r\n            if (state and 4 == 4) {\r\n                TOS_Value = 1\r\n            } else {\r\n                TOS_Value = 0\r\n            }\r\n            if (state and 8 == 8) {\r\n                LKS_Value = 1\r\n            } else {\r\n                LKS_Value = 0\r\n            }\r\n//            if (state and 16 == 16) {\r\n//                PSR_Value = 1\r\n//            } else {\r\n//                PSR_Value = 0\r\n//            }\r\n            if (state and 8 == 8) {\r\n                PSR_Value = 1\r\n            } else {\r\n                PSR_Value = 0\r\n            }\r\n            //按压距离\r\n            val L_d1 = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        12,\r\n                        14\r\n                    )\r\n                )\r\n            )\r\n            val L_d2 = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        14,\r\n                        16\r\n                    )\r\n                )\r\n            )\r\n            val L_d3 = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        16,\r\n                        18\r\n                    )\r\n                )\r\n            )\r\n            L_Value = selectValue_P(L_d1, L_d2, L_d3)\r\n            //清空频率\r\n            pt(L_Value)\r\n            //吹气数据\r\n            val QY_d1 = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        18,\r\n                        20\r\n                    )\r\n                )\r\n            )\r\n            val QY_d2 = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        20,\r\n                        22\r\n                    )\r\n                )\r\n            )\r\n            val QY_d3 = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        22,\r\n                        24\r\n                    )\r\n                )\r\n            )\r\n\r\n            //不做气压值的算法处理\r\n            QY_Value = selectValue_QY(QY_d1, QY_d2, QY_d3)\r\n\r\n            //频率\r\n            //PF_Value=DataFormatUtils.byteArrayToInt( DataFormatUtils.hexStr2Bytes(\"00\" + data.substring(24, 26)));\r\n            // CF_Value=DataFormatUtils.byteArrayToInt( DataFormatUtils.hexStr2Bytes(\"00\" + data.substring(26, 28)));\r\n            VI_Value = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        30,\r\n                        32\r\n                    )\r\n                )\r\n            )\r\n        }\r\n        val stringBuffer = StringBuffer()\r\n        stringBuffer.append(\"电量值：\").append(VI_Value)\r\n        stringBuffer.append(\"距离值：\").append(L_Value)\r\n        stringBuffer.append(\"气压值：\").append(QY_Value)\r\n        stringBuffer.append(\"蓝牙连接值：\").append(BLS_Value)\r\n        stringBuffer.append(\"USB连接值：\").append(ULS_Value)\r\n        stringBuffer.append(\"通道打开状态值：\").append(TOS_Value)\r\n        stringBuffer.append(\"连接方式值：\").append(LKS_Value)\r\n        stringBuffer.append(\"按压位置正确值：\").append(PSR_Value)\r\n        stringBuffer.append(\"工作方式值：\").append(WS_Value)\r\n        stringBuffer.append(\"按压频率值：\").append(PF_Value)\r\n        stringBuffer.append(\"吹气频率值：\").append(CF_Value)\r\n\r\n        dataDTO.prSum = PR_SUM\r\n        dataDTO.qySum = QY_SUM\r\n        dataDTO.electricity = VI_Value\r\n        dataDTO.distance = L_Value\r\n        dataDTO.bpValue = QY_Value\r\n        dataDTO.blsType = BLS_Value\r\n        dataDTO.usbConnectType = ULS_Value\r\n        dataDTO.aisleType = TOS_Value\r\n        dataDTO.connectType = LKS_Value\r\n        dataDTO.psrType = PSR_Value\r\n        dataDTO.workType = WS_Value\r\n        dataDTO.cf = CF_Value\r\n        dataDTO.pf = PF_Value\r\n        dataDTO.isStart = isStart\r\n        dataDTO.ERR_PR_HIGH = ERR_PR_HIGH\r\n        dataDTO.ERR_PR_LOW = ERR_PR_LOW\r\n        dataDTO.ERR_PR_POSI = ERR_PR_POSI\r\n        dataDTO.ERR_QY_CLOSE = ERR_QY_CLOSE\r\n        dataDTO.ERR_QY_DEAD = ERR_QY_DEAD\r\n        dataDTO.ERR_QY_HIGH = ERR_QY_HIGH\r\n        dataDTO.ERR_QY_LOW = ERR_QY_LOW\r\n        dataDTO.ERR_PR_UNBACK = ERR_PR_UNBACK\r\n        return dataDTO\r\n    }\r\n\r\n    var isStart = false\r\n    fun dataClear() {\r\n        isStart = false\r\n        //电量值：  0-100%\r\n        VI_Value = 0\r\n        //距离值：  30-150\r\n        L_Value = 0\r\n        //气压值：  0-2000ml\r\n        QY_Value = 0\r\n        //蓝牙连接状态：   0-断开 1-连接\r\n        BLS_Value = 0\r\n        //按压频率：0-200\r\n        PF_Value = 0\r\n        //吹气频率：0-200\r\n        CF_Value = 0\r\n        //按压次数\r\n        PR_SUM = 0\r\n        //吹气次数\r\n        QY_SUM = 0\r\n        ERR_PR_UNBACK = 0\r\n        ERR_PR_HIGH = 0\r\n        ERR_PR_LOW = 0\r\n        ERR_PR_POSI = 0\r\n        ERR_QY_CLOSE = 0\r\n        ERR_QY_DEAD = 0\r\n        ERR_QY_HIGH = 0\r\n        ERR_QY_LOW = 0\r\n    }\r\n\r\n    fun setCF_Value() {\r\n        CF_Value = 0\r\n    }\r\n\r\n    var preTimePress: Long = 0\r\n\r\n    /*\r\n* 获取初始位置，每次连接成功后调用一次初始化方法\r\n* */\r\n\r\n    var preDistance: Long = 180\r\n\r\n    fun initPreDistance(data: String?) {\r\n        // long value=180;\r\n        if (data != null && data.length == 40) {\r\n            //按压距离\r\n            val L_d1 = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        12,\r\n                        14\r\n                    )\r\n                )\r\n            )\r\n            val L_d2 = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        14,\r\n                        16\r\n                    )\r\n                )\r\n            )\r\n            val L_d3 = DataFormatUtils.byteArrayToInt(\r\n                DataFormatUtils.hexStr2Bytes(\r\n                    \"00\" + data.substring(\r\n                        16,\r\n                        18\r\n                    )\r\n                )\r\n            )\r\n            preDistance = ((L_d1 + L_d2 + L_d3) / 3).toLong()\r\n        }\r\n    }\r\n\r\n    var UNBACK_FLAG = 0\r\n\r\n    /*\r\n    * 根据按压三次相邻的距离值找到有效值。\r\n    * */\r\n    fun selectValue_P(L_d1: Int, L_d2: Int, L_d3: Int): Int {\r\n        var value = 0\r\n        Log.e(\"TAG6\", \"$L_d1  $L_d2  $L_d3\")\r\n        if (abs(preDistance - L_d1) < 10 || abs(preDistance - L_d2) < 10 || abs(preDistance - L_d3) < 10\r\n        ) {\r\n            return preDistance.toInt()\r\n        }\r\n        // int low_flag=0;\r\n        if (L_d1 > L_d2) {\r\n            if (L_d2 >= L_d3) {\r\n                value = L_d3\r\n                low_flag = 0\r\n                if (UNBACK_FLAG == 1) {\r\n                    ERR_PR_UNBACK++\r\n                    Log.e(\"TAG7\", \"未回弹\")\r\n                    UNBACK_FLAG = 0\r\n                }\r\n            } else {\r\n                if (low_flag == 0) {//防止在上升到最高点出现抖动导致次数误增加\r\n                    low_flag = 1\r\n                    PR_SUM++\r\n                    //  Log.e(\"TAG5\", \"$PR_SUM\")\r\n                    Err_PrTotal(L_d2)\r\n                    Log.e(\"TAG4\", \"$L_d2\")\r\n                    val changTimePress = System.currentTimeMillis()\r\n                    if (PR_SUM > 1) {\r\n                        val time = changTimePress - preTimePress + 40\r\n                        Log.e(\"TAG6\", \"$L_d2\")\r\n                        PF_Value = (60000 / time).toInt()\r\n                        if (PF_Value > 130) {\r\n                            PF_Value = 130;\r\n                        } else if (PF_Value < 80) {\r\n                            PF_Value = 80;\r\n                        }\r\n                        Log.e(\"TAG6\", \"$PF_Value\")\r\n                    }\r\n                    preTimePress = changTimePress\r\n                }\r\n                value = L_d2\r\n            }\r\n        } else if (L_d2 < L_d3) {\r\n            if (low_flag == 0) {\r\n                low_flag = 1\r\n                PR_SUM++\r\n                // Log.e(\"TAG5\", \"$PR_SUM\")\r\n                Err_PrTotal(L_d1)\r\n                // Log.e(\"TAG6\", \"$L_d1\")\r\n                val changTimePress = System.currentTimeMillis()\r\n                if (PR_SUM > 1) {\r\n                    val time = changTimePress - preTimePress + 70\r\n                    PF_Value = (60000 / time).toInt()\r\n                    if (PF_Value > 130) {\r\n                        PF_Value = 130;\r\n                    } else if (PF_Value < 80) {\r\n                        PF_Value = 80;\r\n                    }\r\n                    // Log.e(\"TAG6\", \"$PF_Value\")\r\n                }\r\n                preTimePress = changTimePress\r\n                return L_d1\r\n            } else {\r\n                if (abs(preDistance - L_d3) < 15) {\r\n                    UNBACK_FLAG = 0\r\n                    Log.e(\"TAG7\", \"回到初始位置，复位未回弹\")\r\n                } else {\r\n                    UNBACK_FLAG = 1\r\n                }\r\n                value = L_d3\r\n            }\r\n\r\n        } else {\r\n            if (abs(preDistance - L_d2) < 15) {\r\n                UNBACK_FLAG = 0\r\n                Log.e(\"TAG7\", \"回到初始位置，复位未回弹\")\r\n            } else {\r\n                UNBACK_FLAG = 1\r\n            }\r\n            value = L_d2\r\n        }\r\n        // Log.e(\"TAG1\", \"$value\")\r\n        // validDistance=value;\r\n        return value\r\n    }\r\n\r\n    //按压错误-按压未回弹\r\n    var ERR_PR_UNBACK = 0\r\n\r\n    //按压错误-按压不足\r\n    var ERR_PR_LOW = 0\r\n\r\n    //按压错误-按压过大\r\n    var ERR_PR_HIGH = 0\r\n\r\n    //按压错误-按压位置错误\r\n    var ERR_PR_POSI = 0\r\n\r\n    /**\r\n     * 初始化按压区间值\r\n     */\r\n    var PR_LOW_VALUE = 45\r\n    var PR_HIGH_VALUE = 60\r\n\r\n    private fun Err_PrTotal(l: Int) {\r\n\r\n        if (PSR_Value == 0) {\r\n            ERR_PR_POSI++\r\n        } else {\r\n            var value = abs(preDistance - l)\r\n            if (value < PR_LOW_VALUE) {\r\n                ERR_PR_LOW++\r\n                //   Log.e(\"TAG1\", \"按压不足\")\r\n                //    Log.e(\"TAG1\", \"$value\")\r\n            } else if (value > PR_HIGH_VALUE) {\r\n                ERR_PR_HIGH++\r\n                //    Log.e(\"TAG2\", \"按压过深\")\r\n                //   Log.e(\"TAG2\", \"$value\")\r\n            }\r\n            // Log.e(\"TAG3\", \"$value\")\r\n        }\r\n    }\r\n\r\n    //吹气错误-气压不足\r\n    var ERR_QY_LOW = 0\r\n\r\n    //吹气错误-气压过大\r\n    var ERR_QY_HIGH = 0\r\n\r\n    //吹气错误-气压进胃\r\n    var ERR_QY_DEAD = 0\r\n\r\n    //吹气错误-气道未打开错误\r\n    var ERR_QY_CLOSE = 0\r\n\r\n    fun ERR_QyTotal(value: Int) {\r\n        if (TOS_Value == 0) {\r\n            ERR_QY_CLOSE++\r\n        } else {\r\n            if (value in 1..39) {\r\n                ERR_QY_LOW++\r\n            } else if (value in 81..120) {\r\n                ERR_QY_HIGH++\r\n            } else if (value > 120) {\r\n                ERR_QY_DEAD++\r\n            }\r\n        }\r\n    }\r\n\r\n    var preTimeQY: Long = 0\r\n\r\n    /*\r\n * 根据吹气三次相邻的气压值找到有效值。\r\n * */\r\n    fun selectValue_QY(QY_d1: Int, QY_d2: Int, QY_d3: Int): Int {\r\n        var value = 0\r\n        if (QY_d1 > 0 || QY_d2 > 0 || QY_d3 > 0) {\r\n            top_flag = 1\r\n            Qliang = (QY_d1 + QY_d2 + QY_d3) * 30\r\n        }\r\n        if (QY_d1 == 0 && QY_d2 == 0 && QY_d3 == 0) {\r\n            if (top_flag == 1) {\r\n                ERR_QyTotal(max(QY_valueSet, false))//每次筛选最大吹气值，去做错误次数的判断\r\n                val changTimePress = System.currentTimeMillis()\r\n                ++QY_SUM\r\n                top_flag = 0\r\n                Qliang = 0\r\n                if (QY_SUM > 1) {\r\n                    val time = changTimePress - preTimeQY\r\n                    CF_Value = (60000 / time).toInt()\r\n                }\r\n                preTimeQY = changTimePress\r\n            }\r\n        }\r\n        value = if (QY_d1 <= QY_d2) {\r\n            if (QY_d2 <= QY_d3) {\r\n                QY_d3\r\n            } else {\r\n                //  top_flag=1;\r\n                QY_d2\r\n            }\r\n        } else {\r\n            if (QY_d2 >= QY_d3) {\r\n                QY_d3\r\n            } else {\r\n                QY_d2\r\n            }\r\n        }\r\n        if (value > 0) {\r\n            QY_valueSet2.add(value)\r\n            QY_valueSet.add(value)\r\n        }\r\n        return value\r\n    }\r\n\r\n\r\n    //判断按压是否停止\r\n    private const val count = 20\r\n    private fun pt(p: Int): Boolean {\r\n        if (p > (preDistance - 5)) {\r\n            if (pt_valueSet.size == count) pt_valueSet.removeFirst()\r\n            pt_valueSet.add(p)\r\n            if (pt_valueSet.size == count) {\r\n                pt_valueSet.clear()\r\n                PF_Value = 0\r\n                return true\r\n            }\r\n        } else {\r\n            pt_valueSet.clear()\r\n        }\r\n        return false\r\n    }\r\n\r\n    fun getData(): BaseDataDTO? {\r\n        return dataDTO\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pr/perfectrecovery/utils/DataVolatile.kt b/app/src/main/java/com/pr/perfectrecovery/utils/DataVolatile.kt
--- a/app/src/main/java/com/pr/perfectrecovery/utils/DataVolatile.kt	(revision e98ddfca0c316c2a6b9dd4f7ddba67e4f08fbcae)
+++ b/app/src/main/java/com/pr/perfectrecovery/utils/DataVolatile.kt	(date 1645768032591)
@@ -166,6 +166,10 @@
                     )
                 )
             )
+            //三次按压深度
+            dataDTO.L_D1 = L_d1
+            dataDTO.L_D2 = L_d2
+            dataDTO.L_D3 = L_d3
             L_Value = selectValue_P(L_d1, L_d2, L_d3)
             //清空频率
             pt(L_Value)
@@ -223,6 +227,7 @@
         stringBuffer.append("按压频率值：").append(PF_Value)
         stringBuffer.append("吹气频率值：").append(CF_Value)
 
+
         dataDTO.prSum = PR_SUM
         dataDTO.qySum = QY_SUM
         dataDTO.electricity = VI_Value
